{"version":3,"file":"404.e6c3f8474c04b5b6857c.bundle.js","mappings":"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","sources":["webpack://tgstation-server-control-panel/./src/components/utils/JsonViewer.tsx","webpack://tgstation-server-control-panel/./src/utils/globalObjects.ts","webpack://tgstation-server-control-panel/./src/components/views/User/Edit.tsx","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Badge.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/InputGroup.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Row.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Tab.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabContainer.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabContent.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabPane.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Tabs.js"],"sourcesContent":["import React from \"react\";\nimport ReactJson from \"react-json-view\";\n\nimport configOptions from \"../../ApiClient/util/config\";\n\nexport default function JsonViewer(props: { obj: unknown }): JSX.Element {\n    return (\n        <ReactJson\n            src={props.obj as Record<string, unknown>}\n            name={\"JSON\"}\n            theme=\"tube\"\n            iconStyle=\"triangle\"\n            collapsed\n            displayDataTypes={false}\n        />\n    );\n}\n\nexport function DebugJsonViewer(props: { obj: unknown }): JSX.Element {\n    if (!configOptions.showjson.value) {\n        return <></>;\n    }\n    return (\n        <div className=\"text-left\">\n            <JsonViewer obj={props.obj} />\n        </div>\n    );\n}\n","//this should be a proper data store thing eventually but it will do 4 now\nimport Translation from \"../translations/Translation\";\n\nexport interface GlobalObjects {\n    translation?: Translation;\n    setupMode?: boolean;\n}\n\nexport const GlobalObjects: GlobalObjects = {};\n","import { faPlus } from \"@fortawesome/free-solid-svg-icons/faPlus\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons/faTrash\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { FormEvent } from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Row from \"react-bootstrap/Row\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport { FormattedMessage, FormattedRelativeTime } from \"react-intl\";\nimport { RouteComponentProps, withRouter } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n    AdministrationRights,\n    InstanceManagerRights,\n    OAuthConnection,\n    OAuthProvider,\n    PermissionSet,\n    UserGroup,\n    UserGroupResponse,\n    UserResponse\n} from \"../../../ApiClient/generatedcode/generated\";\nimport InternalError, { ErrorCode } from \"../../../ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"../../../ApiClient/models/InternalComms/InternalStatus\";\nimport UserClient from \"../../../ApiClient/UserClient\";\nimport UserGroupClient from \"../../../ApiClient/UserGroupClient\";\nimport { GeneralContext } from \"../../../contexts/GeneralContext\";\nimport { GlobalObjects } from \"../../../utils/globalObjects\";\nimport { resolvePermissionSet } from \"../../../utils/misc\";\nimport { AppRoutes, RouteData } from \"../../../utils/routes\";\nimport ErrorAlert from \"../../utils/ErrorAlert\";\nimport { DebugJsonViewer } from \"../../utils/JsonViewer\";\nimport Loading from \"../../utils/Loading\";\n\ninterface IProps extends RouteComponentProps<{ id: string; tab?: string }> {}\n\ninterface IState {\n    errors: Array<InternalError<ErrorCode> | undefined>;\n    user?: UserResponse;\n    newOAuthConnections: OAuthConnection[];\n    loading: boolean;\n    saving: boolean;\n    permsadmin: { [key: string]: Permission };\n    permsinstance: { [key: string]: Permission };\n    tab: string;\n    groups: UserGroupResponse[];\n    createGroupName: string;\n}\n\ninterface Permission {\n    readonly bitflag: number;\n    readonly currentVal: boolean;\n}\n\nclass UserEdit extends React.Component<IProps, IState> {\n    public declare context: GeneralContext;\n    public constructor(props: IProps, context: GeneralContext) {\n        super(props);\n\n        this.createGroup = this.createGroup.bind(this);\n        this.changeGroup = this.changeGroup.bind(this);\n\n        if (!context.user) {\n            throw Error(\"UserEdit: this.context.user is null!\");\n        }\n\n        this.state = {\n            errors: [],\n            loading: true,\n            saving: false,\n            permsadmin: {},\n            permsinstance: {},\n            tab: props.match.params.tab ?? \"info\",\n            groups: context.user.group ? [Object.assign({ users: [] }, context.user.group)] : [],\n            createGroupName: \"\",\n            newOAuthConnections: []\n        };\n\n        RouteData.selecteduserid = parseInt(props.match.params.id);\n        RouteData.selectedusertab = props.match.params.tab;\n    }\n\n    private get canEdit() {\n        return !!(\n            resolvePermissionSet(this.context.user).administrationRights &\n            AdministrationRights.WriteUsers\n        );\n    }\n\n    private get canRead() {\n        return !!(\n            resolvePermissionSet(this.context.user).administrationRights &\n            AdministrationRights.ReadUsers\n        );\n    }\n\n    private get canEditOwnPassword() {\n        const userid = parseInt(this.props.match.params.id);\n        return (\n            !!(\n                resolvePermissionSet(this.context.user).administrationRights &\n                AdministrationRights.EditOwnPassword\n            ) && this.context.user.id === userid\n        );\n    }\n\n    private get canEditOwnOAuth() {\n        const userid = parseInt(this.props.match.params.id);\n        return (\n            !!(\n                resolvePermissionSet(this.context.user).administrationRights &\n                AdministrationRights.EditOwnOAuthConnections\n            ) && this.context.user.id === userid\n        );\n    }\n\n    public componentDidUpdate(prevProps: Readonly<IProps>) {\n        if (prevProps.match.params.tab !== this.props.match.params.tab) {\n            this.setState({\n                tab: this.props.match.params.tab ?? \"info\"\n            });\n        }\n    }\n\n    public async componentDidMount(): Promise<void> {\n        const userid = parseInt(this.props.match.params.id);\n        const response = await UserClient.getUser(userid);\n        switch (response.code) {\n            case StatusCode.ERROR: {\n                this.addError(response.error);\n                break;\n            }\n            case StatusCode.OK: {\n                this.loadUser(response.payload);\n                break;\n            }\n        }\n\n        await this.loadGroups();\n\n        this.setState({\n            loading: false\n        });\n    }\n\n    private async loadGroups() {\n        if (!this.canRead) return;\n\n        const groups1 = await UserGroupClient.listGroups({ page: 1, pageSize: 100 });\n        if (groups1.code === StatusCode.OK) {\n            const groups = [...groups1.payload.content];\n            for (let i = 2; i <= groups1.payload.totalPages; i++) {\n                const groups2 = await UserGroupClient.listGroups({ page: i, pageSize: 100 });\n                if (groups2.code === StatusCode.ERROR) {\n                    this.addError(groups2.error);\n                    return;\n                } else {\n                    groups.push(...groups2.payload.content);\n                }\n            }\n            this.setState({\n                groups: groups\n            });\n        } else {\n            this.addError(groups1.error);\n        }\n    }\n\n    private loadUser(user: UserResponse) {\n        this.setState({\n            user,\n            newOAuthConnections: user.oAuthConnections ? Array.from(user.oAuthConnections) : []\n        });\n        this.loadEnums();\n    }\n\n    private loadEnums(): void {\n        // noinspection DuplicatedCode\n        Object.entries(AdministrationRights).forEach(([k, v]) => {\n            /* enums are objects that are reverse mapped, for example, an enum with a = 1 and b = 2 would look like this:\n             * {\n             *   \"a\": 1,\n             *   \"b\": 2,\n             *   1: \"a\",\n             *   2: \"b\"\n             * }\n             * so we need to drop everything that doesnt resolve to a string because otherwise we end up with twice the values\n             */\n            if (!isNaN(parseInt(k))) return;\n\n            const key = k.toLowerCase();\n            const val = v as number;\n\n            //we dont care about nothing\n            if (key == \"none\") return;\n\n            const currentVal = !!(\n                resolvePermissionSet(this.state.user!).administrationRights & val\n            );\n            this.setState(prevState => {\n                return {\n                    permsadmin: {\n                        ...prevState.permsadmin,\n                        [key]: {\n                            currentVal: currentVal,\n                            bitflag: val\n                        }\n                    }\n                };\n            });\n        });\n        // noinspection DuplicatedCode\n        Object.entries(InstanceManagerRights).forEach(([k, v]) => {\n            if (!isNaN(parseInt(k))) return;\n\n            const key = k.toLowerCase();\n            const val = v as number;\n\n            //we dont care about nothing\n            if (key == \"none\") return;\n\n            const currentVal = !!(\n                resolvePermissionSet(this.state.user!).instanceManagerRights & val\n            );\n            this.setState(prevState => {\n                return {\n                    permsinstance: {\n                        ...prevState.permsinstance,\n                        [key]: {\n                            currentVal: currentVal,\n                            bitflag: val\n                        }\n                    }\n                };\n            });\n        });\n    }\n\n    private addError(error: InternalError<ErrorCode>): void {\n        this.setState(prevState => {\n            const errors = Array.from(prevState.errors);\n            errors.push(error);\n            return {\n                errors\n            };\n        });\n    }\n\n    public render(): React.ReactNode {\n        if (this.state.loading) {\n            return <Loading text=\"loading.user.load\" />;\n        }\n        if (this.state.saving) {\n            return <Loading text=\"loading.user.save\" />;\n        }\n\n        // noinspection DuplicatedCode\n        const changetabs = (newkey: string | null) => {\n            if (!newkey) return;\n\n            RouteData.selectedusertab = newkey;\n            if (!GlobalObjects.setupMode) {\n                this.props.history.push(AppRoutes.useredit.link ?? AppRoutes.useredit.route);\n            }\n            this.setState({\n                tab: newkey\n            });\n        };\n\n        return (\n            <div className=\"text-center\">\n                <DebugJsonViewer obj={this.state.user} />\n                {this.state.errors.map((err, index) => {\n                    if (!err) return;\n                    return (\n                        <ErrorAlert\n                            key={index}\n                            error={err}\n                            onClose={() =>\n                                this.setState(prev => {\n                                    const newarr = Array.from(prev.errors);\n                                    newarr[index] = undefined;\n                                    return {\n                                        errors: newarr\n                                    };\n                                })\n                            }\n                        />\n                    );\n                })}\n                {this.state.user ? (\n                    <React.Fragment>\n                        {!this.canEdit ? (\n                            <Alert className=\"clearfix\" variant=\"error\">\n                                <FormattedMessage id=\"view.user.edit.cantedit\" />\n                            </Alert>\n                        ) : (\n                            \"\"\n                        )}\n                        {this.state.user.systemIdentifier ? (\n                            <Badge variant=\"primary\" className=\"mx-1\">\n                                <FormattedMessage id=\"generic.system.short\" />\n                            </Badge>\n                        ) : (\n                            <Badge variant=\"primary\" className=\"mx-1\">\n                                <FormattedMessage id=\"generic.tgs\" />\n                            </Badge>\n                        )}\n                        {this.state.user.enabled ? (\n                            <Badge variant=\"success\" className=\"mx-1\">\n                                <FormattedMessage id=\"generic.enabled\" />\n                            </Badge>\n                        ) : (\n                            <Badge variant=\"danger\" className=\"mx-1\">\n                                <FormattedMessage id=\"generic.disabled\" />\n                            </Badge>\n                        )}\n                        {this.state.user.group ? (\n                            <Badge variant=\"warning\" className=\"mx-1\">\n                                <FormattedMessage id=\"generic.grouped\" />\n                            </Badge>\n                        ) : null}\n                        <h3 className=\"text-capitalize\">{this.state.user.name}</h3>\n                        <Button as={Link} to={AppRoutes.userlist.link ?? AppRoutes.userlist.route}>\n                            <FormattedMessage id=\"generic.goback\" />\n                        </Button>\n                        <Tabs\n                            activeKey={this.state.tab}\n                            onSelect={changetabs}\n                            id=\"test\"\n                            className=\"justify-content-center mb-3 mt-4 flex-column flex-md-row\">\n                            <Tab eventKey=\"info\" title={<FormattedMessage id=\"generic.info\" />}>\n                                <Col lg={5} className=\"text-center text-md-left mx-auto\">\n                                    <Row xs={1} md={2}>\n                                        <Col>\n                                            <h5 className=\"m-0\">\n                                                <FormattedMessage id=\"generic.userid\" />\n                                            </h5>\n                                        </Col>\n                                        <Col className=\"text-capitalize mb-2\">\n                                            {this.state.user.id}\n                                        </Col>\n                                    </Row>\n                                    {this.state.user.systemIdentifier ? (\n                                        <Row xs={1} md={2}>\n                                            <Col>\n                                                <h5 className=\"m-0\">\n                                                    <FormattedMessage id=\"generic.systemidentifier\" />\n                                                </h5>\n                                            </Col>\n                                            <Col className=\"mb-2 text-sm-break\">\n                                                {this.state.user.systemIdentifier}\n                                            </Col>\n                                        </Row>\n                                    ) : (\n                                        \"\"\n                                    )}\n                                    <Row xs={1} md={2}>\n                                        <Col>\n                                            <h5 className=\"m-0\">\n                                                <FormattedMessage id=\"generic.enabled\" />\n                                            </h5>\n                                        </Col>\n                                        <Col className=\"text-capitalize mb-2\">\n                                            {this.state.user.enabled.toString()}\n                                        </Col>\n                                    </Row>\n                                    <Row xs={1} md={2}>\n                                        <Col>\n                                            <h5 className=\"m-0\">\n                                                <FormattedMessage id=\"generic.created\" />\n                                            </h5>\n                                        </Col>\n                                        <OverlayTrigger\n                                            overlay={\n                                                <Tooltip id={`${this.state.user.name}-tooltip`}>\n                                                    {new Date(\n                                                        this.state.user.createdAt\n                                                    ).toLocaleString()}\n                                                </Tooltip>\n                                            }>\n                                            {({ ref, ...triggerHandler }) => (\n                                                <Col\n                                                    className=\"text-capitalize mb-2\"\n                                                    {...triggerHandler}>\n                                                    <span ref={ref as React.Ref<HTMLSpanElement>}>\n                                                        <FormattedRelativeTime\n                                                            value={\n                                                                (new Date(\n                                                                    this.state.user!.createdAt\n                                                                ).getTime() -\n                                                                    Date.now()) /\n                                                                1000\n                                                            }\n                                                            numeric=\"auto\"\n                                                            updateIntervalInSeconds={1}\n                                                        />\n                                                    </span>\n                                                </Col>\n                                            )}\n                                        </OverlayTrigger>\n                                    </Row>\n                                    <Row xs={1} md={2}>\n                                        <Col>\n                                            <h5 className=\"m-0\">\n                                                <FormattedMessage id=\"generic.createdby\" />\n                                            </h5>\n                                        </Col>\n                                        <OverlayTrigger\n                                            overlay={\n                                                <Tooltip\n                                                    id={`${this.state.user.name}-tooltip-createdby`}>\n                                                    <FormattedMessage id=\"generic.userid\" />\n                                                    {this.state.user.createdBy.id}\n                                                </Tooltip>\n                                            }>\n                                            {({ ref, ...triggerHandler }) => (\n                                                <Col\n                                                    className=\"text-capitalize mb-2\"\n                                                    {...triggerHandler}>\n                                                    <span ref={ref as React.Ref<HTMLSpanElement>}>\n                                                        {this.state.user!.createdBy.name}\n                                                    </span>\n                                                </Col>\n                                            )}\n                                        </OverlayTrigger>\n                                    </Row>\n                                    <div className=\"text-center mt-3\">\n                                        {this.canEdit || this.canEditOwnPassword ? (\n                                            <Button\n                                                className=\"mr-2\"\n                                                as={Link}\n                                                to={\n                                                    (AppRoutes.passwd.link ??\n                                                        AppRoutes.passwd.route) +\n                                                    this.state.user.id.toString()\n                                                }>\n                                                <FormattedMessage id=\"routes.passwd\" />\n                                            </Button>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                        {this.canEdit ? (\n                                            <Button\n                                                variant={\n                                                    this.state.user.enabled ? \"danger\" : \"success\"\n                                                }\n                                                onClick={async () => {\n                                                    this.setState({\n                                                        saving: true\n                                                    });\n\n                                                    const response = await UserClient.editUser({\n                                                        enabled: !this.state.user!.enabled,\n                                                        id: this.state.user!.id\n                                                    });\n                                                    if (response.code == StatusCode.OK) {\n                                                        this.loadUser(response.payload);\n                                                    } else {\n                                                        this.addError(response.error);\n                                                    }\n\n                                                    this.setState({\n                                                        saving: false\n                                                    });\n                                                }}>\n                                                <FormattedMessage\n                                                    id={\n                                                        this.state.user.enabled\n                                                            ? \"generic.disable\"\n                                                            : \"generic.enable\"\n                                                    }\n                                                />\n                                            </Button>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                    </div>\n                                </Col>\n                            </Tab>\n                            <Tab\n                                eventKey=\"adminperms\"\n                                title={<FormattedMessage id=\"perms.admin\" />}>\n                                {this.renderPerms(\"permsadmin\", \"admin\")}\n                            </Tab>\n                            <Tab\n                                eventKey=\"instanceperms\"\n                                title={<FormattedMessage id=\"perms.instance\" />}>\n                                {this.renderPerms(\"permsinstance\", \"instance\")}\n                            </Tab>\n                            <Tab eventKey=\"group\" title={<FormattedMessage id=\"perms.group\" />}>\n                                {this.renderGroups()}\n                            </Tab>\n                            {this.renderOAuth()}\n                        </Tabs>\n                    </React.Fragment>\n                ) : (\n                    \"\"\n                )}\n            </div>\n        );\n    }\n\n    private renderOAuth(): React.ReactNode {\n        const oAuthProviderInfos = this.context.serverInfo.oAuthProviderInfos;\n        const currentOAuthConnections =\n            this.state.newOAuthConnections ?? this.state.user?.oAuthConnections;\n        if (\n            this.state.user?.name.toLowerCase() === \"admin\" || // admin user can't have OAuthConnections\n            currentOAuthConnections == null ||\n            !oAuthProviderInfos ||\n            !Object.keys(oAuthProviderInfos).length\n        )\n            return null;\n\n        const save = async () => {\n            this.setState({\n                saving: true\n            });\n\n            if (!this.state.user) {\n                this.addError(\n                    new InternalError(ErrorCode.APP_FAIL, {\n                        jsError: Error(\"this.state.user is null in user edit save\")\n                    })\n                );\n                return;\n            }\n\n            const response = await UserClient.editUser({\n                id: this.state.user.id,\n                oAuthConnections: this.state.newOAuthConnections\n            });\n            if (response.code == StatusCode.OK) {\n                this.loadUser(response.payload);\n            } else {\n                this.addError(response.error);\n            }\n\n            this.setState({\n                saving: false\n            });\n        };\n\n        const canEditOauth = this.canEdit || this.canEditOwnOAuth;\n\n        return (\n            <Tab\n                eventKey=\"oauth\"\n                title={<FormattedMessage id=\"view.user.edit.oauth.connections\" />}>\n                <h3 className=\"mb-3\">\n                    <FormattedMessage id=\"view.user.edit.oauth.current\" />\n                </h3>\n                <div>\n                    {this.state.newOAuthConnections.map((oAuthConnection, idx) => (\n                        <div className=\"justify-content-center d-flex\" key={idx}>\n                            <InputGroup className=\"w-75 mb-1\">\n                                <InputGroup.Prepend>\n                                    <InputGroup.Text>\n                                        <span>\n                                            <FormattedMessage id=\"view.user.edit.oauth.provider\" />\n                                        </span>\n                                    </InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <Form.Control\n                                    className=\"flex-grow-1 flex-md-grow-0 w-50 w-md-auto \"\n                                    as=\"select\"\n                                    custom\n                                    disabled={!canEditOauth}\n                                    onChange={event => {\n                                        const provider = event.target.value as OAuthProvider;\n                                        this.setState(prev => {\n                                            return {\n                                                newOAuthConnections: prev.newOAuthConnections.map(\n                                                    (val, idx2) => {\n                                                        if (idx2 !== idx) return val;\n                                                        return {\n                                                            ...val,\n                                                            provider: provider\n                                                        };\n                                                    }\n                                                )\n                                            };\n                                        });\n                                    }}>\n                                    {Object.keys(oAuthProviderInfos).map(key => {\n                                        return (\n                                            <FormattedMessage\n                                                key={key}\n                                                id={`view.user.edit.oauth.provider.${key.toLowerCase()}`}>\n                                                {txt => (\n                                                    <option\n                                                        value={key}\n                                                        selected={oAuthConnection.provider === key}>\n                                                        {txt}\n                                                    </option>\n                                                )}\n                                            </FormattedMessage>\n                                        );\n                                    })}\n                                </Form.Control>\n                                <InputGroup.Text className=\"rounded-0\">\n                                    <FormattedMessage id=\"view.user.edit.oauth.id\" />\n                                </InputGroup.Text>\n                                <FormControl\n                                    className=\"\"\n                                    value={oAuthConnection.externalUserId}\n                                    onChange={event => {\n                                        const externalUserId = event.target.value;\n                                        this.setState(prev => {\n                                            return {\n                                                newOAuthConnections: prev.newOAuthConnections.map(\n                                                    (val, idx2) => {\n                                                        if (idx2 !== idx) return val;\n                                                        return {\n                                                            ...val,\n                                                            externalUserId: externalUserId\n                                                        };\n                                                    }\n                                                )\n                                            };\n                                        });\n                                    }}\n                                    disabled={!canEditOauth}\n                                />\n                                <InputGroup.Append className=\"\">\n                                    <Button\n                                        variant=\"danger\"\n                                        className=\"text-darker\"\n                                        hidden={!canEditOauth}\n                                        onClick={() => {\n                                            this.setState(prev => {\n                                                return {\n                                                    newOAuthConnections: prev.newOAuthConnections.filter(\n                                                        (val, idx2) => idx !== idx2\n                                                    )\n                                                };\n                                            });\n                                        }}>\n                                        <div>\n                                            <FontAwesomeIcon icon={faTrash} />\n                                        </div>\n                                    </Button>\n                                </InputGroup.Append>\n                            </InputGroup>\n                        </div>\n                    ))}\n                </div>\n                {canEditOauth ? (\n                    <div className=\"text-center mt-3\">\n                        <Button\n                            className=\"mr-2\"\n                            onClick={() => {\n                                this.setState(prev => {\n                                    return {\n                                        newOAuthConnections: [\n                                            ...prev.newOAuthConnections,\n                                            {\n                                                provider: Object.keys(\n                                                    oAuthProviderInfos\n                                                )[0] as OAuthProvider,\n                                                externalUserId: \"\"\n                                            }\n                                        ]\n                                    };\n                                });\n                            }}>\n                            <FormattedMessage id=\"view.user.edit.oauth.add\" />\n                        </Button>\n                        <Button\n                            onClick={save}\n                            variant=\"success\"\n                            disabled={\n                                this.state.newOAuthConnections.some(\n                                    x => x.externalUserId.trim().length === 0\n                                ) ||\n                                //If all values match up, and the lenght is the same, there has been no change, disable the button\n                                (this.state.newOAuthConnections.every(\n                                    (val, idx) =>\n                                        val.externalUserId ===\n                                            (this.state.user?.oAuthConnections ?? [])[idx]\n                                                ?.externalUserId &&\n                                        val.provider ===\n                                            (this.state.user?.oAuthConnections ?? [])[idx]?.provider\n                                ) &&\n                                    this.state.newOAuthConnections.length ===\n                                        this.state.user?.oAuthConnections?.length)\n                            }>\n                            <FormattedMessage id=\"generic.savepage\" />\n                        </Button>\n                    </div>\n                ) : (\n                    \"\"\n                )}\n            </Tab>\n        );\n    }\n\n    private renderGroups(): React.ReactNode {\n        //We can't use addError() here because that would trigger a rerender which would call this again and add another error and so on\n        if (!this.state.user || !this.state.groups) {\n            return (\n                <ErrorAlert\n                    error={\n                        new InternalError(ErrorCode.APP_FAIL, {\n                            jsError: Error(\"Assertion failed, user or group is null\")\n                        })\n                    }\n                />\n            );\n        }\n\n        return (\n            <div>\n                {!this.canRead ? (\n                    <Alert className=\"clearfix\" variant=\"error\">\n                        <FormattedMessage id=\"perms.group.cantlist\" />\n                    </Alert>\n                ) : null}\n                <h3 className=\"mb-3\">\n                    <FormattedMessage id=\"perms.group.current\" />\n                    {this.state.user.group ? (\n                        this.state.user.group.name\n                    ) : (\n                        <FormattedMessage id=\"perms.group.none\" />\n                    )}\n                </h3>\n                <div onChange={this.changeGroup}>\n                    <InputGroup\n                        className=\"justify-content-center mb-3\"\n                        as=\"label\"\n                        htmlFor={\n                            \"group_none\" /*notice the underscore, the normal groups use a dash, this prevents conflict with groups named \"none\"*/\n                        }>\n                        <InputGroup.Prepend>\n                            <InputGroup.Radio\n                                id={\"group_none\"}\n                                name=\"group\"\n                                defaultChecked={this.state.user.group?.id === undefined}\n                                disabled={!this.canEdit}\n                            />\n                        </InputGroup.Prepend>\n                        <InputGroup.Append className=\"w-40 overflow-auto\">\n                            <InputGroup.Text className=\"flex-fill\">\n                                <FormattedMessage id=\"perms.group.none\" />\n                            </InputGroup.Text>\n                        </InputGroup.Append>\n                    </InputGroup>\n                    {this.state.groups.map(group => {\n                        return (\n                            <InputGroup className=\"justify-content-center mb-1\" key={group.id}>\n                                <InputGroup.Prepend>\n                                    <InputGroup.Radio\n                                        id={\"group-\" + group.id.toString()}\n                                        name=\"group\"\n                                        defaultChecked={this.state.user!.group?.id === group.id}\n                                        disabled={!this.canEdit}\n                                    />\n                                </InputGroup.Prepend>\n                                <InputGroup.Append className=\"w-40 overflow-auto\">\n                                    <InputGroup.Text\n                                        className=\"flex-fill\"\n                                        as=\"label\"\n                                        htmlFor={\"group-\" + group.id.toString()}>\n                                        <span>{group.name}</span>\n                                        <div className=\"text-right ml-auto\">\n                                            <FormattedMessage\n                                                id=\"generic.numusers\"\n                                                values={{\n                                                    count: this.canRead\n                                                        ? group.users?.length\n                                                        : \"???\"\n                                                }}\n                                            />\n                                        </div>\n                                    </InputGroup.Text>\n                                    <OverlayTrigger\n                                        overlay={\n                                            <Tooltip id={`${group.id}-tooltip`}>\n                                                <FormattedMessage id=\"perms.group.delete.warning\" />\n                                            </Tooltip>\n                                        }\n                                        show={\n                                            (!group.users?.length || !this.canEdit) &&\n                                            group.id !== this.state.user!.group?.id\n                                                ? false\n                                                : undefined\n                                        }>\n                                        {({ ref, ...triggerHandler }) => (\n                                            <Button\n                                                variant=\"danger\"\n                                                className=\"text-darker\"\n                                                disabled={\n                                                    !!group.users?.length ||\n                                                    !this.canEdit ||\n                                                    group.id === this.state.user!.group?.id\n                                                }\n                                                onClick={() => void this.deleteGroup(group.id)}\n                                                {...triggerHandler}>\n                                                <div ref={ref as React.Ref<HTMLDivElement>}>\n                                                    <FontAwesomeIcon icon={faTrash} />\n                                                </div>\n                                            </Button>\n                                        )}\n                                    </OverlayTrigger>\n                                </InputGroup.Append>\n                            </InputGroup>\n                        );\n                    })}\n                </div>\n                {/*<hr />\n                    <h4 className=\"mt-3\">\n                        <FormattedMessage id=\"perms.group.create\" />\n                    </h4>*/}\n                <InputGroup className=\"justify-content-center mb-1 mt-5\">\n                    <InputGroup.Prepend>\n                        <Button\n                            variant=\"primary\"\n                            onClick={this.createGroup}\n                            disabled={!this.canEdit || !this.state.createGroupName.length}>\n                            <FontAwesomeIcon icon={faPlus} />\n                        </Button>\n                    </InputGroup.Prepend>\n                    <FormControl\n                        className=\"w-40 overflow-auto flex-grow-0\"\n                        value={this.state.createGroupName}\n                        onChange={event => {\n                            this.setState({\n                                createGroupName: event.target.value\n                            });\n                        }}\n                        disabled={!this.canEdit}\n                    />\n                </InputGroup>\n            </div>\n        );\n    }\n\n    private async changeGroup(e: FormEvent<HTMLDivElement>) {\n        if (!this.state.user) {\n            this.addError(\n                new InternalError(ErrorCode.APP_FAIL, {\n                    jsError: Error(\"this.state.user is null in changegroup\")\n                })\n            );\n            return;\n        }\n\n        this.setState({\n            loading: true\n        });\n        const id = (e.target as HTMLInputElement).id;\n        if (id === \"group_none\") {\n            const response = await UserClient.editUser({\n                id: this.state.user.id,\n                permissionSet: resolvePermissionSet(this.state.user)\n            });\n            if (response.code === StatusCode.OK) {\n                await this.loadGroups();\n                this.loadUser(response.payload);\n            } else {\n                this.addError(response.error);\n            }\n        } else {\n            const realID = parseInt(id.substr(6));\n            const response = await UserClient.editUser({\n                id: this.state.user.id,\n                group: {\n                    id: realID\n                } as UserGroup\n            });\n            if (response.code === StatusCode.OK) {\n                await this.loadGroups();\n                this.loadUser(response.payload);\n            } else {\n                this.addError(response.error);\n            }\n        }\n        this.setState({\n            loading: false\n        });\n    }\n\n    private async deleteGroup(id: number) {\n        this.setState({\n            loading: true\n        });\n        const response = await UserGroupClient.deleteGroup(id);\n        if (response.code === StatusCode.OK) {\n            this.setState(prev => {\n                return {\n                    groups: prev.groups.filter(group => group.id !== id)\n                };\n            });\n        } else {\n            this.addError(response.error);\n        }\n        this.setState({\n            loading: false\n        });\n    }\n\n    private async createGroup() {\n        this.setState({\n            loading: true\n        });\n        const response = await UserGroupClient.createGroup(\n            this.state.createGroupName,\n            resolvePermissionSet(this.state.user!)\n        );\n        if (response.code === StatusCode.OK) {\n            this.setState(prev => {\n                return {\n                    groups: prev.groups.concat([response.payload])\n                };\n            });\n        } else {\n            this.addError(response.error);\n        }\n        this.setState({\n            loading: false\n        });\n    }\n\n    private renderPerms(\n        enumname: \"permsadmin\" | \"permsinstance\",\n        permprefix: string\n    ): React.ReactNode {\n        const inputs: Record<\n            string,\n            { input: React.RefObject<HTMLInputElement>; field: React.RefObject<HTMLDivElement> }\n        > = {};\n        const setBold = (\n            inputRef: React.RefObject<HTMLInputElement>,\n            fieldRef: React.RefObject<HTMLDivElement>,\n            defaultVal: boolean\n        ) => {\n            if (!inputRef.current || !fieldRef.current) return;\n            if (inputRef.current.checked !== defaultVal) {\n                fieldRef.current.classList.add(\"font-weight-bold\");\n            } else {\n                fieldRef.current.classList.remove(\"font-weight-bold\");\n            }\n        };\n        const setAll = (val: boolean): (() => void) => {\n            return () => {\n                for (const [permname, refs] of Object.entries(inputs)) {\n                    if (!refs.input.current) return;\n\n                    refs.input.current.checked = val;\n                    setBold(refs.input, refs.field, this.state[enumname][permname].currentVal);\n                }\n            };\n        };\n        const resetAll = () => {\n            for (const [permname, refs] of Object.entries(inputs)) {\n                if (!refs.input.current) continue;\n\n                refs.input.current.checked = this.state[enumname][permname].currentVal;\n                setBold(refs.input, refs.field, this.state[enumname][permname].currentVal);\n            }\n        };\n        const save = async () => {\n            this.setState({\n                saving: true\n            });\n            let bitflag = 0;\n\n            for (const [permname, refs] of Object.entries(inputs)) {\n                if (!refs.input.current) continue;\n\n                bitflag += refs.input.current.checked ? this.state[enumname][permname].bitflag : 0;\n            }\n\n            if (!this.state.user) {\n                this.addError(\n                    new InternalError(ErrorCode.APP_FAIL, {\n                        jsError: Error(\"this.state.user is null in user edit save\")\n                    })\n                );\n                return;\n            }\n\n            if (this.state.user.group) {\n                const newset = Object.assign(\n                    Object.assign({}, this.state.user.group.permissionSet),\n                    {\n                        [enumname == \"permsadmin\"\n                            ? \"AdministrationRights\"\n                            : \"InstanceManagerRights\"]: bitflag\n                    } as\n                        | { AdministrationRights: AdministrationRights }\n                        | { InstanceManagerRights: InstanceManagerRights }\n                ) as PermissionSet;\n                const response = await UserGroupClient.updateGroup({\n                    id: this.state.user.group.id,\n                    permissionSet: newset\n                });\n                if (response.code == StatusCode.OK) {\n                    const response2 = await UserClient.getUser(this.state.user.id);\n                    if (response2.code == StatusCode.OK) {\n                        this.loadUser(response2.payload);\n                    } else {\n                        this.addError(response2.error);\n                    }\n                } else {\n                    this.addError(response.error);\n                }\n            } else {\n                const newset = Object.assign(Object.assign({}, this.state.user.permissionSet), {\n                    [enumname == \"permsadmin\"\n                        ? \"AdministrationRights\"\n                        : \"InstanceManagerRights\"]: bitflag\n                } as { AdministrationRights: AdministrationRights } | { InstanceManagerRights: InstanceManagerRights });\n                const response = await UserClient.editUser({\n                    id: this.state.user.id,\n                    permissionSet: newset\n                });\n                if (response.code == StatusCode.OK) {\n                    this.loadUser(response.payload);\n                } else {\n                    this.addError(response.error);\n                }\n            }\n\n            this.setState({\n                saving: false\n            });\n        };\n        return (\n            <React.Fragment>\n                {this.state.user?.group ? (\n                    <Alert variant=\"warning\">\n                        <FormattedMessage\n                            id=\"perms.group.warning\"\n                            values={{\n                                group: `${this.state.user.group.name} (${this.state.user.group.id})`\n                            }}\n                        />\n                    </Alert>\n                ) : null}\n                {this.canEdit ? (\n                    <React.Fragment>\n                        <h5>\n                            <FormattedMessage id=\"generic.setall\" />\n                        </h5>\n                        <Button onClick={setAll(true)}>\n                            <FormattedMessage id=\"generic.true\" />\n                        </Button>{\" \"}\n                        <Button onClick={setAll(false)}>\n                            <FormattedMessage id=\"generic.false\" />\n                        </Button>{\" \"}\n                        <Button onClick={resetAll}>\n                            <FormattedMessage id=\"generic.reset\" />\n                        </Button>\n                    </React.Fragment>\n                ) : (\n                    \"\"\n                )}\n                <Col md={8} lg={7} xl={6} className=\"mx-auto\">\n                    <hr />\n                    {Object.entries(this.state[enumname]).map(([perm, value]) => {\n                        const inputRef = React.createRef<HTMLInputElement>();\n                        const fieldRef = React.createRef<HTMLDivElement>();\n                        inputs[perm] = { input: inputRef, field: fieldRef };\n                        return (\n                            <InputGroup key={perm} as=\"label\" htmlFor={perm} className=\"mb-0\">\n                                <InputGroup.Prepend className=\"flex-grow-1 overflow-auto\">\n                                    <OverlayTrigger\n                                        overlay={\n                                            <Tooltip id={`perms.${permprefix}.${perm}.desc`}>\n                                                <FormattedMessage\n                                                    id={`perms.${permprefix}.${perm}.desc`}\n                                                />\n                                            </Tooltip>\n                                        }>\n                                        {({ ref, ...triggerHandler }) => (\n                                            <InputGroup.Text className=\"flex-fill\" ref={fieldRef}>\n                                                <div {...triggerHandler}>\n                                                    <FormattedMessage\n                                                        id={`perms.${permprefix}.${perm}`}\n                                                    />\n                                                </div>\n                                                <div className=\"ml-auto d-flex align-items-center\">\n                                                    <Form.Check\n                                                        inline\n                                                        type=\"switch\"\n                                                        custom\n                                                        id={`${enumname}.${perm}`}\n                                                        className=\"d-flex justify-content-center align-content-center mx-2\"\n                                                        label=\"\"\n                                                        ref={inputRef}\n                                                        disabled={!this.canEdit}\n                                                        defaultChecked={value.currentVal}\n                                                        onChange={() => {\n                                                            setBold(\n                                                                inputRef,\n                                                                fieldRef,\n                                                                value.currentVal\n                                                            );\n                                                        }}\n                                                    />\n                                                    <div\n                                                        {...triggerHandler}\n                                                        ref={ref as React.Ref<HTMLDivElement>}>\n                                                        <FontAwesomeIcon fixedWidth icon=\"info\" />\n                                                    </div>\n                                                </div>\n                                            </InputGroup.Text>\n                                        )}\n                                    </OverlayTrigger>\n                                </InputGroup.Prepend>\n                            </InputGroup>\n                        );\n                    })}\n                    <hr />\n                </Col>\n                {this.canEdit ? (\n                    <Button onClick={save}>\n                        <FormattedMessage id=\"generic.savepage\" />\n                    </Button>\n                ) : (\n                    \"\"\n                )}\n            </React.Fragment>\n        );\n    }\n}\nUserEdit.contextType = GeneralContext;\nexport default withRouter(UserEdit);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"bsPrefix\", \"size\", \"hasValidation\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      hasValidation = _ref.hasValidation,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size, hasValidation && 'has-validation')\n  }));\n});\nInputGroup.displayName = 'InputGroup';\nInputGroup.Text = InputGroupText;\nInputGroup.Radio = InputGroupRadio;\nInputGroup.Checkbox = InputGroupCheckbox;\nInputGroup.Append = InputGroupAppend;\nInputGroup.Prepend = InputGroupPrepend;\nexport default InputGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"noGutters\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"as\", \"className\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"activeKey\", \"getControlledId\", \"getControllerId\"],\n    _excluded2 = [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, _excluded);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, _excluded2);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"id\", \"onSelect\", \"transition\", \"mountOnEnter\", \"unmountOnExit\", \"children\", \"activeKey\"];\nimport React from 'react';\nimport requiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport { useUncontrolled } from 'uncontrollable';\nimport Nav from './Nav';\nimport NavLink from './NavLink';\nimport NavItem from './NavItem';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\nimport { forEach, map } from './ElementChildren';\nvar defaultProps = {\n  variant: 'tabs',\n  mountOnEnter: false,\n  unmountOnExit: false\n};\n\nfunction getDefaultActiveKey(children) {\n  var defaultActiveKey;\n  forEach(children, function (child) {\n    if (defaultActiveKey == null) {\n      defaultActiveKey = child.props.eventKey;\n    }\n  });\n  return defaultActiveKey;\n}\n\nfunction renderTab(child) {\n  var _child$props = child.props,\n      title = _child$props.title,\n      eventKey = _child$props.eventKey,\n      disabled = _child$props.disabled,\n      tabClassName = _child$props.tabClassName,\n      id = _child$props.id;\n\n  if (title == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(NavItem, {\n    as: NavLink,\n    eventKey: eventKey,\n    disabled: disabled,\n    id: id,\n    className: tabClassName\n  }, title);\n}\n\nvar Tabs = function Tabs(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      onSelect = _useUncontrolled.onSelect,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children,\n      _useUncontrolled$acti = _useUncontrolled.activeKey,\n      activeKey = _useUncontrolled$acti === void 0 ? getDefaultActiveKey(children) : _useUncontrolled$acti,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n\n  return /*#__PURE__*/React.createElement(TabContainer, {\n    id: id,\n    activeKey: activeKey,\n    onSelect: onSelect,\n    transition: transition,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, /*#__PURE__*/React.createElement(Nav, _extends({}, controlledProps, {\n    role: \"tablist\",\n    as: \"nav\"\n  }), map(children, renderTab)), /*#__PURE__*/React.createElement(TabContent, null, map(children, function (child) {\n    var childProps = _extends({}, child.props);\n\n    delete childProps.title;\n    delete childProps.disabled;\n    delete childProps.tabClassName;\n    return /*#__PURE__*/React.createElement(TabPane, childProps);\n  })));\n};\n\nTabs.defaultProps = defaultProps;\nTabs.displayName = 'Tabs';\nexport default Tabs;"],"names":["JsonViewer","props","src","obj","name","theme","iconStyle","collapsed","displayDataTypes","DebugJsonViewer","configOptions","className","GlobalObjects","UserEdit","React","constructor","context","super","this","createGroup","bind","changeGroup","user","Error","state","errors","loading","saving","permsadmin","permsinstance","tab","match","params","groups","group","Object","assign","users","createGroupName","newOAuthConnections","RouteData","parseInt","id","canEdit","resolvePermissionSet","administrationRights","AdministrationRights","canRead","canEditOwnPassword","userid","canEditOwnOAuth","componentDidUpdate","prevProps","setState","response","UserClient","code","StatusCode","addError","error","loadUser","payload","loadGroups","groups1","UserGroupClient","page","pageSize","content","i","totalPages","groups2","push","oAuthConnections","Array","from","loadEnums","entries","forEach","k","v","isNaN","key","toLowerCase","val","currentVal","prevState","bitflag","InstanceManagerRights","instanceManagerRights","render","Loading","text","map","err","index","ErrorAlert","onClose","prev","newarr","undefined","Alert","variant","systemIdentifier","Badge","enabled","Button","as","Link","to","AppRoutes","Tabs","activeKey","onSelect","newkey","setupMode","history","Tab","eventKey","title","Col","lg","Row","xs","md","toString","OverlayTrigger","overlay","Tooltip","Date","createdAt","toLocaleString","ref","triggerHandler","value","getTime","now","numeric","updateIntervalInSeconds","createdBy","onClick","async","renderPerms","renderGroups","renderOAuth","oAuthProviderInfos","serverInfo","currentOAuthConnections","keys","length","canEditOauth","oAuthConnection","idx","InputGroup","Form","custom","disabled","onChange","event","provider","target","idx2","txt","selected","FormControl","externalUserId","hidden","filter","icon","faTrash","InternalError","ErrorCode","jsError","some","x","trim","every","htmlFor","defaultChecked","values","count","show","deleteGroup","faPlus","e","permissionSet","realID","substr","concat","enumname","permprefix","inputs","setBold","inputRef","fieldRef","defaultVal","current","checked","classList","add","remove","setAll","permname","refs","input","field","xl","perm","inline","type","label","fixedWidth","newset","response2","contextType","GeneralContext","withRouter","_excluded","_ref","bsPrefix","pill","_ref$as","Component","prefix","displayName","defaultProps","InputGroupAppend","InputGroupPrepend","InputGroupText","size","hasValidation","Text","Radio","Checkbox","Append","Prepend","DEVICE_SIZES","noGutters","decoratedBsPrefix","sizePrefix","classes","brkPoint","cols","propValue","infix","_React$Component","apply","arguments","prototype","Container","Content","Pane","_useUncontrolled","generateCustomChildId","generateChildId","transition","mountOnEnter","unmountOnExit","children","useMemo","tabContext","getControlledId","getControllerId","TabContent","_excluded2","TabPane","_useTabContext","useContext","rest","shouldTransition","active","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","pane","role","in","renderTab","child","_child$props","tabClassName","_useUncontrolled$acti","defaultActiveKey","getDefaultActiveKey","controlledProps","childProps"],"sourceRoot":""}