"use strict";(self.webpackChunktgstation_server_control_panel=self.webpackChunktgstation_server_control_panel||[]).push([[607],{2480:function(e,t,r){var n=r(653),o=r(6846),s=r(3803),a=r(5631),i=r(7626),c=r(7961);t.Z=new class extends n.S{get cachedAdminInfo(){return this._cachedAdminInfo}constructor(){super(),this._cachedAdminInfo=void 0,this.loadingAdminInfo=!1,a.Z.on("purgeCache",(()=>{this._cachedAdminInfo=void 0}))}async getAdminInfo(){if(await a.Z.wait4Init(),this._cachedAdminInfo)return this._cachedAdminInfo;if(this.loadingAdminInfo)return await new Promise((e=>{const t=r=>{e(r),this.removeListener("loadAdminInfo",t)};this.on("loadAdminInfo",t)}));let e;this.loadingAdminInfo=!0;try{e=await a.Z.apiClient.administration.administrationControllerRead()}catch(e){const t=new s.Z({code:s.G.ERROR,error:e});return this.emit("loadAdminInfo",t),this.loadingAdminInfo=!1,t}switch(e.status){case 200:{const t=new s.Z({code:s.G.OK,payload:e.data});return this._cachedAdminInfo=t,this.emit("loadAdminInfo",t),this.loadingAdminInfo=!1,t}case 424:{const t=e.data,r=new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.ADMIN_GITHUB_RATE,{errorMessage:t},e)});return this.emit("loadAdminInfo",r),this.loadingAdminInfo=!1,r}case 429:{const t=e.data,r=new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.ADMIN_GITHUB_ERROR,{errorMessage:t},e)});return this.emit("loadAdminInfo",r),this.loadingAdminInfo=!1,r}default:{const t=new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.UNHANDLED_RESPONSE,{axiosResponse:e},e)});return this.emit("loadAdminInfo",t),this.loadingAdminInfo=!1,t}}}async restartServer(){let e;await a.Z.wait4Init();try{e=await a.Z.apiClient.administration.administrationControllerDelete()}catch(e){return new s.Z({code:s.G.ERROR,error:e})}switch(e.status){case 204:return new s.Z({code:s.G.OK,payload:null});case 422:{const t=e.data;return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.ADMIN_WATCHDOG_UNAVAIL,{errorMessage:t},e)})}default:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.UNHANDLED_RESPONSE,{axiosResponse:e},e)})}}async updateServer(e){let t;await a.Z.wait4Init();try{t=await a.Z.apiClient.administration.administrationControllerUpdate({newVersion:e})}catch(e){return new s.Z({code:s.G.ERROR,error:e})}switch(t.status){case 202:return new s.Z({code:s.G.OK,payload:t.data});case 410:{const e=t.data;return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.ADMIN_VERSION_NOT_FOUND,{errorMessage:e},t)})}case 422:{const e=t.data;return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.ADMIN_WATCHDOG_UNAVAIL,{errorMessage:e},t)})}case 424:{const e=t.data;return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.ADMIN_GITHUB_RATE,{errorMessage:e},t)})}case 429:{const e=t.data;return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.ADMIN_GITHUB_ERROR,{errorMessage:e},t)})}default:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.UNHANDLED_RESPONSE,{axiosResponse:t},t)})}}async uploadVersion(e,t){let r;await a.Z.wait4Init();try{r=await a.Z.apiClient.administration.administrationControllerUpdate({newVersion:e,uploadZip:!0})}catch(e){return new s.Z({code:s.G.ERROR,error:e})}switch(r.status){case 202:{const e=r.data,n=await i.Z.Upload(e.fileTicket,t);return n.code===s.G.OK?new s.Z({code:s.G.OK,payload:e}):new s.Z({code:s.G.ERROR,error:n.error})}case 410:{const e=r.data;return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.ADMIN_VERSION_NOT_FOUND,{errorMessage:e},r)})}case 422:{const e=r.data;return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.ADMIN_WATCHDOG_UNAVAIL,{errorMessage:e},r)})}case 424:{const e=r.data;return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.ADMIN_GITHUB_RATE,{errorMessage:e},r)})}case 429:{const e=r.data;return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.ADMIN_GITHUB_ERROR,{errorMessage:e},r)})}default:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.UNHANDLED_RESPONSE,{axiosResponse:r},r)})}}async getLogs({page:e=1,pageSize:t=c.ZP.itemsperpage.value}){let r;await a.Z.wait4Init();try{r=await a.Z.apiClient.administration.administrationControllerListLogs({pageSize:t,page:e})}catch(e){return new s.Z({code:s.G.ERROR,error:e})}switch(r.status){case 200:return new s.Z({code:s.G.OK,payload:r.data});case 409:{const e=r.data;return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.ADMIN_LOGS_IO_ERROR,{errorMessage:e},r)})}default:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.UNHANDLED_RESPONSE,{axiosResponse:r},r)})}}async getLog(e){let t;await a.Z.wait4Init();try{t=await a.Z.apiClient.administration.administrationControllerGetLog(e)}catch(e){return new s.Z({code:s.G.ERROR,error:e})}switch(t.status){case 200:{const e=t.data,r=await i.Z.Download(e.fileTicket);if(r.code===s.G.OK){const t=Object.assign({content:await r.payload.text()},e);return new s.Z({code:s.G.OK,payload:t})}return new s.Z({code:s.G.ERROR,error:r.error})}case 409:{const e=t.data;return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.ADMIN_LOGS_IO_ERROR,{errorMessage:e},t)})}default:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.UNHANDLED_RESPONSE,{axiosResponse:t},t)})}}}},6352:function(e,t,r){var n=r(653),o=r(6846),s=r(3803),a=r(5631),i=r(7961);t.Z=new class extends n.S{async listInstances({page:e=1,pageSize:t=i.ZP.itemsperpage.value}={}){let r;await a.Z.wait4Init();try{r=await a.Z.apiClient.instance.instanceControllerList({pageSize:t,page:e})}catch(e){return new s.Z({code:s.G.ERROR,error:e})}return 200===r.status?new s.Z({code:s.G.OK,payload:r.data}):new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.UNHANDLED_RESPONSE,{axiosResponse:r},r)})}async grantPermissions(e){let t;await a.Z.wait4Init();try{t=await a.Z.apiClient.instance.instanceControllerGrantPermissions(e.id),this.emit("instanceChange",e.id)}catch(e){return new s.Z({code:s.G.ERROR,error:e})}switch(t.status){case 204:return new s.Z({code:s.G.OK,payload:{id:e.id}});case 410:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.NO_DB_ENTITY,{errorMessage:t.data})});default:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.UNHANDLED_RESPONSE,{axiosResponse:t},t)})}}async editInstance(e){let t;await a.Z.wait4Init();try{t=await a.Z.apiClient.instance.instanceControllerUpdate(e),this.emit("instanceChange",e.id)}catch(e){return new s.Z({code:s.G.ERROR,error:e})}switch(t.status){case 200:case 202:return new s.Z({code:s.G.OK,payload:t.data});case 410:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.NO_DB_ENTITY,{errorMessage:t.data})});default:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.UNHANDLED_RESPONSE,{axiosResponse:t},t)})}}async detachInstance(e){let t;await a.Z.wait4Init();try{t=await a.Z.apiClient.instance.instanceControllerDelete(e),this.emit("instanceChange",e)}catch(e){return new s.Z({code:s.G.ERROR,error:e})}switch(t.status){case 204:return new s.Z({code:s.G.OK,payload:null});case 410:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.NO_DB_ENTITY,{errorMessage:t.data})});default:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.UNHANDLED_RESPONSE,{axiosResponse:t},t)})}}async createInstance(e){let t;await a.Z.wait4Init();try{t=await a.Z.apiClient.instance.instanceControllerCreate(e)}catch(e){return new s.Z({code:s.G.ERROR,error:e})}switch(t.status){case 200:case 201:{const e=t.data;return this.emit("instanceChange",e.id),new s.Z({code:s.G.OK,payload:e})}case 409:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.HTTP_DATA_INEGRITY,{errorMessage:t.data})});default:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.UNHANDLED_RESPONSE,{axiosResponse:t},t)})}}async getInstance(e){let t;await a.Z.wait4Init();try{t=await a.Z.apiClient.instance.instanceControllerGetId(e)}catch(e){return new s.Z({code:s.G.ERROR,error:e})}switch(t.status){case 200:return new s.Z({code:s.G.OK,payload:t.data});case 410:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.NO_DB_ENTITY,{errorMessage:t.data})});default:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.UNHANDLED_RESPONSE,{axiosResponse:t},t)})}}}},5870:function(e,t,r){var n=r(653),o=r(6846),s=r(3803),a=r(5631),i=r(7961);t.Z=new class extends n.S{constructor(){super(),this._cachedInstancePermissionSet=new Map,this.loadingInstancePermissionSetInfo=new Map,a.Z.on("purgeCache",(()=>{this._cachedInstancePermissionSet.clear()}))}async listInstancePermissionSets(e,{page:t=1,pageSize:r=i.ZP.itemsperpage.value}){let n;await a.Z.wait4Init();try{n=await a.Z.apiClient.instancePermissionSet.instancePermissionSetControllerList({page:t,pageSize:r},{headers:{Instance:e.toString()}})}catch(e){return new s.Z({code:s.G.ERROR,error:e})}if(200===n.status){return new s.Z({code:s.G.OK,payload:n.data})}return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.UNHANDLED_RESPONSE,{axiosResponse:n},n)})}async getCurrentInstancePermissionSet(e,t){if(await a.Z.wait4Init(),!t&&this._cachedInstancePermissionSet.has(e))return this._cachedInstancePermissionSet.get(e);if(this.loadingInstancePermissionSetInfo.get(e))return await new Promise((e=>{const t=r=>{e(r),this.removeListener("loadInstancePermissionSet",t)};this.on("loadInstancePermissionSet",t)}));let r;this.loadingInstancePermissionSetInfo.set(e,!0);try{r=await a.Z.apiClient.instancePermissionSet.instancePermissionSetControllerRead({headers:{Instance:e.toString()}})}catch(t){const r=new s.Z({code:s.G.ERROR,error:t});return this.emit("loadInstancePermissionSet",r),this.loadingInstancePermissionSetInfo.set(e,!1),r}if(200===r.status){const t=new s.Z({code:s.G.OK,payload:r.data});return this._cachedInstancePermissionSet.set(e,t),this.emit("loadInstancePermissionSet",t),this.loadingInstancePermissionSetInfo.set(e,!1),t}{const t=new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.UNHANDLED_RESPONSE,{axiosResponse:r},r)});return this.emit("loadInstancePermissionSet",t),this.loadingInstancePermissionSetInfo.set(e,!1),t}}async getByPermissionSetId(e,t){let r;await a.Z.wait4Init();try{r=await a.Z.apiClient.instancePermissionSet.instancePermissionSetControllerGetId(t,{headers:{Instance:e.toString()}})}catch(e){return new s.Z({code:s.G.ERROR,error:e})}switch(r.status){case 200:return new s.Z({code:s.G.OK,payload:r.data});case 410:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.NO_DB_ENTITY,{errorMessage:r.data})});default:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.UNHANDLED_RESPONSE,{axiosResponse:r},r)})}}async createInstancePermissionSet(e,t){let r;await a.Z.wait4Init();try{r=await a.Z.apiClient.instancePermissionSet.instancePermissionSetControllerCreate(t,{headers:{Instance:e.toString()}})}catch(e){return new s.Z({code:s.G.ERROR,error:e})}switch(r.status){case 201:return new s.Z({code:s.G.OK,payload:r.data});case 410:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.NO_DB_ENTITY,{errorMessage:r.data})});default:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.UNHANDLED_RESPONSE,{axiosResponse:r},r)})}}async updateInstancePermissionSet(e,t){let r;await a.Z.wait4Init();try{r=await a.Z.apiClient.instancePermissionSet.instancePermissionSetControllerUpdate(t,{headers:{Instance:e.toString()}})}catch(e){return new s.Z({code:s.G.ERROR,error:e})}switch(r.status){case 200:return new s.Z({code:s.G.OK,payload:r.data});case 410:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.NO_DB_ENTITY,{errorMessage:r.data})});default:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.UNHANDLED_RESPONSE,{axiosResponse:r},r)})}}async deleteInstancePermissionSet(e,t){let r;await a.Z.wait4Init();try{r=await a.Z.apiClient.instancePermissionSet.instancePermissionSetControllerDelete(t,{headers:{Instance:e.toString()}})}catch(e){return new s.Z({code:s.G.ERROR,error:e})}switch(r.status){case 204:return new s.Z({code:s.G.OK,payload:{permissionSetId:t}});case 410:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.NO_DB_ENTITY,{errorMessage:r.data})});default:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.UNHANDLED_RESPONSE,{axiosResponse:r},r)})}}}},3204:function(e,t,r){var n=r(653),o=r(6846),s=r(3803),a=r(5631),i=r(7961);t.Z=new class extends n.S{async listActiveJobs(e,{page:t=1,pageSize:r=i.ZP.itemsperpage.value}){let n;await a.Z.wait4Init();try{n=await a.Z.apiClient.job.jobControllerRead({page:t,pageSize:r},{headers:{Instance:e.toString()}})}catch(e){return new s.Z({code:s.G.ERROR,error:e})}if(200===n.status){const t=n.data.content.map((t=>({...t,instanceid:e})));return new s.Z({code:s.G.OK,payload:{...n.data,content:t}})}return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.UNHANDLED_RESPONSE,{axiosResponse:n},n)})}async getJob(e,t){let r;await a.Z.wait4Init();try{r=await a.Z.apiClient.job.jobControllerGetId(t,{headers:{Instance:e.toString()}})}catch(e){return new s.Z({code:s.G.ERROR,error:e})}switch(r.status){case 200:{const t={...r.data,instanceid:e};return new s.Z({code:s.G.OK,payload:t})}case 404:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.JOB_JOB_NOT_FOUND,{errorMessage:r.data})});default:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.UNHANDLED_RESPONSE,{axiosResponse:r},r)})}}async deleteJob(e,t){let r;await a.Z.wait4Init();try{r=await a.Z.apiClient.job.jobControllerDelete(t,{headers:{Instance:e.toString()}})}catch(e){return new s.Z({code:s.G.ERROR,error:e})}switch(r.status){case 202:{const t={...r.data,instanceid:e};return new s.Z({code:s.G.OK,payload:t})}case 404:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.JOB_JOB_NOT_FOUND,{errorMessage:r.data})});case 410:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.JOB_JOB_COMPLETE,{void:!0})});default:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.UNHANDLED_RESPONSE,{axiosResponse:r},r)})}}async listJobs(e,{page:t=1,pageSize:r=i.ZP.itemsperpage.value}){let n;await a.Z.wait4Init();try{n=await a.Z.apiClient.job.jobControllerList({pageSize:r,page:t},{headers:{Instance:e.toString()}})}catch(e){return new s.Z({code:s.G.ERROR,error:e})}if(200===n.status){const t=n.data.content.map((t=>({...t,instanceid:e})));return new s.Z({code:s.G.OK,payload:{...n.data,content:t}})}return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.UNHANDLED_RESPONSE,{axiosResponse:n},n)})}}},5631:function(e,t,r){var n,o,s=r(6755),a=r(653),i=r(8509),c=r(1895),d=r(6846),l=r(3803),h=r(7961),u=r(2522),p=r(452);t.Z=new(o=n=class e extends a.S{constructor(){super(),this.apiHttpClient=void 0,this.apiClient=void 0,this.apiRequestInterceptor={onFulfilled:async e=>{if("https://example.org:5000"===h.ZP.apipath.value){const e=new d.ZP(d.jK.NO_APIPATH,{void:!0});return Promise.reject(e)}if("/"!==e.url&&""!==e.url){const t=await this.wait4Token();e.headers.Authorization=`Bearer ${t.bearer||""}`}return e},onRejected:e=>Promise.reject(e)},this.apiResponseInterceptor={onFulfilled:e=>e,onRejected:(t,r)=>{const n=t;if(n?.code===d.jK.NO_APIPATH)return Promise.reject(n);if(!(t.response&&t.response.status&&e.globalHandledCodes.includes(t.response.status))){const e=t,r=new d.ZP(d.jK.AXIOS,{jsError:e},t.response);return Promise.reject(r)}const o=t.response;switch(t.response.status){case 400:{const e=o.data,t=new d.ZP(d.jK.HTTP_BAD_REQUEST,{errorMessage:e},o);return Promise.reject(t)}case 401:{const e=t.config;if(("/"===e.url||""===e.url)&&"post"===e.method)return Promise.resolve(t.response);if(this.autoLogin)return this.login().then((e=>{switch(e.code){case l.G.OK:return r.request(t.config);case l.G.ERROR:return this.emit("accessDenied"),this.logout(),Promise.reject(e)}}));{this.emit("accessDenied");const e=new d.ZP(d.jK.HTTP_ACCESS_DENIED,{void:!0},o,!0);return Promise.reject(e)}}case 403:{const e=t.config;if("/"!==e.url&&""!==e.url||"post"!==e.method){this.emit("accessDenied");const e=new d.ZP(d.jK.HTTP_ACCESS_DENIED,{void:!0},o,!0);return Promise.reject(e)}return Promise.resolve(t.response)}case 406:{const e=new d.ZP(d.jK.HTTP_NOT_ACCEPTABLE,{void:!0},o);return Promise.reject(e)}case 409:{const e=o.data,r=t.config;if("/Administration/Logs"===r.url&&"get"===r.method)return Promise.resolve(t.response);const n=new d.ZP(d.jK.HTTP_DATA_INEGRITY,{errorMessage:e},o);return Promise.reject(n)}case 426:{const e=o.data,t=new d.ZP(d.jK.HTTP_API_MISMATCH,{errorMessage:e},o);return Promise.reject(t)}case 500:{const e=o.data,t=new d.ZP(d.jK.HTTP_SERVER_ERROR,{errorMessage:e},o);return Promise.reject(t)}case 501:{const e=o.data,t=new d.ZP(d.jK.HTTP_UNIMPLEMENTED,{errorMessage:e},o);return Promise.reject(t)}case 503:return console.log("Server not ready, delaying request",t.config),new Promise((e=>{setTimeout(e,5e3)})).then((()=>r.request(t.config)));default:{const e=new d.ZP(d.jK.UNHANDLED_GLOBAL_RESPONSE,{axiosResponse:o},o);return Promise.reject(e)}}}},this.initialized=!1,this.loadingServerInfo=!1,this._serverInfo=void 0,this.autoLogin=!0,this.loggingIn=!1,this.getServerInfo=this.getServerInfo.bind(this),p.Z.addHook(this.getServerInfo),this.on("purgeCache",(()=>{this._serverInfo=void 0,u.Z.token&&p.Z.runHooks(u.Z.token)})),h.ZP.apipath.callback=()=>{console.log("API path changed"),window.location.reload()}}get serverInfo(){return this._serverInfo}initApi(){console.log("Initializing API client"),console.time("APIInit"),this.apiHttpClient=new i.eN({baseURL:h.ZP.apipath.value,withCredentials:!1,headers:{Accept:"application/json",Api:"Tgstation.Server.Api/"+s.Gn,"Webpanel-Version":s.q4},validateStatus:t=>!e.globalHandledCodes.includes(t)}),this.apiHttpClient.instance.interceptors.request.use(this.apiRequestInterceptor.onFulfilled,this.apiRequestInterceptor.onRejected),this.apiHttpClient.instance.interceptors.response.use(this.apiResponseInterceptor.onFulfilled,(e=>this.apiResponseInterceptor.onRejected(e,this.apiHttpClient.instance))),this.apiClient=new i.V0(this.apiHttpClient),console.timeEnd("APIInit");const t=localStorage.getItem("SessionToken"),r=localStorage.getItem("SessionTokenExpiry"),n="true"==localStorage.getItem("SessionTokenDefault");if(t&&r)if(console.log("Found session token"),Date.parse(r)>=Date.now()){const e={bearer:t,expiresAt:r};this.setToken(e,n)}else console.log("But it was expired");this.initialized=!0,this.emit("initialized")}wait4Init(){return new Promise((e=>{this.initialized?e():this.on("initialized",(()=>e()))}))}wait4Token(){return new Promise((e=>{u.Z.isTokenValid()?e(u.Z.token):this.on("tokenAvailable",(t=>{e(t)}))}))}async login(e){await this.wait4Init(),console.log("Attempting login");let t,r,n=!1;if(e?u.Z.credentials=e:u.Z.credentials?.type===c.P.OAuth&&(this.logout(),n=!0),n||!u.Z.credentials)return new l.Z({code:l.G.ERROR,error:new d.ZP(d.jK.LOGIN_NOCREDS,{void:!0})});if(this.loggingIn)return await new Promise((e=>{const t=r=>{e(r),this.removeListener("loadLoginInfo",t)};this.on("loadLoginInfo",t)}));this.loggingIn=!0;try{u.Z.credentials.type==c.P.Password?(r=u.Z.credentials.userName.toLowerCase()==u.Z.default.userName.toLowerCase()&&u.Z.credentials.password==u.Z.default.password,t=await this.apiClient.homeControllerCreateToken({auth:{username:u.Z.credentials.userName,password:u.Z.credentials.password}})):(r=!1,t=await this.apiClient.homeControllerCreateToken({headers:{OAuthProvider:u.Z.credentials.provider,Authorization:`OAuth ${u.Z.credentials.token}`}}))}catch(e){const t=new l.Z({code:l.G.ERROR,error:e});return this.emit("loadLoginInfo",t),t}finally{this.loggingIn=!1}switch(t.status){case 200:{console.log("Login success");const e=t.data;this.setToken(e,r);const n=new l.Z({code:l.G.OK,payload:e});return this.emit("loadLoginInfo",n),n}case 401:{this.logout(),console.log("Failed to login");const e=new l.Z({code:l.G.ERROR,error:new d.ZP(d.jK.LOGIN_FAIL,{void:!0},t)});return this.emit("loadLoginInfo",e),e}case 403:{this.logout(),console.log("Account disabled");const e=new l.Z({code:l.G.ERROR,error:new d.ZP(d.jK.LOGIN_DISABLED,{void:!0},t)});return this.emit("loadLoginInfo",e),e}case 429:{this.logout(),console.log("rate limited");const e=new l.Z({code:l.G.ERROR,error:new d.ZP(d.jK.LOGIN_RATELIMIT,{errorMessage:t.data},t)});return this.emit("loadLoginInfo",e),e}default:{const e=new l.Z({code:l.G.ERROR,error:new d.ZP(d.jK.UNHANDLED_RESPONSE,{axiosResponse:t},t)});return this.emit("loadLoginInfo",e),e}}}logout(){u.Z.isTokenValid()&&(console.log("Logging out"),u.Z.credentials=void 0,u.Z.token=void 0,localStorage.removeItem("SessionToken"),localStorage.removeItem("SessionTokenExpiry"),this.emit("purgeCache"),this.emit("logout"))}async getServerInfo(e,t=!1){if(await this.wait4Init(),this._serverInfo&&!t)return this._serverInfo;if(this.loadingServerInfo)return new Promise((e=>{if(this._serverInfo)return void e(this._serverInfo);const t=r=>{e(r),this.removeListener("loadServerInfo",t)};this.on("loadServerInfo",t)}));let r;this.loadingServerInfo=!0;try{r=await this.apiClient.homeControllerHome()}catch(e){const t=new l.Z({code:l.G.ERROR,error:e});return this.emit("loadServerInfo",t),this.loadingServerInfo=!1,t}if(200===r.status){const e=r.data,t=new l.Z({code:l.G.OK,payload:e});return this.emit("loadServerInfo",t),this._serverInfo=t,this.loadingServerInfo=!1,t}{const e=new l.Z({code:l.G.ERROR,error:new d.ZP(d.jK.UNHANDLED_RESPONSE,{axiosResponse:r},r)});return this.emit("loadServerInfo",e),this.loadingServerInfo=!1,e}}setToken(e,t){localStorage.setItem("SessionToken",e.bearer),localStorage.setItem("SessionTokenExpiry",e.expiresAt),localStorage.setItem("SessionTokenDefault",t?"true":"false"),u.Z.token=e,u.Z.defaulted=t,this.emit("tokenAvailable",e),p.Z.runHooks(e)}},n.globalHandledCodes=[400,401,403,406,409,426,500,501,503],o)},7626:function(e,t,r){var n=r(653),o=r(6846),s=r(3803),a=r(5631);t.Z=new class extends n.S{async Download(e){let t;await a.Z.wait4Init();try{t=await a.Z.apiClient.transfer.transferControllerDownload({ticket:e},{headers:{Accept:"application/json, application/octet-stream"},format:"blob"})}catch(e){return new s.Z({code:s.G.ERROR,error:e})}switch(t.status){case 200:return new s.Z({code:s.G.OK,payload:t.data});case 410:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.TRANSFER_NOT_AVAILABLE,{errorMessage:t.data})});default:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.UNHANDLED_RESPONSE,{axiosResponse:t},t)})}}async Upload(e,t){let r;await a.Z.wait4Init();try{r=await a.Z.apiClient.transfer.transferControllerUpload({ticket:e},t,{headers:{"Content-Type":"application/octect-stream"}})}catch(e){return new s.Z({code:s.G.ERROR,error:e})}switch(r.status){case 204:return new s.Z({code:s.G.OK,payload:null});case 409:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.UPLOAD_FAILED,{void:!0})});case 410:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.TRANSFER_NOT_AVAILABLE,{errorMessage:r.data})});default:return new s.Z({code:s.G.ERROR,error:new o.ZP(o.jK.UNHANDLED_RESPONSE,{axiosResponse:r},r)})}}}},6942:function(e,t,r){var n=r(653),o=r(8509),s=r(6846),a=r(3803),i=r(5631),c=r(7961),d=r(2522),l=r(452);t.Z=new class extends n.S{get cachedUser(){return this._cachedUser}constructor(){super(),this._cachedUser=void 0,this.loadingUserInfo=!1,this.createAllUsersWithAA=!1,this.getCurrentUser=this.getCurrentUser.bind(this),l.Z.addHook((()=>this.getCurrentUser())),i.Z.on("purgeCache",(()=>{this._cachedUser=void 0}))}async editUser(e){let t;await i.Z.wait4Init();try{t=await i.Z.apiClient.user.userControllerUpdate(e)}catch(e){return new a.Z({code:a.G.ERROR,error:e})}switch(t.status){case 200:{const r=await this.getCurrentUser();return r.code!=a.G.OK?new a.Z({code:a.G.ERROR,error:r.error}):(r.payload.id==e.id&&i.Z.emit("purgeCache"),new a.Z({code:a.G.OK,payload:t.data}))}case 404:{const e=t.data;return new a.Z({code:a.G.ERROR,error:new s.ZP(s.jK.USER_NOT_FOUND,{errorMessage:e})})}default:return new a.Z({code:a.G.ERROR,error:new s.ZP(s.jK.UNHANDLED_RESPONSE,{axiosResponse:t},t)})}}async getCurrentUser(e){if(await i.Z.wait4Init(),!d.Z.isTokenValid())return new a.Z({code:a.G.ERROR,error:new s.ZP(s.jK.HTTP_ACCESS_DENIED,{void:!0},void 0,!0)});if(this._cachedUser&&!e)return this._cachedUser;if(this.loadingUserInfo)return await new Promise((e=>{const t=r=>{e(r),this.removeListener("loadUserInfo",t)};this.on("loadUserInfo",t)}));let t;this.loadingUserInfo=!0;try{t=await i.Z.apiClient.user.userControllerRead()}catch(e){const t=new a.Z({code:a.G.ERROR,error:e});return this.emit("loadUserInfo",t),this.loadingUserInfo=!1,t}if(200===t.status){const e=new a.Z({code:a.G.OK,payload:t.data});return this._cachedUser=e,this.emit("loadUserInfo",e),this.loadingUserInfo=!1,e}{const e=new a.Z({code:a.G.ERROR,error:new s.ZP(s.jK.UNHANDLED_RESPONSE,{axiosResponse:t},t)});return this.emit("loadUserInfo",e),this.loadingUserInfo=!1,e}}async listUsers({page:e=1,pageSize:t=c.ZP.itemsperpage.value}){let r;await i.Z.wait4Init();try{r=await i.Z.apiClient.user.userControllerList({page:e,pageSize:t})}catch(e){return new a.Z({code:a.G.ERROR,error:e})}if(200===r.status){const e=r.data.content.sort(((e,t)=>e.id-t.id));return new a.Z({code:a.G.OK,payload:{...r.data,content:e}})}return new a.Z({code:a.G.ERROR,error:new s.ZP(s.jK.UNHANDLED_RESPONSE,{axiosResponse:r},r)})}async getUser(e){let t;await i.Z.wait4Init();try{t=await i.Z.apiClient.user.userControllerGetId(e)}catch(e){return new a.Z({code:a.G.ERROR,error:e})}switch(t.status){case 200:return new a.Z({code:a.G.OK,payload:t.data});case 404:{const e=t.data;return new a.Z({code:a.G.ERROR,error:new s.ZP(s.jK.USER_NOT_FOUND,{errorMessage:e})})}default:return new a.Z({code:a.G.ERROR,error:new s.ZP(s.jK.UNHANDLED_RESPONSE,{axiosResponse:t},t)})}}async createUser(e){if(await i.Z.wait4Init(),void 0===e.enabled&&(e.enabled=!0),this.createAllUsersWithAA){e.instanceManagerRights=0,e.administrationRights=0;for(const t of Object.values(o.c2))"number"==typeof t&&(e.instanceManagerRights+=t);for(const t of Object.values(o.oj))"number"==typeof t&&(e.administrationRights+=t)}let t;try{t=await i.Z.apiClient.user.userControllerCreate(e)}catch(e){return new a.Z({code:a.G.ERROR,error:e})}switch(t.status){case 201:return new a.Z({code:a.G.OK,payload:t.data});case 410:{const e=t.data;return new a.Z({code:a.G.ERROR,error:new s.ZP(s.jK.USER_NO_SYS_IDENT,{errorMessage:e})})}default:return new a.Z({code:a.G.ERROR,error:new s.ZP(s.jK.UNHANDLED_RESPONSE,{axiosResponse:t},t)})}}}},653:function(e,t,r){r.d(t,{S:function(){return o}});var n=r(2527);class o extends n.TypedEmitter{constructor(){super(),null==window.clients&&(window.clients={}),console.log(this.constructor.name,this),window.clients[this.constructor.name]=this}}},8509:function(e,t,r){r.d(t,{D8:function(){return a},KT:function(){return C},Ni:function(){return P},O4:function(){return f},Qs:function(){return E},TI:function(){return d},V0:function(){return Z},Ye:function(){return p},aM:function(){return c},c2:function(){return g},c7:function(){return l},d$:function(){return w},eN:function(){return O},jK:function(){return R},nX:function(){return I},ns:function(){return u},oj:function(){return s},py:function(){return h},xb:function(){return m},xr:function(){return i}});var n=r(9669),o=r.n(n);let s,a,i,c,d,l,h,u,p,m,R,g,w,f,E,I,C,P,S;!function(e){e[e.None=0]="None",e[e.WriteUsers=1]="WriteUsers",e[e.RestartHost=2]="RestartHost",e[e.ChangeVersion=4]="ChangeVersion",e[e.EditOwnPassword=8]="EditOwnPassword",e[e.ReadUsers=16]="ReadUsers",e[e.DownloadLogs=32]="DownloadLogs",e[e.EditOwnOAuthConnections=64]="EditOwnOAuthConnections",e[e.UploadVersion=128]="UploadVersion"}(s||(s={})),function(e){e[e.None=0]="None",e[e.ReadActive=1]="ReadActive",e[e.ListInstalled=2]="ListInstalled",e[e.InstallOfficialOrChangeActiveVersion=4]="InstallOfficialOrChangeActiveVersion",e[e.CancelInstall=8]="CancelInstall",e[e.InstallCustomVersion=16]="InstallCustomVersion",e[e.DeleteInstall=32]="DeleteInstall"}(a||(a={})),function(e){e[e.None=0]="None",e[e.WriteEnabled=1]="WriteEnabled",e[e.WriteProvider=2]="WriteProvider",e[e.WriteChannels=4]="WriteChannels",e[e.WriteConnectionString=8]="WriteConnectionString",e[e.ReadConnectionString=16]="ReadConnectionString",e[e.Read=32]="Read",e[e.Create=64]="Create",e[e.Delete=128]="Delete",e[e.WriteName=256]="WriteName",e[e.WriteReconnectionInterval=512]="WriteReconnectionInterval",e[e.WriteChannelLimit=1024]="WriteChannelLimit"}(i||(i={})),function(e){e[e.Irc=0]="Irc",e[e.Discord=1]="Discord"}(c||(c={})),function(e){e[e.None=0]="None",e[e.Read=1]="Read",e[e.Write=2]="Write",e[e.List=4]="List",e[e.Delete=8]="Delete"}(d||(d={})),function(e){e[e.Disallowed=0]="Disallowed",e[e.HostWrite=1]="HostWrite",e[e.SystemIdentityWrite=2]="SystemIdentityWrite"}(l||(l={})),function(e){e[e.None=0]="None",e[e.ReadRevision=1]="ReadRevision",e[e.SetPort=2]="SetPort",e[e.SetAutoStart=4]="SetAutoStart",e[e.SetSecurity=8]="SetSecurity",e[e.ReadMetadata=16]="ReadMetadata",e[e.SetWebClient=32]="SetWebClient",e[e.SoftRestart=64]="SoftRestart",e[e.SoftShutdown=128]="SoftShutdown",e[e.Restart=256]="Restart",e[e.Shutdown=512]="Shutdown",e[e.Start=1024]="Start",e[e.SetStartupTimeout=2048]="SetStartupTimeout",e[e.SetHealthCheckInterval=4096]="SetHealthCheckInterval",e[e.CreateDump=8192]="CreateDump",e[e.SetTopicTimeout=16384]="SetTopicTimeout",e[e.SetAdditionalParameters=32768]="SetAdditionalParameters",e[e.SetVisibility=65536]="SetVisibility",e[e.SetProfiler=131072]="SetProfiler",e[e.SetLogOutput=262144]="SetLogOutput",e[e.SetMapThreads=524288]="SetMapThreads"}(h||(h={})),function(e){e[e.Trusted=0]="Trusted",e[e.Safe=1]="Safe",e[e.Ultrasafe=2]="Ultrasafe"}(u||(u={})),function(e){e[e.Public=0]="Public",e[e.Private=1]="Private",e[e.Invisible=2]="Invisible"}(p||(p={})),function(e){e[e.None=0]="None",e[e.Read=1]="Read",e[e.Compile=2]="Compile",e[e.CancelCompile=4]="CancelCompile",e[e.SetDme=8]="SetDme",e[e.SetApiValidationPort=16]="SetApiValidationPort",e[e.CompileJobs=32]="CompileJobs",e[e.SetSecurityLevel=64]="SetSecurityLevel",e[e.SetApiValidationRequirement=128]="SetApiValidationRequirement",e[e.SetTimeout=256]="SetTimeout"}(m||(m={})),function(e){e[e.InternalServerError=0]="InternalServerError",e[e.ApiMismatch=1]="ApiMismatch",e[e.ModelValidationFailure=2]="ModelValidationFailure",e[e.IOError=3]="IOError",e[e.BadHeaders=4]="BadHeaders",e[e.TokenWithToken=5]="TokenWithToken",e[e.DatabaseIntegrityConflict=6]="DatabaseIntegrityConflict",e[e.MissingHostWatchdog=7]="MissingHostWatchdog",e[e.CannotChangeServerSuite=8]="CannotChangeServerSuite",e[e.RemoteApiError=9]="RemoteApiError",e[e.ServerUpdateInProgress=10]="ServerUpdateInProgress",e[e.UserNameChange=11]="UserNameChange",e[e.UserSidChange=12]="UserSidChange",e[e.UserMismatchNameSid=13]="UserMismatchNameSid",e[e.UserMismatchPasswordSid=14]="UserMismatchPasswordSid",e[e.UserPasswordLength=15]="UserPasswordLength",e[e.UserColonInName=16]="UserColonInName",e[e.UserMissingName=17]="UserMissingName",e[e.InstanceRelocateOnline=18]="InstanceRelocateOnline",e[e.InstanceAtExistingPath=19]="InstanceAtExistingPath",e[e.InstanceDetachOnline=20]="InstanceDetachOnline",e[e.InstanceAtConflictingPath=21]="InstanceAtConflictingPath",e[e.InstanceLimitReached=22]="InstanceLimitReached",e[e.InstanceWhitespaceName=23]="InstanceWhitespaceName",e[e.InstanceHeaderRequired=24]="InstanceHeaderRequired",e[e.RequiresPosixSystemIdentity=25]="RequiresPosixSystemIdentity",e[e.ConfigurationFileUpdated=26]="ConfigurationFileUpdated",e[e.ConfigurationDirectoryNotEmpty=27]="ConfigurationDirectoryNotEmpty",e[e.SwarmIntegrityCheckFailed=28]="SwarmIntegrityCheckFailed",e[e.RepoMismatchUserAndAccessToken=29]="RepoMismatchUserAndAccessToken",e[e.RepoCloning=30]="RepoCloning",e[e.RepoBusy=31]="RepoBusy",e[e.RepoExists=32]="RepoExists",e[e.RepoMissing=33]="RepoMissing",e[e.RepoMismatchShaAndReference=34]="RepoMismatchShaAndReference",e[e.RepoMismatchShaAndUpdate=35]="RepoMismatchShaAndUpdate",e[e.ByondCannotDeleteActiveVersion=36]="ByondCannotDeleteActiveVersion",e[e.RepoDuplicateTestMerge=37]="RepoDuplicateTestMerge",e[e.RepoWhitespaceCommitterName=38]="RepoWhitespaceCommitterName",e[e.RepoWhitespaceCommitterEmail=39]="RepoWhitespaceCommitterEmail",e[e.ApiPageTooLarge=40]="ApiPageTooLarge",e[e.ApiInvalidPageOrPageSize=41]="ApiInvalidPageOrPageSize",e[e.ChatBotWrongChannelType=42]="ChatBotWrongChannelType",e[e.ChatBotWhitespaceConnectionString=43]="ChatBotWhitespaceConnectionString",e[e.ChatBotWhitespaceName=44]="ChatBotWhitespaceName",e[e.ChatBotProviderMissing=45]="ChatBotProviderMissing",e[e.ConfigurationContendedAccess=46]="ConfigurationContendedAccess",e[e.ChatBotMax=47]="ChatBotMax",e[e.ChatBotMaxChannels=48]="ChatBotMaxChannels",e[e.ByondDirectXInstallFail=49]="ByondDirectXInstallFail",e[e.ByondDownloadFail=50]="ByondDownloadFail",e[e.ByondNoVersionsInstalled=51]="ByondNoVersionsInstalled",e[e.DreamMakerNeverValidated=52]="DreamMakerNeverValidated",e[e.DreamMakerInvalidValidation=53]="DreamMakerInvalidValidation",e[e.CannotRemoveLastAuthenticationOption=54]="CannotRemoveLastAuthenticationOption",e[e.DreamMakerNoDme=55]="DreamMakerNoDme",e[e.DreamMakerMissingDme=56]="DreamMakerMissingDme",e[e.DreamMakerExitCode=57]="DreamMakerExitCode",e[e.DreamMakerCompileJobInProgress=58]="DreamMakerCompileJobInProgress",e[e.InstanceMissingDreamDaemonSettings=59]="InstanceMissingDreamDaemonSettings",e[e.InstanceMissingDreamMakerSettings=60]="InstanceMissingDreamMakerSettings",e[e.InstanceMissingRepositorySettings=61]="InstanceMissingRepositorySettings",e[e.InstanceUpdateTestMergeConflict=62]="InstanceUpdateTestMergeConflict",e[e.RepoCredentialsRequired=63]="RepoCredentialsRequired",e[e.RepoCannotAuthenticate=64]="RepoCannotAuthenticate",e[e.RepoReferenceRequired=65]="RepoReferenceRequired",e[e.WatchdogRunning=66]="WatchdogRunning",e[e.WatchdogCompileJobCorrupted=67]="WatchdogCompileJobCorrupted",e[e.WatchdogStartupFailed=68]="WatchdogStartupFailed",e[e.WatchdogStartupTimeout=69]="WatchdogStartupTimeout",e[e.RepoUnsupportedTestMergeRemote=70]="RepoUnsupportedTestMergeRemote",e[e.RepoSwappedShaOrReference=71]="RepoSwappedShaOrReference",e[e.RepoMergeConflict=72]="RepoMergeConflict",e[e.RepoReferenceNotTracking=73]="RepoReferenceNotTracking",e[e.RepoTestMergeConflict=74]="RepoTestMergeConflict",e[e.InstanceNotAtWhitelistedPath=75]="InstanceNotAtWhitelistedPath",e[e.DreamDaemonDoubleSoft=76]="DreamDaemonDoubleSoft",e[e.DeploymentPagerRunning=77]="DeploymentPagerRunning",e[e.DreamDaemonPortInUse=78]="DreamDaemonPortInUse",e[e.PostDeployFailure=79]="PostDeployFailure",e[e.WatchdogNotRunning=80]="WatchdogNotRunning",e[e.ResourceNotPresent=81]="ResourceNotPresent",e[e.ResourceNeverPresent=82]="ResourceNeverPresent",e[e.GitHubApiRateLimit=83]="GitHubApiRateLimit",e[e.JobStopped=84]="JobStopped",e[e.MissingGCore=85]="MissingGCore",e[e.GCoreFailure=86]="GCoreFailure",e[e.RepoTestMergeInvalidRemote=87]="RepoTestMergeInvalidRemote",e[e.ByondNonExistentCustomVersion=88]="ByondNonExistentCustomVersion",e[e.DreamDaemonOffline=89]="DreamDaemonOffline",e[e.InstanceOffline=90]="InstanceOffline",e[e.ChatCannotConnectProvider=91]="ChatCannotConnectProvider",e[e.ByondDreamDaemonFirewallFail=92]="ByondDreamDaemonFirewallFail",e[e.NoPortsAvailable=93]="NoPortsAvailable",e[e.PortNotAvailable=94]="PortNotAvailable",e[e.AdminUserCannotOAuth=95]="AdminUserCannotOAuth",e[e.OAuthProviderDisabled=96]="OAuthProviderDisabled",e[e.FileUploadExpired=97]="FileUploadExpired",e[e.UserGroupAndPermissionSet=98]="UserGroupAndPermissionSet",e[e.UserGroupNotEmpty=99]="UserGroupNotEmpty",e[e.UserLimitReached=100]="UserLimitReached",e[e.UserGroupLimitReached=101]="UserGroupLimitReached",e[e.DeploymentTimeout=102]="DeploymentTimeout"}(R||(R={})),function(e){e[e.None=0]="None",e[e.Read=1]="Read",e[e.Create=2]="Create",e[e.Rename=4]="Rename",e[e.Relocate=8]="Relocate",e[e.SetOnline=16]="SetOnline",e[e.Delete=32]="Delete",e[e.List=64]="List",e[e.SetConfiguration=128]="SetConfiguration",e[e.SetAutoUpdate=256]="SetAutoUpdate",e[e.SetChatBotLimit=512]="SetChatBotLimit",e[e.GrantPermissions=1024]="GrantPermissions"}(g||(g={})),function(e){e[e.None=0]="None",e[e.Read=1]="Read",e[e.Write=2]="Write",e[e.Create=4]="Create"}(w||(w={})),function(e){e.GitHub="GitHub",e.Discord="Discord",e.TGForums="TGForums",e.Keycloak="Keycloak",e.InvisionCommunity="InvisionCommunity"}(f||(f={})),function(e){e[e.Unknown=0]="Unknown",e[e.GitHub=1]="GitHub",e[e.GitLab=2]="GitLab"}(E||(E={})),function(e){e[e.None=0]="None",e[e.CancelPendingChanges=1]="CancelPendingChanges",e[e.SetOrigin=2]="SetOrigin",e[e.SetSha=4]="SetSha",e[e.MergePullRequest=8]="MergePullRequest",e[e.UpdateBranch=16]="UpdateBranch",e[e.ChangeCommitter=32]="ChangeCommitter",e[e.ChangeTestMergeCommits=64]="ChangeTestMergeCommits",e[e.ChangeCredentials=128]="ChangeCredentials",e[e.SetReference=256]="SetReference",e[e.Read=512]="Read",e[e.ChangeAutoUpdateSettings=1024]="ChangeAutoUpdateSettings",e[e.Delete=2048]="Delete",e[e.CancelClone=4096]="CancelClone",e[e.ChangeSubmoduleUpdate=8192]="ChangeSubmoduleUpdate"}(I||(I={})),function(e){e[e.Administration=0]="Administration",e[e.InstanceManager=1]="InstanceManager",e[e.Repository=2]="Repository",e[e.Byond=3]="Byond",e[e.DreamMaker=4]="DreamMaker",e[e.DreamDaemon=5]="DreamDaemon",e[e.ChatBots=6]="ChatBots",e[e.Configuration=7]="Configuration",e[e.InstancePermissionSet=8]="InstancePermissionSet"}(C||(C={})),function(e){e[e.Offline=0]="Offline",e[e.Restoring=1]="Restoring",e[e.Online=2]="Online",e[e.DelayedRestart=3]="DelayedRestart"}(P||(P={})),function(e){e.Json="application/json",e.FormData="multipart/form-data",e.UrlEncoded="application/x-www-form-urlencoded"}(S||(S={}));class O{constructor({securityWorker:e,secure:t,format:r,...n}={}){this.instance=void 0,this.securityData=null,this.securityWorker=void 0,this.secure=void 0,this.format=void 0,this.setSecurityData=e=>{this.securityData=e},this.request=async({secure:e,path:t,type:r,query:n,format:o,body:s,...a})=>{const i=("boolean"==typeof e?e:this.secure)&&this.securityWorker&&await this.securityWorker(this.securityData)||{},c=this.mergeRequestParams(a,i),d=o||this.format||void 0;return r===S.FormData&&s&&null!==s&&"object"==typeof s&&(c.headers.common={Accept:"*/*"},c.headers.post={},c.headers.put={},s=this.createFormData(s)),this.instance.request({...c,headers:{...r&&r!==S.FormData?{"Content-Type":r}:{},...c.headers||{}},params:n,responseType:d,data:s,url:t})},this.instance=o().create({...n,baseURL:n.baseURL||""}),this.secure=t,this.format=r,this.securityWorker=e}mergeRequestParams(e,t){return{...this.instance.defaults,...e,...t||{},headers:{...this.instance.defaults.headers||{},...e.headers||{},...t&&t.headers||{}}}}createFormData(e){return Object.keys(e||{}).reduce(((t,r)=>{const n=e[r];return t.append(r,n instanceof Blob?n:"object"==typeof n&&null!==n?JSON.stringify(n):`${n}`),t}),new FormData)}}class Z{constructor(e){this.http=void 0,this.homeControllerHome=(e={})=>this.http.request({path:"/",method:"GET",format:"json",...e}),this.homeControllerCreateToken=(e={})=>this.http.request({path:"/",method:"POST",secure:!0,format:"json",...e}),this.administration={administrationControllerRead:(e={})=>this.http.request({path:"/Administration",method:"GET",secure:!0,format:"json",...e}),administrationControllerUpdate:(e,t={})=>this.http.request({path:"/Administration",method:"POST",body:e,secure:!0,type:S.Json,format:"json",...t}),administrationControllerDelete:(e={})=>this.http.request({path:"/Administration",method:"DELETE",secure:!0,...e}),administrationControllerListLogs:(e,t={})=>this.http.request({path:"/Administration/Logs",method:"GET",query:e,secure:!0,format:"json",...t}),administrationControllerGetLog:(e,t={})=>this.http.request({path:`/Administration/Logs/${e}`,method:"GET",secure:!0,format:"json",...t})},this.byond={byondControllerRead:(e={})=>this.http.request({path:"/Byond",method:"GET",secure:!0,format:"json",...e}),byondControllerUpdate:(e,t={})=>this.http.request({path:"/Byond",method:"POST",body:e,secure:!0,type:S.Json,format:"json",...t}),byondControllerDelete:(e,t={})=>this.http.request({path:"/Byond",method:"DELETE",body:e,secure:!0,type:S.Json,format:"json",...t}),byondControllerList:(e,t={})=>this.http.request({path:"/Byond/List",method:"GET",query:e,secure:!0,format:"json",...t})},this.chat={chatControllerCreate:(e,t={})=>this.http.request({path:"/Chat",method:"PUT",body:e,secure:!0,type:S.Json,format:"json",...t}),chatControllerUpdate:(e,t={})=>this.http.request({path:"/Chat",method:"POST",body:e,secure:!0,type:S.Json,format:"json",...t}),chatControllerDelete:(e,t={})=>this.http.request({path:`/Chat/${e}`,method:"DELETE",secure:!0,...t}),chatControllerGetId:(e,t={})=>this.http.request({path:`/Chat/${e}`,method:"GET",secure:!0,format:"json",...t}),chatControllerList:(e,t={})=>this.http.request({path:"/Chat/List",method:"GET",query:e,secure:!0,format:"json",...t})},this.config={configurationControllerUpdate:(e,t={})=>this.http.request({path:"/Config",method:"POST",body:e,secure:!0,type:S.Json,format:"json",...t}),configurationControllerCreateDirectory:(e,t={})=>this.http.request({path:"/Config",method:"PUT",body:e,secure:!0,type:S.Json,format:"json",...t}),configurationControllerDeleteDirectory:(e,t={})=>this.http.request({path:"/Config",method:"DELETE",body:e,secure:!0,type:S.Json,...t}),configurationControllerFile:(e,t={})=>this.http.request({path:`/Config/File/${e}`,method:"GET",secure:!0,format:"json",...t}),configurationControllerDirectory:({directoryPath:e,...t},r={})=>this.http.request({path:`/Config/List/${e}`,method:"GET",query:t,secure:!0,format:"json",...r}),configurationControllerList:(e,t={})=>this.http.request({path:"/Config/List",method:"GET",query:e,secure:!0,format:"json",...t})},this.dreamDaemon={dreamDaemonControllerCreate:(e={})=>this.http.request({path:"/DreamDaemon",method:"PUT",secure:!0,format:"json",...e}),dreamDaemonControllerRead:(e={})=>this.http.request({path:"/DreamDaemon",method:"GET",secure:!0,format:"json",...e}),dreamDaemonControllerDelete:(e={})=>this.http.request({path:"/DreamDaemon",method:"DELETE",secure:!0,...e}),dreamDaemonControllerUpdate:(e,t={})=>this.http.request({path:"/DreamDaemon",method:"POST",body:e,secure:!0,type:S.Json,format:"json",...t}),dreamDaemonControllerRestart:(e={})=>this.http.request({path:"/DreamDaemon",method:"PATCH",secure:!0,format:"json",...e}),dreamDaemonControllerCreateDump:(e={})=>this.http.request({path:"/DreamDaemon/Diagnostics",method:"PATCH",secure:!0,format:"json",...e})},this.dreamMaker={dreamMakerControllerRead:(e={})=>this.http.request({path:"/DreamMaker",method:"GET",secure:!0,format:"json",...e}),dreamMakerControllerCreate:(e={})=>this.http.request({path:"/DreamMaker",method:"PUT",secure:!0,format:"json",...e}),dreamMakerControllerUpdate:(e,t={})=>this.http.request({path:"/DreamMaker",method:"POST",body:e,secure:!0,type:S.Json,format:"json",...t}),dreamMakerControllerGetId:(e,t={})=>this.http.request({path:`/DreamMaker/${e}`,method:"GET",secure:!0,format:"json",...t}),dreamMakerControllerList:(e,t={})=>this.http.request({path:"/DreamMaker/List",method:"GET",query:e,secure:!0,format:"json",...t})},this.instance={instanceControllerCreate:(e,t={})=>this.http.request({path:"/Instance",method:"PUT",body:e,secure:!0,type:S.Json,format:"json",...t}),instanceControllerUpdate:(e,t={})=>this.http.request({path:"/Instance",method:"POST",body:e,secure:!0,type:S.Json,format:"json",...t}),instanceControllerDelete:(e,t={})=>this.http.request({path:`/Instance/${e}`,method:"DELETE",secure:!0,...t}),instanceControllerGetId:(e,t={})=>this.http.request({path:`/Instance/${e}`,method:"GET",secure:!0,format:"json",...t}),instanceControllerGrantPermissions:(e,t={})=>this.http.request({path:`/Instance/${e}`,method:"PATCH",secure:!0,...t}),instanceControllerList:(e,t={})=>this.http.request({path:"/Instance/List",method:"GET",query:e,secure:!0,format:"json",...t})},this.instancePermissionSet={instancePermissionSetControllerCreate:(e,t={})=>this.http.request({path:"/InstancePermissionSet",method:"PUT",body:e,secure:!0,type:S.Json,format:"json",...t}),instancePermissionSetControllerUpdate:(e,t={})=>this.http.request({path:"/InstancePermissionSet",method:"POST",body:e,secure:!0,type:S.Json,format:"json",...t}),instancePermissionSetControllerRead:(e={})=>this.http.request({path:"/InstancePermissionSet",method:"GET",secure:!0,format:"json",...e}),instancePermissionSetControllerList:(e,t={})=>this.http.request({path:"/InstancePermissionSet/List",method:"GET",query:e,secure:!0,format:"json",...t}),instancePermissionSetControllerGetId:(e,t={})=>this.http.request({path:`/InstancePermissionSet/${e}`,method:"GET",secure:!0,format:"json",...t}),instancePermissionSetControllerDelete:(e,t={})=>this.http.request({path:`/InstancePermissionSet/${e}`,method:"DELETE",secure:!0,...t})},this.job={jobControllerRead:(e,t={})=>this.http.request({path:"/Job",method:"GET",query:e,secure:!0,format:"json",...t}),jobControllerList:(e,t={})=>this.http.request({path:"/Job/List",method:"GET",query:e,secure:!0,format:"json",...t}),jobControllerDelete:(e,t={})=>this.http.request({path:`/Job/${e}`,method:"DELETE",secure:!0,format:"json",...t}),jobControllerGetId:(e,t={})=>this.http.request({path:`/Job/${e}`,method:"GET",secure:!0,format:"json",...t})},this.repository={repositoryControllerCreate:(e,t={})=>this.http.request({path:"/Repository",method:"PUT",body:e,secure:!0,type:S.Json,format:"json",...t}),repositoryControllerDelete:(e={})=>this.http.request({path:"/Repository",method:"DELETE",secure:!0,format:"json",...e}),repositoryControllerRead:(e={})=>this.http.request({path:"/Repository",method:"GET",secure:!0,format:"json",...e}),repositoryControllerUpdate:(e,t={})=>this.http.request({path:"/Repository",method:"POST",body:e,secure:!0,type:S.Json,format:"json",...t})},this.transfer={transferControllerDownload:(e,t={})=>this.http.request({path:"/Transfer",method:"GET",query:e,secure:!0,...t}),transferControllerUpload:(e,t,r={})=>this.http.request({path:"/Transfer",method:"PUT",query:e,body:t,secure:!0,...r})},this.user={userControllerCreate:(e,t={})=>this.http.request({path:"/User",method:"PUT",body:e,secure:!0,type:S.Json,format:"json",...t}),userControllerUpdate:(e,t={})=>this.http.request({path:"/User",method:"POST",body:e,secure:!0,type:S.Json,format:"json",...t}),userControllerRead:(e={})=>this.http.request({path:"/User",method:"GET",secure:!0,format:"json",...e}),userControllerList:(e,t={})=>this.http.request({path:"/User/List",method:"GET",query:e,secure:!0,format:"json",...t}),userControllerGetId:(e,t={})=>this.http.request({path:`/User/${e}`,method:"GET",secure:!0,format:"json",...t})},this.userGroup={userGroupControllerCreate:(e,t={})=>this.http.request({path:"/UserGroup",method:"PUT",body:e,secure:!0,type:S.Json,format:"json",...t}),userGroupControllerUpdate:(e,t={})=>this.http.request({path:"/UserGroup",method:"POST",body:e,secure:!0,type:S.Json,format:"json",...t}),userGroupControllerGetId:(e,t={})=>this.http.request({path:`/UserGroup/${e}`,method:"GET",secure:!0,format:"json",...t}),userGroupControllerDelete:(e,t={})=>this.http.request({path:`/UserGroup/${e}`,method:"DELETE",secure:!0,...t}),userGroupControllerList:(e,t={})=>this.http.request({path:"/UserGroup/List",method:"GET",query:e,secure:!0,format:"json",...t})},this.http=e}}},1895:function(e,t,r){let n;r.d(t,{P:function(){return n}}),function(e){e[e.Password=0]="Password",e[e.OAuth=1]="OAuth"}(n||(n={}))},6846:function(e,t,r){r.d(t,{ZP:function(){return d},_T:function(){return c},jK:function(){return i}});var n=r(6964),o=r(8509),s=r(7961),a=r(2522);let i,c;!function(e){e.OK='Isnt displayed but is used as an "error" when everything is ok',e.HTTP_BAD_REQUEST="error.http.bad_request",e.HTTP_DATA_INEGRITY="error.http.data_integrity",e.HTTP_API_MISMATCH="error.http.api_mismatch",e.HTTP_SERVER_ERROR="error.http.server_error",e.HTTP_UNIMPLEMENTED="error.http.unimplemented",e.HTTP_ACCESS_DENIED="error.http.access_denied",e.HTTP_NOT_ACCEPTABLE="error.http.not_acceptable",e.UNHANDLED_RESPONSE="error.unhandled_response",e.UNHANDLED_GLOBAL_RESPONSE="error.unhandled_global_response",e.AXIOS="error.axios",e.GITHUB_FAIL="error.github",e.APP_FAIL="error.app",e.NO_APIPATH="error.no_apipath",e.LOGIN_FAIL="error.login.bad_user_pass",e.LOGIN_NOCREDS="error.login.no_creds",e.LOGIN_DISABLED="error.login.user_disabled",e.LOGIN_BAD_OAUTH="error.login.bad_oauth",e.LOGIN_RATELIMIT="error.login.rate_limit",e.USER_NO_SYS_IDENT="error.user.no_sys_ident",e.USER_NOT_FOUND="error.user.not_found",e.ADMIN_GITHUB_RATE="error.admin.rate",e.ADMIN_GITHUB_ERROR="error.admin.error",e.ADMIN_WATCHDOG_UNAVAIL="error.admin.watchdog.avail",e.ADMIN_VERSION_NOT_FOUND="error.admin.update.notfound",e.ADMIN_LOGS_IO_ERROR="error.admin.logs.io",e.JOB_JOB_NOT_FOUND="error.job.not_found",e.JOB_JOB_COMPLETE="error.job.complete",e.TRANSFER_NOT_AVAILABLE="error.transfer.not_available",e.UPLOAD_FAILED="error.transfer.upload_failed",e.GROUP_NOT_FOUND="error.group.not_found",e.GROUP_NOT_EMPTY="error.group.not_empty",e.NO_DB_ENTITY="error.no_db_entity",e.BYOND_VERSION_NOT_FOUND="error.no_byond_version",e.COMPILE_JOB_NOT_FOUND="error.compile_job_not_found",e.CONFIG_FILE_NOT_FOUND="error.config_file_not_found",e.CONFIG_FILE_IO_ERROR="error.config_file_io",e.CONFIG_FILE_DIRECTORY_NOT_FOUND="error.config_file_directory_not_found",e.BAD_TGS_YML="error.bad_tgs_yml",e.BAD_TGS_YML_VERSION="error.bad_tgs_yml_version",e.BAD_CHANNELS_JSON="error.bad_channels_json"}(i||(i={})),function(e){e[e.LOCALE=0]="LOCALE",e[e.TEXT=1]="TEXT"}(c||(c={}));class d{constructor(e,t,r,i){if(this.code=void 0,this.desc=void 0,this.extendedInfo=void 0,this.originalErrorMessage=void 0,this.code=e,"errorMessage"in t){const e=t.errorMessage;this.originalErrorMessage=e,this.desc={type:c.TEXT,desc:`${o.jK[e.errorCode]}: ${e.message}${e.additionalData?": "+e.additionalData:""}`},e.message||(this.desc={type:c.TEXT,desc:o.jK[e.errorCode]})}if("jsError"in t){const e=t.jsError;this.desc={type:c.TEXT,desc:`${e.name}: ${e.message}`}}const d=(new Error).stack;r?.config.headers.Authorization&&(r.config.headers.Authorization="*********");let l=JSON.stringify({addon:t,origin:r,config:s.ZP,stack:d});l=l.replace(/Basic (?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?/g,"Basic **************"),l=l.replace(/{"username":".+?","password":".+?"}/g,'{"username":"*******","password":"*******"}'),a.Z.isTokenValid()&&(l=(0,n.ko)(l,a.Z.token.bearer,"**************")),s.ZP.githubtoken.value&&(l=(0,n.ko)(l,s.ZP.githubtoken.value,"**************")),this.extendedInfo=l,i||console.error(`Error occured within the application: ${this.code} (${this.desc?.desc??"No description"})`,this),window.breakonerror}}},3803:function(e,t,r){let n;r.d(t,{G:function(){return n}}),function(e){e[e.OK=0]="OK",e[e.ERROR=1]="ERROR"}(n||(n={}));t.Z=function(e){return Object.freeze(Object.assign({},e))}},7806:function(e,t,r){var n=r(7961);t.Z=new class{loadconfig(){for(const e of Object.values(n.ZP))this.getconfig(e);console.log("Configuration loaded",n.ZP)}saveconfig(e){for(const[t,r]of Object.entries(e))this.setconfig(t,r);console.log("Configuration saved",n.ZP)}setconfig(e,t){if(void 0===t?.value)return this.deleteconfig(e);switch(t.type){case"num":{const e=parseInt(t.value);if(Number.isNaN(t.value))return;if(void 0!==t.min&&e<t.min)return;if(void 0!==t.max&&e>t.max)return;t.value=e;break}}t.callback&&t.callback(n.ZP[e].value,t.value),n.ZP[e].value=t.value;try{localStorage.setItem(t.id,JSON.stringify(t.value))}catch(e){}}getconfig(e){try{const t=localStorage.getItem(e.id);if(null!=t){const r=JSON.parse(t);null!=r&&(e.value=r)}}catch(e){}}deleteconfig(e){try{const t=n.ZP[e];localStorage.removeItem(t.id)}catch(e){}}}},2522:function(e,t,r){var n=r(1895);t.Z=new class{isTokenValid(){return this.token&&this.token.bearer}constructor(){this.token=void 0,this.defaulted=void 0,this.credentials=void 0,this.default={type:n.P.Password,userName:"admin",password:"ISolemlySwearToDeleteTheDataDirectory"}}}},9521:function(e,t,r){var n=r(1249),o=r(2527),s=r(6964),a=r(8509),i=r(6352),c=r(5870),d=r(3204),l=r(6846),h=r(3803),u=r(5631),p=r(6942),m=r(7961),R=r(452);t.Z=new class extends o.TypedEmitter{set fastmode(e){console.log(`JobsController going in fastmode for ${e} cycles`),this.fastmodecount=e,this.restartLoop()}reset(e=!0){e&&(this.jobs=new Map,this.jobsByInstance=new Map),this.reloadAccessibleInstances().then(this.restartLoop).catch((e=>{this.errors.push(new l.ZP(l.jK.APP_FAIL,{jsError:Error(e)}))}))}constructor(){super(),this.fastmodecount=0,this.currentLoop=new Date(0),this.accessibleInstances=new Map,this.enableJobProgressWorkaround=void 0,this.errors=[],this.jobs=new Map,this.jobsByInstance=new Map,this.jobCallback=new Map,this.lastSeenJob=-1,this.loop=this.loop.bind(this),this.reset=this.reset.bind(this),this.restartLoop=this.restartLoop.bind(this)}init(){window.clients.JobsController=this,u.Z.on("purgeCache",this.reset),i.Z.on("instanceChange",(()=>this.reset(!1))),R.Z.addHook((async()=>this.reset(!1))),u.Z.on("loadServerInfo",(e=>{e.code===h.G.OK&&(this.enableJobProgressWorkaround=(0,n.satisfies)(e.payload.version,"<4.11.0"))}))}async reloadAccessibleInstances(e=!1){const t=[],r=await i.Z.listInstances({pageSize:100});if(r.code===h.G.ERROR)return void this.errors.push(r.error);t.push(...r.payload.content);for(let e=2;e<=r.payload.totalPages;e++){const r=await i.Z.listInstances({page:e,pageSize:100});if(r.code===h.G.ERROR)return void this.errors.push(r.error);t.push(...r.payload.content)}const n=new Map,o=t.filter((e=>e.online&&e.accessible)).map((e=>c.Z.getCurrentInstancePermissionSet(e.id).then((t=>{t.code!==h.G.ERROR?n.set(e.id,e):t.error.code!==l.jK.HTTP_ACCESS_DENIED&&this.errors.push(t.error)}))));await Promise.all(o),this.accessibleInstances=n,e&&window.setTimeout((()=>{this.reloadAccessibleInstances(!0)}),m.ZP.instanceprobetimer.value)}restartLoop(){const e=new Date(Date.now());this.currentLoop=e,window.setTimeout((()=>{this.loop(e).catch((e=>this.errors.push(new l.ZP(l.jK.APP_FAIL,{jsError:Error(e)}))))}),0)}_registerJob(e,t){const r=e;t&&(r.instanceid=t);const n=this.jobsByInstance.get(r.instanceid)??new Map;this.jobsByInstance.set(r.instanceid,n),n.set(r.id,r),this.jobs.set(r.id,r)}registerJob(e,t){this._registerJob(e,t),this.restartLoop()}async loop(e){if(e!==this.currentLoop)return;this.errors=[];let t=0;const r=[];let n=this.lastSeenJob;for(const o of this.accessibleInstances.keys()){const s=async r=>{for(const e of r)this._registerJob(e),n=Math.max(n,e.id);const s=r.map((e=>e.id)),a=Array.from(this.jobs.values()).filter((e=>!e.stoppedAt)).filter((e=>e.instanceid===o)).map((e=>e.id)).filter((e=>!s.includes(e))),i=this.jobsByInstance.get(o)??new Map;this.jobsByInstance.set(o,i);const c=[];a.forEach((e=>{c.push(d.Z.getJob(o,e).then((e=>{e.code!==h.G.ERROR?(i.set(e.payload.id,e.payload),this.jobs.set(e.payload.id,e.payload)):this.errors.push(e.error)})))})),await Promise.all(c),e===this.currentLoop&&(t+=r.length)},i=e=>{e.code===l.jK.HTTP_DATA_INEGRITY&&e.originalErrorMessage?.errorCode===a.jK.InstanceOffline?(console.log(`[JobsController] Clearing instance ${o} as it is now offline`),this.accessibleInstances.delete(o),this.reloadAccessibleInstances().catch((e=>{this.errors.push(new l.ZP(l.jK.APP_FAIL,{jsError:Error(e)}))}))):this.errors.push(e)},c=-1===this.lastSeenJob?d.Z.listActiveJobs:d.Z.listJobs;r.push(c(o,{page:1,pageSize:10}).then((async t=>{if(e===this.currentLoop)if(t.code===h.G.OK){let r=t.payload.content;e:for(let e=2;e<=t.payload.totalPages;e++){for(const e of r)if(e.id<=this.lastSeenJob)break e;const n=await c(o,{page:e,pageSize:10});if(n.code===h.G.ERROR)return void i(n.error);t.payload.content.push(...n.payload.content),r=t.payload.content}if(e!==this.currentLoop)return;await s(t.payload.content.filter((e=>e.id>this.lastSeenJob||this.jobs.has(e.id))))}else i(t.error)})).catch((e=>{console.error(e)})))}await Promise.all(r),this.lastSeenJob=n,r.length=0;for(const t of this.jobs.values())this.enableJobProgressWorkaround&&void 0===t.progress&&!t.stoppedAt&&this.accessibleInstances.has(t.instanceid)&&r.push(d.Z.getJob(t.instanceid,t.id).then((r=>{e===this.currentLoop&&(r.code===h.G.OK?t.progress=r.payload.progress:r.error.code===l.jK.HTTP_DATA_INEGRITY&&r.error.originalErrorMessage?.errorCode===a.jK.InstanceOffline?(console.log(`[JobsController] Clearing instance ${t.instanceid} as it is now offline`),this.accessibleInstances.delete(t.instanceid),this.reloadAccessibleInstances().catch((e=>{this.errors.push(new l.ZP(l.jK.APP_FAIL,{jsError:Error(e)}))}))):this.errors.push(r.error))}))),r.push(this.canCancel(t,this.errors).then((r=>{e===this.currentLoop&&(t.canCancel=r)})));if(await Promise.all(r),e===this.currentLoop){this.emit("jobsLoaded");for(const e of this.jobs.values()){if(!e.stoppedAt)continue;const t=this.jobCallback.get(e.id);if(t){for(const r of t)r(e);this.jobCallback.delete(e.id)}}this.fastmodecount&&e===this.currentLoop?(window.setTimeout((()=>{this.loop(e).catch((e=>this.errors.push(new l.ZP(l.jK.APP_FAIL,{jsError:Error(e)}))))}),800),this.fastmodecount--,console.log(`JobsController will remain in fastmode for ${this.fastmodecount} cycles`)):window.setTimeout((()=>{this.loop(e).catch((e=>this.errors.push(new l.ZP(l.jK.APP_FAIL,{jsError:Error(e)}))))}),1e3*(t?m.ZP.jobpollactive.value:m.ZP.jobpollinactive.value))}}async canCancel(e,t){if(void 0!==e.canCancel)return e.canCancel;if(void 0===e.cancelRightsType)return!0;switch(e.cancelRightsType){case a.KT.Administration:{const r=await p.Z.getCurrentUser();if(r.code===h.G.OK){const t=e.cancelRight;return!!((0,s.Zg)(r.payload).administrationRights&t)}return t.push(r.error),!1}case a.KT.InstanceManager:{const r=await p.Z.getCurrentUser();if(r.code===h.G.OK){const t=e.cancelRight;return!!((0,s.Zg)(r.payload).instanceManagerRights&t)}return t.push(r.error),!1}case a.KT.Byond:{const r=await c.Z.getCurrentInstancePermissionSet(e.instanceid);if(r.code===h.G.OK){const t=e.cancelRight;return!!(r.payload.byondRights&t)}return t.push(r.error),!1}case a.KT.ChatBots:{const r=await c.Z.getCurrentInstancePermissionSet(e.instanceid);if(r.code===h.G.OK){const t=e.cancelRight;return!!(r.payload.chatBotRights&t)}return t.push(r.error),!1}case a.KT.Configuration:{const r=await c.Z.getCurrentInstancePermissionSet(e.instanceid);if(r.code===h.G.OK){const t=e.cancelRight;return!!(r.payload.configurationRights&t)}return t.push(r.error),!1}case a.KT.DreamDaemon:{const r=await c.Z.getCurrentInstancePermissionSet(e.instanceid);if(r.code===h.G.OK){const t=e.cancelRight;return!!(r.payload.dreamDaemonRights&t)}return t.push(r.error),!1}case a.KT.DreamMaker:{const r=await c.Z.getCurrentInstancePermissionSet(e.instanceid);if(r.code===h.G.OK){const t=e.cancelRight;return!!(r.payload.dreamMakerRights&t)}return t.push(r.error),!1}case a.KT.InstancePermissionSet:{const r=await c.Z.getCurrentInstancePermissionSet(e.instanceid);if(r.code===h.G.OK){const t=e.cancelRight;return!!(r.payload.instancePermissionSetRights&t)}return t.push(r.error),!1}case a.KT.Repository:{const r=await c.Z.getCurrentInstancePermissionSet(e.instanceid);if(r.code===h.G.OK){const t=e.cancelRight;return!!(r.payload.repositoryRights&t)}return t.push(r.error),!1}}}async cancelJob(e,t){const r=this.jobs.get(e);if(!r)return!1;const n=await d.Z.deleteJob(r.instanceid,e);return n.code===h.G.OK||(t(n.error),!1)}clearJob(e,t=!1){const r=this.jobs.get(e);return!!r&&(this.jobsByInstance.get(r.instanceid)?.delete(e),this.jobs.delete(e),t||this.emit("jobsLoaded"),!0)}registerCallback(e,t){const r=this.jobCallback.get(e)??new Set;r.add(t),this.jobCallback.set(e,r)}}},452:function(e,t,r){var n=r(2527);class o extends n.TypedEmitter{constructor(...e){super(...e),this.promiseHooks=new Set}runHooks(e){console.log("Running login hooks");let t=0;const r=[];for(const n of this.promiseHooks){const o=t;console.log(`Running hook ${n.name}(${o})`),r.push(new Promise(((t,r)=>{n(e).then((()=>{console.log(`Done hook ${n.name}(${o})`),t()})).catch((e=>{console.error(`Error running hook ${n.name}(${o}): `,e),r(e)}))}))),t++}Promise.all(r).then((()=>{console.log("Running post login event"),this.emit("loginSuccess",e)})).catch((()=>console.error("An error occured while running login hooks")))}addHook(e){this.promiseHooks.add(e)}removeHook(e){this.promiseHooks.delete(e)}}t.Z=new o},7961:function(e,t,r){r.d(t,{mf:function(){return s},zQ:function(){return o}});var n=r(6755);let o,s;!function(e){e.ALWAYS="always",e.AUTO="auto",e.NEVER="never"}(o||(o={})),function(e){e.AUTO="auto",e.COLLAPSE="collapse",e.EXPAND="expand"}(s||(s={}));const a={githubtoken:{id:"config.githubtoken",type:"pwd",value:""},apipath:{id:"config.apipath",type:"str",value:window.publicPath?new URL("..",new URL(window.publicPath,window.location.href)).href:n.cV},jobpollinactive:{id:"config.jobpollinactive",type:"num",value:15},jobpollactive:{id:"config.jobpollactive",type:"num",value:5},jobswidgetdisplay:{id:"config.jobswidgetdisplay",type:"enum",possibleValues:o,value:o.AUTO},instanceprobetimer:{id:"config.instanceprobetimer",type:"num",value:60},itemsperpage:{id:"config.itemsperpage",type:"num",value:25,min:1,max:100},instanceeditsidebar:{id:"config.instanceeditsidebar",type:"enum",possibleValues:s,value:s.AUTO},showjson:{id:"config.showjson",type:"bool",value:"DEV"===n.IK},manualpr:{id:"config.manualpr",type:"bool",value:!0}};t.ZP=a}}]);
//# sourceMappingURL=607.7623fa2cc5a7675a5972.bundle.js.map