{"version":3,"file":"182.900743175fbc3d625069.bundle.js","mappings":"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","sources":["webpack://tgstation-server-control-panel/./src/components/utils/WIPNotice.tsx","webpack://tgstation-server-control-panel/./src/components/views/Instance/Edit/Config.tsx","webpack://tgstation-server-control-panel/./src/components/views/Instance/Edit/Deployment.tsx","webpack://tgstation-server-control-panel/./src/components/views/Instance/Edit/JobHistory.tsx","webpack://tgstation-server-control-panel/./src/components/views/Instance/Edit/Server.tsx","webpack://tgstation-server-control-panel/./src/components/views/Instance/InstanceEdit.tsx","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Tab.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabContainer.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabContent.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabPane.js"],"sourcesContent":["import React, { ReactNode } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { MODE, VERSION } from \"../../definitions/constants\";\n\nexport default class WIPNotice extends React.Component {\n    public render(): ReactNode {\n        return (\n            <Card className=\"bg-transparent\" border=\"info\">\n                <Card.Header className=\"bg-info text-dark font-weight-bold\">\n                    <FormattedMessage id=\"generic.wip\" />\n                </Card.Header>\n                <Card.Body>\n                    <Card.Title>\n                        <FormattedMessage id=\"generic.wip.desc\" />\n                        <a href=\"https://github.com/tgstation/Tgstation.Server.ControlPanel/releases/latest\">\n                            https://github.com/tgstation/Tgstation.Server.ControlPanel/releases/latest\n                        </a>\n                    </Card.Title>\n                    <Card.Text as={\"pre\"} className=\"bg-transparent text-info\">\n                        <code>\n                            {`Version: ${VERSION}\\nWebpanel Mode: ${MODE}\\nCurrent route: ${window.location.toString()}`}\n                        </code>\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n","import React from \"react\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\n\nimport {\n    ConfigurationType,\n    InstanceManagerRights,\n    InstanceUpdateRequest\n} from \"../../../../ApiClient/generatedcode/generated\";\nimport InstanceClient from \"../../../../ApiClient/InstanceClient\";\nimport InternalError, { ErrorCode } from \"../../../../ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"../../../../ApiClient/models/InternalComms/InternalStatus\";\nimport { InstanceEditContext } from \"../../../../contexts/InstanceEditContext\";\nimport { hasInstanceManagerRight, resolvePermissionSet } from \"../../../../utils/misc\";\nimport ErrorAlert from \"../../../utils/ErrorAlert\";\nimport { FieldType } from \"../../../utils/InputField\";\nimport InputForm from \"../../../utils/InputForm\";\nimport { DebugJsonViewer } from \"../../../utils/JsonViewer\";\n\ninterface IProps extends RouteComponentProps {}\ninterface IState {\n    errors: Array<InternalError<ErrorCode> | undefined>;\n}\n\nclass InstanceSettings extends React.Component<IProps, IState> {\n    public declare context: InstanceEditContext;\n\n    public constructor(props: IProps) {\n        super(props);\n\n        this.editInstance = this.editInstance.bind(this);\n\n        this.state = {\n            errors: []\n        };\n    }\n\n    private addError(error: InternalError<ErrorCode>): void {\n        this.setState(prevState => {\n            const errors = Array.from(prevState.errors);\n            errors.push(error);\n            return {\n                errors\n            };\n        });\n    }\n\n    private async editInstance(instance: Omit<InstanceUpdateRequest, \"id\">) {\n        const response = await InstanceClient.editInstance({\n            ...instance,\n            id: this.context.instance.id\n        });\n        if (response.code === StatusCode.OK) {\n            this.context.reloadInstance();\n        } else {\n            this.addError(response.error);\n        }\n    }\n\n    public render(): React.ReactNode {\n        const checkIMFlag = (flag: InstanceManagerRights) => {\n            return hasInstanceManagerRight(resolvePermissionSet(this.context.user), flag);\n        };\n\n        const fields = {\n            name: {\n                name: \"fields.instance.name\",\n                type: FieldType.String as FieldType.String,\n                defaultValue: this.context.instance.name,\n                disabled: !checkIMFlag(InstanceManagerRights.Rename)\n            },\n            path: {\n                name: \"fields.instance.path\",\n                type: FieldType.String as FieldType.String,\n                defaultValue: this.context.instance.path,\n                disabled: !checkIMFlag(InstanceManagerRights.Relocate)\n            },\n            chatBotLimit: {\n                name: \"fields.instance.chatbotlimit\",\n                type: FieldType.Number as FieldType.Number,\n                min: 0,\n                defaultValue: this.context.instance.chatBotLimit,\n                disabled: !checkIMFlag(InstanceManagerRights.SetChatBotLimit)\n            },\n            autoUpdateInterval: {\n                name: \"fields.instance.autoupdate\",\n                type: FieldType.Number as FieldType.Number,\n                min: 0,\n                defaultValue: this.context.instance.autoUpdateInterval,\n                disabled: !checkIMFlag(InstanceManagerRights.SetAutoUpdate)\n            },\n            configurationType: {\n                name: \"fields.instance.filemode\",\n                type: FieldType.Enum as FieldType.Enum,\n                enum: ConfigurationType,\n                defaultValue: this.context.instance.configurationType,\n                disabled: !checkIMFlag(InstanceManagerRights.SetConfiguration)\n            }\n        };\n\n        return (\n            <div className=\"text-center\">\n                <DebugJsonViewer obj={this.context} />\n                {this.state.errors.map((err, index) => {\n                    if (!err) return;\n                    return (\n                        <ErrorAlert\n                            key={index}\n                            error={err}\n                            onClose={() =>\n                                this.setState(prev => {\n                                    const newarr = Array.from(prev.errors);\n                                    newarr[index] = undefined;\n                                    return {\n                                        errors: newarr\n                                    };\n                                })\n                            }\n                        />\n                    );\n                })}\n\n                <InputForm fields={fields} onSave={this.editInstance} />\n            </div>\n        );\n    }\n}\nInstanceSettings.contextType = InstanceEditContext;\nexport default withRouter(InstanceSettings);\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport DreamMakerClient from \"../../../../ApiClient/DreamMakerClient\";\nimport {\n    DreamDaemonSecurity,\n    DreamMakerRequest,\n    DreamMakerResponse,\n    DreamMakerRights\n} from \"../../../../ApiClient/generatedcode/generated\";\nimport InternalError, { ErrorCode } from \"../../../../ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"../../../../ApiClient/models/InternalComms/InternalStatus\";\nimport JobsController from \"../../../../ApiClient/util/JobsController\";\nimport { InstanceEditContext } from \"../../../../contexts/InstanceEditContext\";\nimport { hasDreamMakerRight } from \"../../../../utils/misc\";\nimport { addError, displayErrors } from \"../../../utils/ErrorAlert\";\nimport GenericAlert from \"../../../utils/GenericAlert\";\nimport { FieldType } from \"../../../utils/InputField\";\nimport InputForm from \"../../../utils/InputForm\";\nimport { DebugJsonViewer } from \"../../../utils/JsonViewer\";\nimport Loading from \"../../../utils/Loading\";\nimport SimpleToolTip from \"../../../utils/SimpleTooltip\";\n\nexport function Deployment(): JSX.Element {\n    const instanceEditContext = useContext(InstanceEditContext);\n    const errorState = useState<Array<InternalError<ErrorCode> | undefined>>([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [deployInfo, setDeployInfo] = useState<DreamMakerResponse | null>(null);\n\n    const canRead = hasDreamMakerRight(\n        instanceEditContext.instancePermissionSet,\n        DreamMakerRights.Read\n    );\n    const canCompile = hasDreamMakerRight(\n        instanceEditContext.instancePermissionSet,\n        DreamMakerRights.Compile\n    );\n\n    async function loadDeployInfo() {\n        if (!canRead) return setIsLoading(false);\n\n        setIsLoading(true);\n        const response = await DreamMakerClient.getDeployInfo(instanceEditContext.instance.id);\n        setIsLoading(false);\n\n        if (response.code === StatusCode.OK) {\n            setDeployInfo(response.payload);\n        } else {\n            addError(errorState, response.error);\n        }\n    }\n\n    useEffect(() => {\n        void loadDeployInfo();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [instanceEditContext.instance.id]);\n\n    let timeout = undefined;\n    const parsedTimeMatch = /(?:(?<days>\\d+)\\.)?(?<hours>\\d+):(?<minutes>\\d+):(?<seconds>\\d+)/.exec(\n        deployInfo?.timeout ?? \"\"\n    );\n    if (parsedTimeMatch) {\n        const parsedTime = parsedTimeMatch.groups!;\n        timeout =\n            (parseInt(parsedTime.days ?? 0) * 24 + parseInt(parsedTime.hours)) * 60 +\n            parseInt(parsedTime.minutes) +\n            parseInt(parsedTime.seconds) / 60;\n    }\n\n    const fields = {\n        projectName: {\n            type: FieldType.String as FieldType.String,\n            name: \"fields.instance.deploy.projectname\",\n            tooltip: \"fields.instance.deploy.projectname.desc\",\n            defaultValue: deployInfo?.projectName,\n            disabled: !hasDreamMakerRight(\n                instanceEditContext.instancePermissionSet,\n                DreamMakerRights.SetDme\n            )\n        },\n        timeout: {\n            type: FieldType.Number as FieldType.Number,\n            name: \"fields.instance.deploy.timeout\",\n            tooltip: \"fields.instance.deploy.timeout.desc\",\n            defaultValue: timeout,\n            disabled: !hasDreamMakerRight(\n                instanceEditContext.instancePermissionSet,\n                DreamMakerRights.SetTimeout\n            )\n        },\n        apiValidationPort: {\n            type: FieldType.Number as FieldType.Number,\n            min: 1,\n            max: 65535,\n            name: \"fields.instance.deploy.apiport\",\n            tooltip: \"fields.instance.deploy.apiport.desc\",\n            defaultValue: deployInfo?.apiValidationPort,\n            disabled: !hasDreamMakerRight(\n                instanceEditContext.instancePermissionSet,\n                DreamMakerRights.SetApiValidationPort\n            )\n        },\n        apiValidationSecurityLevel: {\n            type: FieldType.Enum as FieldType.Enum,\n            enum: DreamDaemonSecurity,\n            name: \"fields.instance.deploy.seclevel\",\n            tooltip: \"fields.instance.deploy.seclevel.desc\",\n            defaultValue: deployInfo?.apiValidationSecurityLevel,\n            disabled: !hasDreamMakerRight(\n                instanceEditContext.instancePermissionSet,\n                DreamMakerRights.SetSecurityLevel\n            )\n        },\n        requireDMApiValidation: {\n            type: FieldType.Boolean as FieldType.Boolean,\n            name: \"fields.instance.deploy.validateapi\",\n            tooltip: \"fields.instance.deploy.validateapi.desc\",\n            defaultValue: deployInfo?.requireDMApiValidation,\n            disabled: !hasDreamMakerRight(\n                instanceEditContext.instancePermissionSet,\n                DreamMakerRights.SetApiValidationRequirement\n            )\n        }\n    };\n\n    return (\n        <div className=\"text-center\">\n            <DebugJsonViewer obj={{ deployInfo }} />\n            <h3>\n                <FormattedMessage id=\"view.instance.deploy.title\" />\n            </h3>\n            {!canRead ? <GenericAlert title=\"view.instance.no_metadata\" /> : null}\n            {displayErrors(errorState)}\n            {isLoading ? (\n                <Loading />\n            ) : (\n                <>\n                    <InputForm\n                        hideDisabled={!canRead}\n                        fields={fields}\n                        onSave={async _result => {\n                            let newTimeout: undefined | string = undefined;\n                            if (_result.timeout) {\n                                const days = Math.floor(_result.timeout / (24 * 60));\n                                _result.timeout -= days * (24 * 60);\n                                const hours = Math.floor(_result.timeout / 60);\n                                _result.timeout -= hours * 60;\n                                const minutes = Math.floor(_result.timeout);\n                                _result.timeout -= minutes;\n                                const seconds = Math.floor(_result.timeout * 60);\n                                if (days) {\n                                    newTimeout = `${days}.${hours}:${minutes}:${seconds}`;\n                                } else {\n                                    newTimeout = `${hours}:${minutes}:${seconds}`;\n                                }\n                            }\n\n                            const result = {\n                                ..._result,\n                                timeout: newTimeout\n                            } as DreamMakerRequest;\n\n                            setIsLoading(true);\n                            const response = await DreamMakerClient.updateDeployInfo(\n                                instanceEditContext.instance.id,\n                                result\n                            );\n                            if (response.code === StatusCode.ERROR) {\n                                addError(errorState, response.error);\n                            } else {\n                                await loadDeployInfo();\n                            }\n                            setIsLoading(false);\n                        }}\n                    />\n                    <hr />\n                    <SimpleToolTip\n                        tooltipid=\"generic.no_perm\"\n                        show={canCompile ? false : undefined}>\n                        <Button\n                            disabled={!canCompile}\n                            onClick={async () => {\n                                const response = await DreamMakerClient.startCompile(\n                                    instanceEditContext.instance.id\n                                );\n                                if (response.code === StatusCode.ERROR) {\n                                    addError(errorState, response.error);\n                                } else {\n                                    JobsController.registerJob(\n                                        response.payload,\n                                        instanceEditContext.instance.id\n                                    );\n                                    JobsController.fastmode = 5;\n                                }\n                            }}>\n                            <FormattedMessage id=\"view.instance.deploy.deploy\" />\n                        </Button>\n                    </SimpleToolTip>\n                </>\n            )}\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport JobsClient, { TGSJobResponse } from \"../../../../ApiClient/JobsClient\";\nimport InternalError, { ErrorCode } from \"../../../../ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"../../../../ApiClient/models/InternalComms/InternalStatus\";\nimport JobsController from \"../../../../ApiClient/util/JobsController\";\nimport { InstanceEditContext } from \"../../../../contexts/InstanceEditContext\";\nimport { RouteData } from \"../../../../utils/routes\";\nimport ErrorAlert from \"../../../utils/ErrorAlert\";\nimport JobCard from \"../../../utils/JobCard\";\nimport { DebugJsonViewer } from \"../../../utils/JsonViewer\";\nimport Loading from \"../../../utils/Loading\";\nimport PageHelper from \"../../../utils/PageHelper\";\n\nexport default function JobHistory(): JSX.Element {\n    const instanceEditContext = React.useContext(InstanceEditContext);\n\n    const [jobs, setJobs] = useState<TGSJobResponse[]>([]);\n    const [errors, setErrors] = useState<Array<InternalError<ErrorCode> | undefined>>([]);\n    const [loading, setLoading] = useState(true);\n    const [page, setPage] = useState(\n        RouteData.jobhistorypage.get(instanceEditContext.instance.id) ?? 1\n    );\n    const [maxPage, setMaxPage] = useState<number | undefined>(undefined);\n\n    //const [];\n\n    useEffect(() => {\n        async function loadJobs() {\n            const response = await JobsClient.listJobs(instanceEditContext.instance.id, {\n                page: page\n            });\n            if (response.code === StatusCode.OK) {\n                if (page > response.payload.totalPages && response.payload.totalPages !== 0)\n                    setPage(1);\n                setJobs(response.payload.content);\n                setMaxPage(response.payload.totalPages);\n            } else {\n                addError(response.error);\n            }\n            setLoading(false);\n        }\n\n        RouteData.jobhistorypage.set(instanceEditContext.instance.id, page);\n        setLoading(true);\n        void loadJobs();\n    }, [page, instanceEditContext.instance.id]);\n\n    useEffect(() => {}, [errors]);\n\n    function addError(error: InternalError<ErrorCode>): void {\n        setErrors(prevState => {\n            const errors = Array.from(prevState);\n            errors.push(error);\n            return errors;\n        });\n    }\n\n    async function onCancel(job: TGSJobResponse) {\n        const status = await JobsClient.deleteJob(job.instanceid, job.id);\n\n        if (status.code === StatusCode.OK) {\n            JobsController.fastmode = 5;\n        } else {\n            addError(status.error);\n        }\n    }\n\n    if (loading) {\n        return <Loading text=\"loading.instance.jobs.list\" />;\n    }\n\n    return (\n        <div>\n            <DebugJsonViewer obj={jobs} />\n            {errors.map((err, index) => {\n                if (!err) return;\n                return (\n                    <ErrorAlert\n                        key={index}\n                        error={err}\n                        onClose={() =>\n                            setErrors(prev => {\n                                const newarr = Array.from(prev);\n                                newarr[index] = undefined;\n                                return newarr;\n                            })\n                        }\n                    />\n                );\n            })}\n            {jobs\n                .sort((a, b) => b.id - a.id)\n                .filter(job => !!job.stoppedAt)\n                .map(job => (\n                    <JobCard job={job} key={job.id} onCancel={onCancel} />\n                ))}\n            <PageHelper\n                selectPage={newPage => setPage(newPage)}\n                totalPages={maxPage ?? 1}\n                currentPage={page}\n            />\n        </div>\n    );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Button from \"react-bootstrap/Button\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport DreamDaemonClient from \"../../../../ApiClient/DreamDaemonClient\";\nimport {\n    DreamDaemonResponse,\n    DreamDaemonRights,\n    DreamDaemonSecurity,\n    DreamDaemonVisibility,\n    WatchdogStatus\n} from \"../../../../ApiClient/generatedcode/generated\";\nimport InternalError, { ErrorCode } from \"../../../../ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"../../../../ApiClient/models/InternalComms/InternalStatus\";\nimport JobsController from \"../../../../ApiClient/util/JobsController\";\nimport { InstanceEditContext } from \"../../../../contexts/InstanceEditContext\";\nimport { hasDreamDaemonRight } from \"../../../../utils/misc\";\nimport { addError, displayErrors } from \"../../../utils/ErrorAlert\";\nimport GenericAlert from \"../../../utils/GenericAlert\";\nimport InputField, { FieldType } from \"../../../utils/InputField\";\nimport InputForm from \"../../../utils/InputForm\";\nimport { DebugJsonViewer } from \"../../../utils/JsonViewer\";\nimport Loading from \"../../../utils/Loading\";\nimport WIPNotice from \"../../../utils/WIPNotice\";\n\nenum GracefulAction {\n    None,\n    Stop,\n    Restart\n}\n\nexport default function Server(): JSX.Element {\n    const instanceEditContext = useContext(InstanceEditContext);\n    const [watchdogSettings, setWatchdogSettings] = useState<DreamDaemonResponse>();\n    const [loading, setLoading] = useState(false);\n    const errorState = useState<Array<InternalError<ErrorCode> | undefined>>([]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(() => void loadWatchdogSettings(), [instanceEditContext.instance.id]);\n\n    async function loadWatchdogSettings(): Promise<void> {\n        if (\n            !hasDreamDaemonRight(\n                instanceEditContext.instancePermissionSet,\n                DreamDaemonRights.ReadMetadata\n            )\n        ) {\n            return setWatchdogSettings({});\n        }\n\n        const response = await DreamDaemonClient.getWatchdogStatus(instanceEditContext.instance.id);\n        if (response.code === StatusCode.ERROR) {\n            addError(errorState, response.error);\n        } else {\n            setWatchdogSettings(response.payload);\n        }\n    }\n    async function saveWatchdogSettings(newSettings: DreamDaemonResponse): Promise<void> {\n        setLoading(true);\n        const response = await DreamDaemonClient.updateWatchdogStatus(\n            instanceEditContext.instance.id,\n            newSettings\n        );\n        if (response.code === StatusCode.ERROR) {\n            addError(errorState, response.error);\n        }\n        await loadWatchdogSettings();\n        setLoading(false);\n    }\n\n    async function startWatchdog(): Promise<void> {\n        setLoading(true);\n        const response = await DreamDaemonClient.startWatchdog(instanceEditContext.instance.id);\n        if (response.code === StatusCode.ERROR) {\n            addError(errorState, response.error);\n        } else {\n            JobsController.registerCallback(response.payload.id, () => void loadWatchdogSettings());\n            JobsController.fastmode = 5;\n            await loadWatchdogSettings();\n        }\n        setLoading(false);\n    }\n\n    async function stopWatchdog(): Promise<void> {\n        setLoading(true);\n        const response = await DreamDaemonClient.stopWatchdog(instanceEditContext.instance.id);\n        if (response.code === StatusCode.ERROR) {\n            addError(errorState, response.error);\n        } else {\n            await loadWatchdogSettings();\n        }\n        setLoading(false);\n    }\n\n    async function restartWatchdog(): Promise<void> {\n        setLoading(true);\n        const response = await DreamDaemonClient.restartWatchdog(instanceEditContext.instance.id);\n        if (response.code === StatusCode.ERROR) {\n            addError(errorState, response.error);\n        } else {\n            JobsController.registerCallback(response.payload.id, () => void loadWatchdogSettings());\n            JobsController.fastmode = 5;\n            await loadWatchdogSettings();\n        }\n        setLoading(false);\n    }\n\n    async function dumpWatchdog(): Promise<void> {\n        setLoading(true);\n        const response = await DreamDaemonClient.dumpWatchdog(instanceEditContext.instance.id);\n        if (response.code === StatusCode.ERROR) {\n            addError(errorState, response.error);\n        } else {\n            JobsController.fastmode = 5;\n        }\n        setLoading(false);\n    }\n\n    if (!watchdogSettings) {\n        return <>{displayErrors(errorState)}</>;\n    }\n\n    if (loading) {\n        return <Loading />;\n    }\n\n    const fields = {\n        autoStart: {\n            type: FieldType.Boolean as FieldType.Boolean,\n            name: \"fields.instance.watchdog.autostart\",\n            defaultValue: watchdogSettings.autoStart,\n            disabled: !hasDreamDaemonRight(\n                instanceEditContext.instancePermissionSet,\n                DreamDaemonRights.SetAutoStart\n            )\n        },\n        port: {\n            type: FieldType.Number as FieldType.Number,\n            name: \"fields.instance.watchdog.port\",\n            defaultValue: watchdogSettings.port,\n            min: 0,\n            max: 65535,\n            disabled: !hasDreamDaemonRight(\n                instanceEditContext.instancePermissionSet,\n                DreamDaemonRights.SetPort\n            )\n        },\n        visibility: {\n            type: FieldType.Enum as FieldType.Enum,\n            name: \"fields.instance.watchdog.visibility\",\n            defaultValue: watchdogSettings.visibility,\n            enum: DreamDaemonVisibility,\n            disabled: !hasDreamDaemonRight(\n                instanceEditContext.instancePermissionSet,\n                DreamDaemonRights.SetVisibility\n            )\n        },\n        securityLevel: {\n            type: FieldType.Enum as FieldType.Enum,\n            name: \"fields.instance.watchdog.securitylevel\",\n            defaultValue: watchdogSettings.securityLevel,\n            enum: DreamDaemonSecurity,\n            disabled: !hasDreamDaemonRight(\n                instanceEditContext.instancePermissionSet,\n                DreamDaemonRights.SetSecurity\n            )\n        },\n        startupTimeout: {\n            type: FieldType.Number as FieldType.Number,\n            name: \"fields.instance.watchdog.timeout.startup\",\n            defaultValue: watchdogSettings.startupTimeout,\n            min: 0,\n            disabled: !hasDreamDaemonRight(\n                instanceEditContext.instancePermissionSet,\n                DreamDaemonRights.SetStartupTimeout\n            )\n        },\n        topicRequestTimeout: {\n            type: FieldType.Number as FieldType.Number,\n            name: \"fields.instance.watchdog.timeout.topic\",\n            defaultValue: watchdogSettings.topicRequestTimeout,\n            min: 0,\n            disabled: !hasDreamDaemonRight(\n                instanceEditContext.instancePermissionSet,\n                DreamDaemonRights.SetTopicTimeout\n            )\n        },\n        heartbeatSeconds: {\n            type: FieldType.Number as FieldType.Number,\n            name: \"fields.instance.watchdog.heartbeat\",\n            defaultValue: watchdogSettings.heartbeatSeconds,\n            min: 0,\n            disabled: !hasDreamDaemonRight(\n                instanceEditContext.instancePermissionSet,\n                DreamDaemonRights.SetHeartbeatInterval\n            )\n        },\n        allowWebClient: {\n            type: FieldType.Boolean as FieldType.Boolean,\n            name: \"fields.instance.watchdog.allowwebclient\",\n            defaultValue: watchdogSettings.allowWebClient,\n            disabled: !hasDreamDaemonRight(\n                instanceEditContext.instancePermissionSet,\n                DreamDaemonRights.SetWebClient\n            )\n        },\n        additionalParameters: {\n            type: FieldType.String as FieldType.String,\n            name: \"fields.instance.watchdog.additionalparams\",\n            defaultValue: watchdogSettings.additionalParameters,\n            disabled: !hasDreamDaemonRight(\n                instanceEditContext.instancePermissionSet,\n                DreamDaemonRights.SetAdditionalParameters\n            )\n        }\n    };\n\n    const anyEditableField = Object.values(fields).some(field => !field.disabled);\n\n    const no_perm_tooltip = (\n        <Tooltip id=\"generic.no_perm\">\n            <FormattedMessage id=\"generic.no_perm\" />\n        </Tooltip>\n    );\n\n    const canStart = hasDreamDaemonRight(\n        instanceEditContext.instancePermissionSet,\n        DreamDaemonRights.Start\n    );\n    const canStop = hasDreamDaemonRight(\n        instanceEditContext.instancePermissionSet,\n        DreamDaemonRights.Shutdown\n    );\n    const canRestart = hasDreamDaemonRight(\n        instanceEditContext.instancePermissionSet,\n        DreamDaemonRights.Restart\n    );\n    const canDump = hasDreamDaemonRight(\n        instanceEditContext.instancePermissionSet,\n        DreamDaemonRights.CreateDump\n    );\n    const canMetadata = hasDreamDaemonRight(\n        instanceEditContext.instancePermissionSet,\n        DreamDaemonRights.ReadMetadata\n    );\n    const canGracefulAny =\n        hasDreamDaemonRight(\n            instanceEditContext.instancePermissionSet,\n            DreamDaemonRights.SoftShutdown\n        ) ||\n        hasDreamDaemonRight(\n            instanceEditContext.instancePermissionSet,\n            DreamDaemonRights.SoftRestart\n        );\n    const canActionAny = canStart || canStop || canRestart || canDump;\n\n    return (\n        <div>\n            <DebugJsonViewer obj={watchdogSettings} />\n            {displayErrors(errorState)}\n            <h2 className=\"text-center\">\n                <FormattedMessage id=\"view.instance.server.status\" />\n                <Badge\n                    pill\n                    variant={\n                        watchdogSettings.status === WatchdogStatus.Online\n                            ? \"success\"\n                            : watchdogSettings.status === WatchdogStatus.Offline\n                            ? \"danger\"\n                            : \"warning\"\n                    }>\n                    <FormattedMessage\n                        id={`view.instance.server.status.${\n                            WatchdogStatus[watchdogSettings.status!]\n                        }`}\n                    />\n                </Badge>\n            </h2>\n            <hr />\n            <h3 className=\"text-center\">\n                <FormattedMessage id=\"view.instance.server.settings\" />\n            </h3>\n            {!canMetadata ? (\n                anyEditableField ? (\n                    <GenericAlert title=\"view.instance.no_metadata\" />\n                ) : (\n                    <GenericAlert title=\"view.instance.server.no_metadata_and_no_settings\" />\n                )\n            ) : null}\n            <InputForm fields={fields} onSave={saveWatchdogSettings} hideDisabled={!canMetadata} />\n            <hr />\n            <h3 className=\"text-center\">\n                <FormattedMessage id=\"view.instance.server.actions\" />\n            </h3>\n            {canActionAny ? (\n                <>\n                    {!canMetadata ? (\n                        <GenericAlert title=\"view.instance.server.no_metadata_actions\" />\n                    ) : null}\n                    <div className=\"text-center mb-3\">\n                        <OverlayTrigger\n                            overlay={no_perm_tooltip}\n                            show={canStart ? false : undefined}>\n                            <Button\n                                variant=\"success\"\n                                className=\"mx-2\"\n                                onClick={startWatchdog}\n                                disabled={\n                                    (canMetadata &&\n                                        watchdogSettings.status != WatchdogStatus.Offline) ||\n                                    !canStart\n                                }>\n                                <FormattedMessage id=\"view.instance.server.start\" />\n                            </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                            overlay={no_perm_tooltip}\n                            show={canStop ? false : undefined}>\n                            <Button\n                                variant=\"danger\"\n                                className=\"mx-2\"\n                                onClick={stopWatchdog}\n                                disabled={\n                                    (canMetadata &&\n                                        watchdogSettings.status != WatchdogStatus.Online) ||\n                                    !canStop\n                                }>\n                                <FormattedMessage id=\"view.instance.server.stop\" />\n                            </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                            overlay={no_perm_tooltip}\n                            show={canRestart ? false : undefined}>\n                            <Button\n                                variant=\"warning\"\n                                className=\"mx-2\"\n                                onClick={restartWatchdog}\n                                disabled={\n                                    (canMetadata &&\n                                        watchdogSettings.status != WatchdogStatus.Online) ||\n                                    !canRestart\n                                }>\n                                <FormattedMessage id=\"view.instance.server.restart\" />\n                            </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                            overlay={no_perm_tooltip}\n                            show={canDump ? false : undefined}>\n                            <Button\n                                variant=\"info\"\n                                className=\"mx-2\"\n                                onClick={dumpWatchdog}\n                                disabled={\n                                    (canMetadata &&\n                                        watchdogSettings.status != WatchdogStatus.Online) ||\n                                    !canDump\n                                }>\n                                <FormattedMessage id=\"view.instance.server.dump\" />\n                            </Button>\n                        </OverlayTrigger>\n                    </div>\n                </>\n            ) : (\n                <GenericAlert title=\"view.instance.server.no_actions\" />\n            )}\n            {!canMetadata && canGracefulAny ? (\n                <GenericAlert title=\"view.instance.server.no_metadata_graceful\" />\n            ) : null}\n\n            {canMetadata || canGracefulAny ? (\n                <div className=\"w-75 mx-auto\">\n                    <InputField\n                        name=\"view.instance.graceful\"\n                        type={FieldType.Enum}\n                        enum={GracefulAction}\n                        tooltip=\"view.instance.graceful.desc\"\n                        defaultValue={\n                            watchdogSettings.softRestart\n                                ? GracefulAction.Restart\n                                : watchdogSettings.softShutdown\n                                ? GracefulAction.Stop\n                                : GracefulAction.None\n                        }\n                        disabled={!canGracefulAny}\n                        onChange={_result => {\n                            const result = _result as GracefulAction;\n\n                            switch (result) {\n                                case GracefulAction.None:\n                                    if (\n                                        !watchdogSettings?.softRestart &&\n                                        !watchdogSettings?.softShutdown\n                                    )\n                                        return;\n                                    void saveWatchdogSettings({\n                                        softShutdown: watchdogSettings.softShutdown\n                                            ? false\n                                            : undefined,\n                                        softRestart: watchdogSettings.softRestart\n                                            ? false\n                                            : undefined\n                                    });\n                                    break;\n                                case GracefulAction.Stop:\n                                    if (watchdogSettings?.softShutdown) return;\n                                    void saveWatchdogSettings({\n                                        softShutdown: true\n                                    });\n                                    break;\n                                case GracefulAction.Restart:\n                                    if (watchdogSettings?.softRestart) return;\n                                    void saveWatchdogSettings({\n                                        softRestart: true\n                                    });\n                                    break;\n                            }\n                        }}\n                    />\n                </div>\n            ) : canActionAny ? (\n                <GenericAlert title=\"view.instance.server.no_graceful\" />\n            ) : null}\n            <hr />\n            <h3 className=\"text-center\">\n                <FormattedMessage id=\"view.instance.server.deployment_info\" />\n            </h3>\n            <WIPNotice />\n        </div>\n    );\n}\n","import { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { ComponentType } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Tab from \"react-bootstrap/Tab\";\nimport { FormattedMessage } from \"react-intl\";\nimport { RouteComponentProps, withRouter } from \"react-router\";\n\nimport {\n    ByondRights,\n    DreamDaemonRights,\n    DreamMakerRights,\n    InstancePermissionSetResponse,\n    RepositoryRights\n} from \"../../../ApiClient/generatedcode/generated\";\nimport InstanceClient from \"../../../ApiClient/InstanceClient\";\nimport InstancePermissionSetClient from \"../../../ApiClient/InstancePermissionSetClient\";\nimport InternalError from \"../../../ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"../../../ApiClient/models/InternalComms/InternalStatus\";\nimport configOptions, { InstanceEditSidebar } from \"../../../ApiClient/util/config\";\nimport { GeneralContext } from \"../../../contexts/GeneralContext\";\nimport {\n    InstanceEditContext,\n    UnsafeInstanceEditContext\n} from \"../../../contexts/InstanceEditContext\";\nimport { AppRoutes, RouteData } from \"../../../utils/routes\";\nimport AccessDenied from \"../../utils/AccessDenied\";\nimport Loading from \"../../utils/Loading\";\nimport WIPNotice from \"../../utils/WIPNotice\";\nimport Byond from \"./Edit/Byond\";\nimport InstanceSettings from \"./Edit/Config\";\nimport { Deployment } from \"./Edit/Deployment\";\nimport JobHistory from \"./Edit/JobHistory\";\nimport Repository from \"./Edit/Repository\";\nimport Server from \"./Edit/Server\";\n\ntype IProps = RouteComponentProps<{ id: string; tab?: string }>;\ntype IState = Omit<UnsafeInstanceEditContext, \"user\" | \"serverInfo\"> & {\n    tab: string;\n    instanceid: number;\n};\n\nconst minimumByondPerms =\n    ByondRights.ReadActive |\n    ByondRights.ListInstalled |\n    ByondRights.InstallOfficialOrChangeActiveVersion |\n    ByondRights.InstallCustomVersion;\n\nconst minimumServerPerms =\n    DreamDaemonRights.SetPort |\n    DreamDaemonRights.SetAutoStart |\n    DreamDaemonRights.SetSecurity |\n    DreamDaemonRights.ReadMetadata |\n    DreamDaemonRights.SetWebClient |\n    DreamDaemonRights.SoftRestart |\n    DreamDaemonRights.SoftShutdown |\n    DreamDaemonRights.Restart |\n    DreamDaemonRights.Shutdown |\n    DreamDaemonRights.Start |\n    DreamDaemonRights.SetStartupTimeout |\n    DreamDaemonRights.SetHeartbeatInterval |\n    DreamDaemonRights.CreateDump |\n    DreamDaemonRights.SetTopicTimeout |\n    DreamDaemonRights.SetAdditionalParameters |\n    DreamDaemonRights.SetVisibility;\n\nconst minimumRepoPerms =\n    RepositoryRights.SetOrigin |\n    RepositoryRights.SetSha |\n    RepositoryRights.MergePullRequest |\n    RepositoryRights.UpdateBranch |\n    RepositoryRights.ChangeCommitter |\n    RepositoryRights.ChangeTestMergeCommits |\n    RepositoryRights.ChangeCredentials |\n    RepositoryRights.SetReference |\n    RepositoryRights.Read |\n    RepositoryRights.ChangeAutoUpdateSettings |\n    RepositoryRights.Delete |\n    RepositoryRights.ChangeSubmoduleUpdate;\n\nconst minimumDeployPerms =\n    DreamMakerRights.Read |\n    DreamMakerRights.Compile |\n    DreamMakerRights.SetApiValidationPort |\n    DreamMakerRights.SetDme |\n    DreamMakerRights.SetApiValidationRequirement |\n    DreamMakerRights.SetTimeout |\n    DreamMakerRights.SetSecurityLevel;\n\nclass InstanceEdit extends React.Component<IProps, IState> {\n    public declare context: GeneralContext;\n    public static tabs: [\n        string,\n        IconProp,\n        (\n            instancePermissionSet: InstancePermissionSetResponse,\n            generalContext: GeneralContext\n        ) => boolean,\n        ComponentType?\n    ][] = [\n        [\"info\", \"info\", () => true],\n        [\n            \"repository\",\n            \"code-branch\",\n            instancePermissionSet => !!(instancePermissionSet.repositoryRights & minimumRepoPerms),\n            Repository\n        ],\n        [\n            \"deployment\",\n            \"hammer\",\n            instancePermissionSet =>\n                !!(instancePermissionSet.dreamMakerRights & minimumDeployPerms),\n            Deployment\n        ],\n        [\n            \"dd\",\n            \"server\",\n            instancePermissionSet =>\n                !!(instancePermissionSet.dreamDaemonRights & minimumServerPerms),\n            Server\n        ],\n        [\n            \"byond\",\n            \"list-ul\",\n            instancePermissionSet => !!(instancePermissionSet.byondRights & minimumByondPerms),\n            Byond\n        ],\n        [\"chatbots\", \"comments\", () => true],\n        [\"files\", \"folder-open\", () => true],\n        [\"users\", \"users\", () => true],\n        [\"jobs\", \"stream\", () => true, JobHistory],\n        [\"config\", \"cogs\", () => true, InstanceSettings]\n    ];\n\n    public constructor(props: IProps) {\n        super(props);\n\n        this.reloadInstance = this.reloadInstance.bind(this);\n        this.deleteContextError = this.deleteContextError.bind(this);\n\n        RouteData.selectedinstanceid = parseInt(this.props.match.params.id);\n\n        this.state = {\n            tab: props.match.params.tab ?? InstanceEdit.tabs[0][0],\n            errors: new Set(),\n            instance: null,\n            instancePermissionSet: null,\n            reloadInstance: this.reloadInstance,\n            deleteError: this.deleteContextError,\n            instanceid: parseInt(this.props.match.params.id)\n        };\n    }\n    public deleteContextError(error: InternalError): void {\n        this.setState(prev => {\n            const newSet = new Set(prev.errors);\n            newSet.delete(error);\n            return {\n                errors: newSet\n            };\n        });\n    }\n\n    public async componentDidMount(): Promise<void> {\n        await this.reloadInstance();\n    }\n\n    public componentDidUpdate(prevProps: Readonly<IProps>) {\n        if (\n            this.props.match.params.tab &&\n            prevProps.match.params.tab != this.props.match.params.tab\n        ) {\n            this.setState({\n                tab: this.props.match.params.tab\n            });\n        }\n    }\n\n    public async reloadInstance(): Promise<void> {\n        this.setState({\n            instance: null,\n            instancePermissionSet: null\n        });\n        const response = await InstanceClient.getInstance(this.state.instanceid);\n        if (response.code === StatusCode.OK) {\n            this.setState({\n                instance: response.payload\n            });\n\n            const response2 = await InstancePermissionSetClient.getCurrentInstancePermissionSet(\n                this.state.instanceid\n            );\n            if (response2.code === StatusCode.OK) {\n                this.setState({\n                    instancePermissionSet: response2.payload\n                });\n            } else {\n                this.setState(prev => {\n                    const newSet = new Set(prev.errors);\n                    newSet.add(response2.error);\n                    return {\n                        instancePermissionSet: null,\n                        errors: newSet\n                    };\n                });\n            }\n        } else {\n            this.setState(prev => {\n                const newSet = new Set(prev.errors);\n                newSet.add(response.error);\n                return {\n                    instance: null,\n                    errors: newSet\n                };\n            });\n        }\n    }\n\n    public render(): React.ReactNode {\n        if (!this.state.instance || !this.state.instancePermissionSet) {\n            return <Loading text=\"loading.instance\" />;\n        }\n\n        const nav = () => {\n            return (\n                <Nav\n                    defaultActiveKey={this.state.tab}\n                    onSelect={eventKey => {\n                        eventKey = eventKey ?? InstanceEdit.tabs[0][0];\n                        RouteData.selectedinstanceedittab = eventKey;\n                        this.props.history.push(\n                            AppRoutes.instanceedit.link ?? AppRoutes.instanceedit.route\n                        );\n                        this.setState({ tab: eventKey ?? InstanceEdit.tabs[0][0] });\n                    }}\n                    fill\n                    variant=\"pills\"\n                    activeKey={this.state.tab}\n                    className={\n                        \"flex-nowrap text-nowrap flex-column hover-bar sticky-top \" +\n                        (configOptions.instanceeditsidebar.value === InstanceEditSidebar.COLLAPSE\n                            ? \"pin-close\"\n                            : configOptions.instanceeditsidebar.value === InstanceEditSidebar.EXPAND\n                            ? \"pin-open\"\n                            : \"\")\n                    }\n                    style={{ top: \"8em\" }}>\n                    {InstanceEdit.tabs.map(([tabKey, icon, accessCb, component]) => {\n                        if (!this.state.instancePermissionSet) {\n                            throw Error(\n                                \"this.state.instancePermissionSet is null in instanceedit nav map\"\n                            );\n                        }\n                        const wip = !component;\n                        const accessDenied = !accessCb(\n                            this.state.instancePermissionSet,\n                            this.context\n                        );\n\n                        return (\n                            <Nav.Item key={tabKey}>\n                                <Nav.Link\n                                    eventKey={tabKey}\n                                    bsPrefix=\"nav-link instanceedittab\"\n                                    className={\n                                        (wip ? \"no-access text-white\" : \"\") +\n                                        (accessDenied ? \"no-access text-white font-italic\" : \"\") +\n                                        \" text-left\"\n                                    }>\n                                    <React.Fragment>\n                                        <FontAwesomeIcon\n                                            icon={accessDenied ? \"lock\" : icon}\n                                            fixedWidth\n                                        />\n                                        <div\n                                            className={\n                                                \"tab-text d-inline-block \" +\n                                                (accessDenied ? \"font-weight-lighter\" : \"\")\n                                            }>\n                                            <span className=\"pl-1\">\n                                                <FormattedMessage\n                                                    id={`view.instanceedit.tabs.${tabKey}`}\n                                                />\n                                            </span>\n                                        </div>\n                                    </React.Fragment>\n                                </Nav.Link>\n                            </Nav.Item>\n                        );\n                    })}\n                </Nav>\n            );\n        };\n\n        return (\n            <InstanceEditContext.Provider\n                value={\n                    Object.assign(\n                        { user: this.context.user, serverInfo: this.context.serverInfo },\n                        this.state\n                    ) as InstanceEditContext\n                }>\n                <Card>\n                    <Card.Header className=\"text-center mb-2 sticky-top\">\n                        <h3>\n                            <FormattedMessage\n                                id=\"view.instanceedit.title\"\n                                values={{\n                                    instanceid: this.props.match.params.id,\n                                    instancename: this.state.instance.name\n                                }}\n                            />\n                        </h3>\n                        <h5 className=\"text-white-50\">\n                            <FormattedMessage id={`view.instanceedit.tabs.${this.state.tab}`} />\n                        </h5>\n                    </Card.Header>\n                    <Tab.Container\n                        mountOnEnter\n                        unmountOnExit\n                        id=\"instanceedit\"\n                        activeKey={this.state.tab}>\n                        <div className=\"d-flex flex-row\">\n                            <Card.Body className=\"flex-grow-0\">{nav()}</Card.Body>\n                            <Card.Body className=\"bg-body\">\n                                <Tab.Content>\n                                    {InstanceEdit.tabs.map(([tabKey, , accessCb, Comp]) => {\n                                        if (!this.state.instancePermissionSet) {\n                                            throw Error(\n                                                \"this.state.instancePermissionSet is null in render card map\"\n                                            );\n                                        }\n                                        return (\n                                            <Tab.Pane eventKey={tabKey} key={tabKey}>\n                                                {Comp ? (\n                                                    !accessCb(\n                                                        this.state.instancePermissionSet,\n                                                        this.context\n                                                    ) ? (\n                                                        <AccessDenied />\n                                                    ) : (\n                                                        <Comp />\n                                                    )\n                                                ) : (\n                                                    <WIPNotice />\n                                                )}\n                                            </Tab.Pane>\n                                        );\n                                    })}\n                                </Tab.Content>\n                            </Card.Body>\n                        </div>\n                    </Tab.Container>\n                </Card>\n            </InstanceEditContext.Provider>\n        );\n    }\n}\nInstanceEdit.contextType = GeneralContext;\nexport default withRouter(InstanceEdit);\n","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"as\", \"className\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"activeKey\", \"getControlledId\", \"getControllerId\"],\n    _excluded2 = [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, _excluded);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, _excluded2);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;"],"names":["WIPNotice","React","render","className","border","id","href","as","VERSION","MODE","window","location","toString","InstanceSettings","constructor","props","super","this","editInstance","bind","state","errors","addError","error","setState","prevState","Array","from","push","instance","response","InstanceClient","context","code","StatusCode","reloadInstance","checkIMFlag","flag","hasInstanceManagerRight","resolvePermissionSet","user","fields","name","type","FieldType","defaultValue","disabled","InstanceManagerRights","path","chatBotLimit","min","autoUpdateInterval","configurationType","enum","ConfigurationType","obj","map","err","index","key","onClose","prev","newarr","undefined","onSave","contextType","InstanceEditContext","withRouter","Deployment","instanceEditContext","useContext","errorState","useState","isLoading","setIsLoading","deployInfo","setDeployInfo","canRead","hasDreamMakerRight","instancePermissionSet","DreamMakerRights","canCompile","async","loadDeployInfo","DreamMakerClient","payload","timeout","useEffect","parsedTimeMatch","exec","parsedTime","groups","parseInt","days","hours","minutes","seconds","projectName","tooltip","apiValidationPort","max","apiValidationSecurityLevel","DreamDaemonSecurity","requireDMApiValidation","title","displayErrors","hideDisabled","newTimeout","_result","Math","floor","result","tooltipid","show","onClick","JobsController","JobHistory","jobs","setJobs","setErrors","loading","setLoading","page","setPage","RouteData","maxPage","setMaxPage","onCancel","job","status","JobsClient","instanceid","totalPages","content","loadJobs","text","sort","a","b","filter","stoppedAt","selectPage","newPage","currentPage","GracefulAction","Server","watchdogSettings","setWatchdogSettings","loadWatchdogSettings","hasDreamDaemonRight","DreamDaemonRights","DreamDaemonClient","saveWatchdogSettings","newSettings","autoStart","port","visibility","DreamDaemonVisibility","securityLevel","startupTimeout","topicRequestTimeout","heartbeatSeconds","allowWebClient","additionalParameters","anyEditableField","Object","values","some","field","no_perm_tooltip","canStart","canStop","canRestart","canDump","canMetadata","canGracefulAny","canActionAny","pill","variant","WatchdogStatus","overlay","softRestart","Restart","softShutdown","Stop","None","onChange","minimumByondPerms","ByondRights","minimumServerPerms","minimumRepoPerms","RepositoryRights","minimumDeployPerms","InstanceEdit","deleteContextError","match","params","tab","tabs","Set","deleteError","newSet","delete","componentDidUpdate","prevProps","response2","InstancePermissionSetClient","add","value","assign","serverInfo","instancename","mountOnEnter","unmountOnExit","activeKey","defaultActiveKey","onSelect","eventKey","history","AppRoutes","fill","configOptions","InstanceEditSidebar","style","top","tabKey","icon","accessCb","component","Error","wip","accessDenied","bsPrefix","fixedWidth","nav","Comp","repositoryRights","Repository","dreamMakerRights","dreamDaemonRights","byondRights","Byond","GeneralContext","Tab","_React$Component","apply","arguments","prototype","Container","Content","Pane","_useUncontrolled","generateCustomChildId","generateChildId","transition","children","useMemo","tabContext","getControlledId","getControllerId","_excluded","TabContent","_ref","ref","_ref$as","Component","decoratedBsPrefix","_excluded2","TabPane","_useTabContext","rest","shouldTransition","active","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","prefix","pane","role","in","displayName"],"sourceRoot":""}