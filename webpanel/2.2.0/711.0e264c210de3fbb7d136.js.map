{"version":3,"sources":["webpack://tgstation-server-control-panel/./src/components/utils/WIPNotice.tsx","webpack://tgstation-server-control-panel/./src/components/views/Instance/InstanceEdit.tsx","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Tab.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabContainer.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabContent.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabPane.js"],"names":["WIPNotice","className","border","id","href","as","VERSION","MODE","window","location","toString","React","InstanceEdit","props","reloadInstance","bind","deleteContextError","RouteData","parseInt","match","params","state","tab","tabs","errors","Set","instance","instancePermissionSet","deleteError","instanceid","error","this","setState","prev","newSet","delete","response","InstanceClient","code","StatusCode","payload","response2","InstancePermissionSetClient","add","text","nav","vertical","active","find","value","onSelect","eventKey","history","push","AppRoutes","variant","icon","popperConfig","modifiers","name","enabled","phase","fn","placement","reset","map","undefined","key","defaultActiveKey","fill","activeKey","tabKey","component","bsPrefix","Object","assign","user","context","serverInfo","values","instancename","mountOnEnter","unmountOnExit","Comp","Byond","InstanceSettings","contextType","GeneralContext","withRouter","Tab","_React$Component","apply","arguments","prototype","render","Error","Container","Content","Pane","_useUncontrolled","generateCustomChildId","generateChildId","transition","children","useMemo","type","tabContext","getControlledId","getControllerId","TabContent","_ref","ref","_ref$as","Component","decoratedBsPrefix","TabPane","_useTabContext","useContext","rest","shouldTransition","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","prefix","pane","role","in","displayName"],"mappings":"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","file":"711.0e264c210de3fbb7d136.js","sourcesContent":["import React, { ReactNode } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { MODE, VERSION } from \"../../definitions/constants\";\n\nexport default class WIPNotice extends React.Component {\n    public render(): ReactNode {\n        return (\n            <Card className=\"bg-transparent\" border=\"info\">\n                <Card.Header className=\"bg-info text-dark font-weight-bold\">\n                    <FormattedMessage id=\"generic.wip\" />\n                </Card.Header>\n                <Card.Body>\n                    <Card.Title>\n                        <FormattedMessage id=\"generic.wip.desc\" />\n                        <a href=\"https://github.com/tgstation/Tgstation.Server.ControlPanel/releases/latest\">\n                            https://github.com/tgstation/Tgstation.Server.ControlPanel/releases/latest\n                        </a>\n                    </Card.Title>\n                    <Card.Text as={\"pre\"} className=\"bg-transparent text-info\">\n                        <code>\n                            {`Version: ${VERSION}\\nWebpanel Mode: ${MODE}\\nCurrent route: ${window.location.toString()}`}\n                        </code>\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n","import { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Modifier } from \"@popperjs/core\";\nimport React, { ComponentType } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Tab from \"react-bootstrap/Tab\";\nimport { FormattedMessage } from \"react-intl\";\nimport { RouteComponentProps, withRouter } from \"react-router\";\n\nimport InstanceClient from \"../../../ApiClient/InstanceClient\";\nimport InstancePermissionSetClient from \"../../../ApiClient/InstancePermissionSetClient\";\nimport InternalError from \"../../../ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"../../../ApiClient/models/InternalComms/InternalStatus\";\nimport { GeneralContext } from \"../../../contexts/GeneralContext\";\nimport {\n    InstanceEditContext,\n    UnsafeInstanceEditContext\n} from \"../../../contexts/InstanceEditContext\";\nimport { AppRoutes, RouteData } from \"../../../utils/routes\";\nimport Loading from \"../../utils/Loading\";\nimport WIPNotice from \"../../utils/WIPNotice\";\nimport Byond from \"./Edit/Byond\";\nimport InstanceSettings from \"./Edit/Config\";\n\ntype IProps = RouteComponentProps<{ id: string; tab?: string }>;\ntype IState = Omit<UnsafeInstanceEditContext, \"user\" | \"serverInfo\"> & {\n    tab: string;\n    instanceid: number;\n};\n\nclass InstanceEdit extends React.Component<IProps, IState> {\n    public declare context: GeneralContext;\n    public static tabs: [string, IconProp, ComponentType?][] = [\n        [\"info\", \"info\"],\n        [\"repository\", \"code-branch\"],\n        [\"deployment\", \"hammer\"],\n        [\"dd\", \"server\"],\n        [\"byond\", \"list-ul\", Byond],\n        [\"chatbots\", \"comments\"],\n        [\"files\", \"folder-open\"],\n        [\"users\", \"users\"],\n        [\"config\", \"cogs\", InstanceSettings]\n    ];\n\n    public constructor(props: IProps) {\n        super(props);\n\n        this.reloadInstance = this.reloadInstance.bind(this);\n        this.deleteContextError = this.deleteContextError.bind(this);\n\n        RouteData.selectedinstanceid = parseInt(this.props.match.params.id);\n\n        this.state = {\n            tab: props.match.params.tab ?? InstanceEdit.tabs[0][0],\n            errors: new Set(),\n            instance: null,\n            instancePermissionSet: null,\n            reloadInstance: this.reloadInstance,\n            deleteError: this.deleteContextError,\n            instanceid: parseInt(this.props.match.params.id)\n        };\n    }\n    public deleteContextError(error: InternalError): void {\n        this.setState(prev => {\n            const newSet = new Set(prev.errors);\n            newSet.delete(error);\n            return {\n                errors: newSet\n            };\n        });\n    }\n\n    public async componentDidMount(): Promise<void> {\n        await this.reloadInstance();\n    }\n\n    public async reloadInstance(): Promise<void> {\n        this.setState({\n            instance: null,\n            instancePermissionSet: null\n        });\n        const response = await InstanceClient.getInstance(this.state.instanceid);\n        if (response.code === StatusCode.OK) {\n            this.setState({\n                instance: response.payload\n            });\n\n            const response2 = await InstancePermissionSetClient.getCurrentInstancePermissionSet(\n                this.state.instanceid\n            );\n            if (response2.code === StatusCode.OK) {\n                this.setState({\n                    instancePermissionSet: response2.payload\n                });\n            } else {\n                this.setState(prev => {\n                    const newSet = new Set(prev.errors);\n                    newSet.add(response2.error);\n                    return {\n                        instancePermissionSet: null,\n                        errors: newSet\n                    };\n                });\n            }\n        } else {\n            this.setState(prev => {\n                const newSet = new Set(prev.errors);\n                newSet.add(response.error);\n                return {\n                    instance: null,\n                    errors: newSet\n                };\n            });\n        }\n    }\n\n    public render(): React.ReactNode {\n        if (!this.state.instance || !this.state.instancePermissionSet) {\n            return <Loading text=\"loading.instance\" />;\n        }\n\n        const nav = (vertical: boolean) => {\n            if (vertical) {\n                const active = InstanceEdit.tabs.find(value => value[0] === this.state.tab);\n\n                if (!active) throw \"InstanceEdit: unable to find active tab\";\n\n                // eslint-disable-next-line @typescript-eslint/ban-types\n                const bottomPlacement: Modifier<\"bottomPlacement\", {}> = {\n                    name: \"bottomPlacement\",\n                    enabled: true,\n                    phase: \"beforeMain\",\n                    fn: ({ state }) => {\n                        if (state.placement != \"bottom\") {\n                            state.placement = \"bottom\";\n                            state.reset = true;\n                        }\n                    }\n                };\n\n                return (\n                    <Dropdown\n                        onSelect={eventKey => {\n                            eventKey = eventKey ?? InstanceEdit.tabs[0][0];\n                            RouteData.selectedinstanceedittab = eventKey;\n                            this.props.history.push(\n                                AppRoutes.instanceedit.link ?? AppRoutes.instanceedit.route\n                            );\n                            this.setState({ tab: eventKey ?? InstanceEdit.tabs[0][0] });\n                        }}>\n                        <Dropdown.Toggle\n                            variant=\"secondary\"\n                            id=\"tabselect\"\n                            className=\"d-block mx-auto w-75 text-center\">\n                            <FontAwesomeIcon icon={active[1]} className=\"mr-1\" />\n                            <FormattedMessage id={`view.instanceedit.tabs.${active[0]}`} />\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu\n                            popperConfig={{ modifiers: [bottomPlacement] }}\n                            className=\"d-block mx-auto w-75 text-center\">\n                            {InstanceEdit.tabs.map(value => {\n                                if (value === active) return;\n                                if (value[2] === undefined) return;\n\n                                return (\n                                    <Dropdown.Item key={value[0]} eventKey={value[0]}>\n                                        <FontAwesomeIcon icon={value[1]} className=\"mr-1\" />\n                                        <FormattedMessage\n                                            id={`view.instanceedit.tabs.${value[0]}`}\n                                        />\n                                    </Dropdown.Item>\n                                );\n                            })}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                );\n            }\n\n            return (\n                <Nav\n                    defaultActiveKey={this.state.tab}\n                    onSelect={eventKey => {\n                        eventKey = eventKey ?? InstanceEdit.tabs[0][0];\n                        RouteData.selectedinstanceedittab = eventKey;\n                        this.props.history.push(\n                            AppRoutes.instanceedit.link ?? AppRoutes.instanceedit.route\n                        );\n                        this.setState({ tab: eventKey ?? InstanceEdit.tabs[0][0] });\n                    }}\n                    fill\n                    variant=\"pills\"\n                    activeKey={this.state.tab}\n                    className=\"flex-nowrap text-nowrap overflow-auto \">\n                    {InstanceEdit.tabs.map(([tabKey, icon, component]) => {\n                        return (\n                            <Nav.Item key={tabKey}>\n                                <Nav.Link\n                                    eventKey={tabKey}\n                                    bsPrefix=\"nav-link instanceedittab \"\n                                    className={!component ? \"wip text-white\" : \"\"}>\n                                    <React.Fragment>\n                                        <FontAwesomeIcon icon={icon} className=\"mr-1\" />\n                                        <FormattedMessage id={`view.instanceedit.tabs.${tabKey}`} />\n                                    </React.Fragment>\n                                </Nav.Link>\n                            </Nav.Item>\n                        );\n                    })}\n                </Nav>\n            );\n        };\n\n        return (\n            <InstanceEditContext.Provider\n                value={\n                    Object.assign(\n                        { user: this.context.user, serverInfo: this.context.serverInfo },\n                        this.state\n                    ) as InstanceEditContext\n                }>\n                <Card>\n                    <Card.Header className=\"text-center mb-2\">\n                        <h3>\n                            <FormattedMessage\n                                id=\"view.instanceedit.title\"\n                                values={{\n                                    instanceid: this.props.match.params.id,\n                                    instancename: this.state.instance.name\n                                }}\n                            />\n                        </h3>\n                        <h5 className=\"text-white-50\">\n                            <FormattedMessage id={`view.instanceedit.tabs.${this.state.tab}`} />\n                        </h5>\n                    </Card.Header>\n                    <Tab.Container\n                        mountOnEnter\n                        unmountOnExit\n                        id=\"instanceedit\"\n                        activeKey={this.state.tab}>\n                        <Card.Body>\n                            <div className=\"d-block d-xl-none\">{nav(true)}</div>\n                            <div className=\"d-none d-xl-block\">{nav(false)}</div>\n                        </Card.Body>\n                        <Card.Body className=\"bg-body\">\n                            <Tab.Content>\n                                {InstanceEdit.tabs.map(([tabKey, , Comp]) => {\n                                    return (\n                                        <Tab.Pane eventKey={tabKey} key={tabKey}>\n                                            {Comp ? <Comp /> : <WIPNotice />}\n                                        </Tab.Pane>\n                                    );\n                                })}\n                            </Tab.Content>\n                        </Card.Body>\n                    </Tab.Container>\n                </Card>\n            </InstanceEditContext.Provider>\n        );\n    }\n}\nInstanceEdit.contextType = GeneralContext;\nexport default withRouter(InstanceEdit);\n","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;"],"sourceRoot":""}