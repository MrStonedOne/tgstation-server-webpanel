{"version":3,"sources":["webpack://tgstation-server-control-panel/./src/components/utils/WIPNotice.tsx","webpack://tgstation-server-control-panel/./src/components/views/Instance/Edit/Byond.tsx","webpack://tgstation-server-control-panel/./src/components/views/Instance/InstanceEdit.tsx","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Tab.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabContainer.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabContent.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabPane.js"],"names":["WIPNotice","className","border","id","href","as","VERSION","MODE","window","location","toString","React","Byond","props","state","versions","errors","activeVersion","latestVersion","selectedVersion","loading","error","this","setState","prevState","Array","from","push","response","ByondClient","context","instance","code","StatusCode","payload","content","response2","version","addError","loadVersions","fetch","then","res","text","data","split","catch","e","InternalError","ErrorCode","jsError","Error","instancePermissionSet","byondRights","ByondRights","map","err","index","key","onClose","prev","newarr","undefined","onChange","target","value","disabled","name","defaultChecked","htmlFor","overlay","innerid","show","endsWith","ref","triggerHandler","substr","length","fixedWidth","icon","type","defaultValue","arr","join","variant","onClick","customFile","arrayBuffer","custom","label","accept","files","contextType","InstanceEditContext","InstanceEdit","reloadInstance","bind","deleteContextError","RouteData","parseInt","match","params","tab","tabs","Set","deleteError","instanceid","newSet","delete","InstanceClient","InstancePermissionSetClient","add","nav","vertical","active","find","onSelect","eventKey","history","AppRoutes","popperConfig","modifiers","enabled","phase","fn","placement","reset","defaultActiveKey","fill","activeKey","tabKey","component","bsPrefix","Object","assign","user","serverInfo","values","instancename","mountOnEnter","unmountOnExit","Comp","InstanceSettings","GeneralContext","withRouter","Tab","_React$Component","apply","arguments","prototype","render","Container","Content","Pane","_useUncontrolled","generateCustomChildId","generateChildId","transition","children","useMemo","tabContext","getControlledId","getControllerId","TabContent","_ref","_ref$as","Component","decoratedBsPrefix","TabPane","_useTabContext","useContext","rest","shouldTransition","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","prefix","pane","role","in","displayName"],"mappings":"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","file":"711.4a905828d85ead41d5dd.js","sourcesContent":["import React, { ReactNode } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { MODE, VERSION } from \"../../definitions/constants\";\n\nexport default class WIPNotice extends React.Component {\n    public render(): ReactNode {\n        return (\n            <Card className=\"bg-transparent\" border=\"info\">\n                <Card.Header className=\"bg-info text-dark font-weight-bold\">\n                    <FormattedMessage id=\"generic.wip\" />\n                </Card.Header>\n                <Card.Body>\n                    <Card.Title>\n                        <FormattedMessage id=\"generic.wip.desc\" />\n                        <a href=\"https://github.com/tgstation/Tgstation.Server.ControlPanel/releases/latest\">\n                            https://github.com/tgstation/Tgstation.Server.ControlPanel/releases/latest\n                        </a>\n                    </Card.Title>\n                    <Card.Text as={\"pre\"} className=\"bg-transparent text-info\">\n                        <code>\n                            {`Version: ${VERSION}\\nWebpanel Mode: ${MODE}\\nCurrent route: ${window.location.toString()}`}\n                        </code>\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { ChangeEvent } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport ByondClient from \"../../../../ApiClient/ByondClient\";\nimport { ByondRights } from \"../../../../ApiClient/generatedcode/_enums\";\nimport { ByondResponse } from \"../../../../ApiClient/generatedcode/schemas\";\nimport InternalError, { ErrorCode } from \"../../../../ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"../../../../ApiClient/models/InternalComms/InternalStatus\";\nimport { InstanceEditContext } from \"../../../../contexts/InstanceEditContext\";\nimport AccessDenied from \"../../../utils/AccessDenied\";\nimport ErrorAlert from \"../../../utils/ErrorAlert\";\nimport Loading from \"../../../utils/Loading\";\n\ninterface IProps {}\n\ninterface IState {\n    errors: Array<InternalError<ErrorCode> | undefined>;\n    versions: ByondResponse[];\n    activeVersion?: string | null;\n    latestVersion: string;\n    selectedVersion: string;\n    loading: boolean;\n    customFile?: File | null;\n}\n\nclass Byond extends React.Component<IProps, IState> {\n    public declare context: InstanceEditContext;\n    public constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            versions: [],\n            errors: [],\n            activeVersion: \"\",\n            latestVersion: \"\",\n            selectedVersion: \"\",\n            loading: true\n        };\n    }\n\n    private addError(error: InternalError<ErrorCode>): void {\n        this.setState(prevState => {\n            const errors = Array.from(prevState.errors);\n            errors.push(error);\n            return {\n                errors\n            };\n        });\n    }\n\n    private async loadVersions() {\n        const response = await ByondClient.listAllVersions(this.context.instance.id);\n        if (response.code === StatusCode.OK) {\n            this.setState({\n                versions: response.payload.content\n            });\n\n            const response2 = await ByondClient.getActiveVersion(this.context.instance.id);\n            if (response2.code === StatusCode.OK) {\n                this.setState({\n                    activeVersion: response2.payload.version\n                });\n            } else {\n                this.addError(response2.error);\n            }\n        } else {\n            this.addError(response.error);\n        }\n    }\n\n    public async componentDidMount(): Promise<void> {\n        await this.loadVersions();\n\n        fetch(\"https://secure.byond.com/download/version.txt\")\n            .then(res => res.text())\n            .then(data => data.split(\"\\n\"))\n            .then(versions => versions[0])\n            .then(version => {\n                this.setState({\n                    latestVersion: version,\n                    selectedVersion: version,\n                    loading: false\n                });\n            })\n            .catch(e => {\n                this.addError(new InternalError(ErrorCode.APP_FAIL, { jsError: Error(e) }));\n                this.setState({\n                    loading: false\n                });\n            });\n    }\n\n    public render(): React.ReactNode {\n        if (this.state.loading) {\n            return <Loading text=\"loading.instance\" />;\n        }\n\n        // noinspection JSBitwiseOperatorUsage\n        if (\n            !(\n                this.context.instancePermissionSet.byondRights & ByondRights.ListInstalled &&\n                this.context.instancePermissionSet.byondRights & ByondRights.ReadActive\n            )\n        ) {\n            return <AccessDenied />;\n        }\n\n        const tooltip = (innerid?: string) => {\n            if (!innerid) return <React.Fragment />;\n\n            return (\n                <Tooltip id={innerid}>\n                    <FormattedMessage id={innerid} />\n                </Tooltip>\n            );\n        };\n\n        return (\n            <div className=\"text-center\">\n                <h1>\n                    <FormattedMessage id=\"view.instance.hosting.byond\" />\n                </h1>\n                {this.state.errors.map((err, index) => {\n                    if (!err) return;\n                    return (\n                        <ErrorAlert\n                            key={index}\n                            error={err}\n                            onClose={() =>\n                                this.setState(prev => {\n                                    const newarr = Array.from(prev.errors);\n                                    newarr[index] = undefined;\n                                    return {\n                                        errors: newarr\n                                    };\n                                })\n                            }\n                        />\n                    );\n                })}\n                <div\n                    onChange={async (e: ChangeEvent<HTMLInputElement>) => {\n                        this.setState({\n                            loading: true\n                        });\n                        const response = await ByondClient.switchActive(\n                            this.context.instance.id,\n                            e.target.value\n                        );\n                        if (response.code === StatusCode.OK) {\n                            await this.loadVersions();\n                        } else {\n                            this.addError(response.error);\n                        }\n                        this.setState({\n                            loading: false\n                        });\n                    }}>\n                    {this.state.versions.map(version => {\n                        // noinspection JSBitwiseOperatorUsage\n                        return (\n                            <InputGroup\n                                className=\"w-md-25 mb-1 mx-auto d-flex\"\n                                key={version.version}>\n                                <InputGroup.Prepend>\n                                    <InputGroup.Radio\n                                        disabled={\n                                            !(\n                                                this.context.instancePermissionSet.byondRights &\n                                                ByondRights.InstallOfficialOrChangeActiveVersion\n                                            )\n                                        }\n                                        name=\"byond\"\n                                        id={version.version!}\n                                        value={version.version!}\n                                        defaultChecked={\n                                            version.version! === this.state.activeVersion\n                                        }\n                                    />\n                                </InputGroup.Prepend>\n                                <InputGroup.Append\n                                    className=\"flex-grow-1 m-0\"\n                                    as=\"label\"\n                                    htmlFor={version.version!}>\n                                    <OverlayTrigger\n                                        overlay={tooltip(\"view.instance.hosting.byond.custom\")}\n                                        show={!version.version!.endsWith(\".0\") ? undefined : false}>\n                                        {({ ref, ...triggerHandler }) => (\n                                            <InputGroup.Text className=\"w-100\" {...triggerHandler}>\n                                                {version.version!.endsWith(\".0\")\n                                                    ? version.version!.substr(\n                                                          0,\n                                                          version.version!.length - 2\n                                                      )\n                                                    : version.version}\n                                                {!version.version!.endsWith(\".0\") ? (\n                                                    <div\n                                                        className={\"ml-auto\"}\n                                                        ref={ref as React.Ref<HTMLDivElement>}>\n                                                        <FontAwesomeIcon fixedWidth icon=\"info\" />\n                                                    </div>\n                                                ) : null}\n                                            </InputGroup.Text>\n                                        )}\n                                    </OverlayTrigger>\n                                </InputGroup.Append>\n                            </InputGroup>\n                        );\n                    })}\n                </div>\n                <hr />\n                <h4>\n                    <FormattedMessage id=\"view.instance.hosting.byond.add\" />\n                </h4>\n                <InputGroup className=\"w-md-50 w-lg-25 mb-3 mx-auto\">\n                    <FormControl\n                        type=\"number\"\n                        defaultValue={this.state.latestVersion.split(\".\")[0]}\n                        onChange={e => {\n                            this.setState(prev => {\n                                const arr = prev.selectedVersion.split(\".\");\n                                arr[0] = e.target.value;\n                                return {\n                                    selectedVersion: arr.join(\".\")\n                                };\n                            });\n                        }}\n                    />\n                    <InputGroup.Text className=\"rounded-0\">.</InputGroup.Text>\n                    <FormControl\n                        type=\"number\"\n                        defaultValue={this.state.latestVersion.split(\".\")[1]}\n                        onChange={e => {\n                            this.setState(prev => {\n                                const arr = prev.selectedVersion.split(\".\");\n                                arr[1] = e.target.value;\n                                return {\n                                    selectedVersion: arr.join(\".\")\n                                };\n                            });\n                        }}\n                    />\n                    <InputGroup.Append>\n                        <Button\n                            variant=\"success\"\n                            onClick={async () => {\n                                this.setState({\n                                    loading: true\n                                });\n                                const response = await ByondClient.switchActive(\n                                    this.context.instance.id,\n                                    this.state.selectedVersion,\n                                    this.state.customFile\n                                        ? await this.state.customFile.arrayBuffer()\n                                        : undefined\n                                );\n                                if (response.code === StatusCode.ERROR) {\n                                    this.addError(response.error);\n                                } else {\n                                    this.setState({\n                                        customFile: null\n                                    });\n                                    await this.loadVersions();\n                                }\n                                this.setState({\n                                    loading: false\n                                });\n                            }}>\n                            <FontAwesomeIcon icon=\"plus\" />\n                        </Button>\n                    </InputGroup.Append>\n                </InputGroup>\n                <Form>\n                    <Form.File\n                        custom\n                        id=\"test\"\n                        className=\"w-md-50 w-lg-25 text-left\"\n                        label={\n                            this.state.customFile ? (\n                                this.state.customFile.name\n                            ) : (\n                                <FormattedMessage id=\"view.instance.hosting.byond.upload\" />\n                            )\n                        }\n                        accept=\".zip\"\n                        onChange={(e: ChangeEvent<HTMLInputElement>) => {\n                            this.setState({\n                                customFile: e.target.files ? e.target.files[0] : null\n                            });\n                        }}\n                    />\n                </Form>\n            </div>\n        );\n    }\n}\nByond.contextType = InstanceEditContext;\nexport default Byond;\n","import { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Modifier } from \"@popperjs/core\";\nimport React, { ComponentType } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Tab from \"react-bootstrap/Tab\";\nimport { FormattedMessage } from \"react-intl\";\nimport { RouteComponentProps, withRouter } from \"react-router\";\n\nimport InstanceClient from \"../../../ApiClient/InstanceClient\";\nimport InstancePermissionSetClient from \"../../../ApiClient/InstancePermissionSetClient\";\nimport InternalError from \"../../../ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"../../../ApiClient/models/InternalComms/InternalStatus\";\nimport { GeneralContext } from \"../../../contexts/GeneralContext\";\nimport {\n    InstanceEditContext,\n    UnsafeInstanceEditContext\n} from \"../../../contexts/InstanceEditContext\";\nimport { AppRoutes, RouteData } from \"../../../utils/routes\";\nimport Loading from \"../../utils/Loading\";\nimport WIPNotice from \"../../utils/WIPNotice\";\nimport Byond from \"./Edit/Byond\";\nimport InstanceSettings from \"./Edit/Config\";\n\ntype IProps = RouteComponentProps<{ id: string; tab?: string }>;\ntype IState = Omit<UnsafeInstanceEditContext, \"user\" | \"serverInfo\"> & {\n    tab: string;\n    instanceid: number;\n};\n\nclass InstanceEdit extends React.Component<IProps, IState> {\n    public declare context: GeneralContext;\n    public static tabs: [string, IconProp, ComponentType?][] = [\n        [\"info\", \"info\"],\n        [\"repository\", \"code-branch\"],\n        [\"deployment\", \"hammer\"],\n        [\"dd\", \"server\"],\n        [\"byond\", \"list-ul\", Byond],\n        [\"chatbots\", \"comments\"],\n        [\"files\", \"folder-open\"],\n        [\"users\", \"users\"],\n        [\"config\", \"cogs\", InstanceSettings]\n    ];\n\n    public constructor(props: IProps) {\n        super(props);\n\n        this.reloadInstance = this.reloadInstance.bind(this);\n        this.deleteContextError = this.deleteContextError.bind(this);\n\n        RouteData.selectedinstanceid = parseInt(this.props.match.params.id);\n\n        this.state = {\n            tab: props.match.params.tab ?? InstanceEdit.tabs[0][0],\n            errors: new Set(),\n            instance: null,\n            instancePermissionSet: null,\n            reloadInstance: this.reloadInstance,\n            deleteError: this.deleteContextError,\n            instanceid: parseInt(this.props.match.params.id)\n        };\n    }\n    public deleteContextError(error: InternalError): void {\n        this.setState(prev => {\n            const newSet = new Set(prev.errors);\n            newSet.delete(error);\n            return {\n                errors: newSet\n            };\n        });\n    }\n\n    public async componentDidMount(): Promise<void> {\n        await this.reloadInstance();\n    }\n\n    public async reloadInstance(): Promise<void> {\n        this.setState({\n            instance: null,\n            instancePermissionSet: null\n        });\n        const response = await InstanceClient.getInstance(this.state.instanceid);\n        if (response.code === StatusCode.OK) {\n            this.setState({\n                instance: response.payload\n            });\n\n            const response2 = await InstancePermissionSetClient.getCurrentInstancePermissionSet(\n                this.state.instanceid\n            );\n            if (response2.code === StatusCode.OK) {\n                this.setState({\n                    instancePermissionSet: response2.payload\n                });\n            } else {\n                this.setState(prev => {\n                    const newSet = new Set(prev.errors);\n                    newSet.add(response2.error);\n                    return {\n                        instancePermissionSet: null,\n                        errors: newSet\n                    };\n                });\n            }\n        } else {\n            this.setState(prev => {\n                const newSet = new Set(prev.errors);\n                newSet.add(response.error);\n                return {\n                    instance: null,\n                    errors: newSet\n                };\n            });\n        }\n    }\n\n    public render(): React.ReactNode {\n        if (!this.state.instance || !this.state.instancePermissionSet) {\n            return <Loading text=\"loading.instance\" />;\n        }\n\n        const nav = (vertical: boolean) => {\n            if (vertical) {\n                const active = InstanceEdit.tabs.find(value => value[0] === this.state.tab);\n\n                if (!active) throw \"InstanceEdit: unable to find active tab\";\n\n                // eslint-disable-next-line @typescript-eslint/ban-types\n                const bottomPlacement: Modifier<\"bottomPlacement\", {}> = {\n                    name: \"bottomPlacement\",\n                    enabled: true,\n                    phase: \"beforeMain\",\n                    fn: ({ state }) => {\n                        if (state.placement != \"bottom\") {\n                            state.placement = \"bottom\";\n                            state.reset = true;\n                        }\n                    }\n                };\n\n                return (\n                    <Dropdown\n                        onSelect={eventKey => {\n                            eventKey = eventKey ?? InstanceEdit.tabs[0][0];\n                            RouteData.selectedinstanceedittab = eventKey;\n                            this.props.history.push(\n                                AppRoutes.instanceedit.link ?? AppRoutes.instanceedit.route\n                            );\n                            this.setState({ tab: eventKey ?? InstanceEdit.tabs[0][0] });\n                        }}>\n                        <Dropdown.Toggle\n                            variant=\"secondary\"\n                            id=\"tabselect\"\n                            className=\"d-block mx-auto w-75 text-center\">\n                            <FontAwesomeIcon icon={active[1]} className=\"mr-1\" />\n                            <FormattedMessage id={`view.instanceedit.tabs.${active[0]}`} />\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu\n                            popperConfig={{ modifiers: [bottomPlacement] }}\n                            className=\"d-block mx-auto w-75 text-center\">\n                            {InstanceEdit.tabs.map(value => {\n                                if (value === active) return;\n                                if (value[2] === undefined) return;\n\n                                return (\n                                    <Dropdown.Item key={value[0]} eventKey={value[0]}>\n                                        <FontAwesomeIcon icon={value[1]} className=\"mr-1\" />\n                                        <FormattedMessage\n                                            id={`view.instanceedit.tabs.${value[0]}`}\n                                        />\n                                    </Dropdown.Item>\n                                );\n                            })}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                );\n            }\n\n            return (\n                <Nav\n                    defaultActiveKey={this.state.tab}\n                    onSelect={eventKey => {\n                        eventKey = eventKey ?? InstanceEdit.tabs[0][0];\n                        RouteData.selectedinstanceedittab = eventKey;\n                        this.props.history.push(\n                            AppRoutes.instanceedit.link ?? AppRoutes.instanceedit.route\n                        );\n                        this.setState({ tab: eventKey ?? InstanceEdit.tabs[0][0] });\n                    }}\n                    fill\n                    variant=\"pills\"\n                    activeKey={this.state.tab}\n                    className=\"flex-nowrap text-nowrap overflow-auto \">\n                    {InstanceEdit.tabs.map(([tabKey, icon, component]) => {\n                        return (\n                            <Nav.Item key={tabKey}>\n                                <Nav.Link\n                                    eventKey={tabKey}\n                                    bsPrefix=\"nav-link instanceedittab \"\n                                    className={!component ? \"wip text-white\" : \"\"}>\n                                    <React.Fragment>\n                                        <FontAwesomeIcon icon={icon} className=\"mr-1\" />\n                                        <FormattedMessage id={`view.instanceedit.tabs.${tabKey}`} />\n                                    </React.Fragment>\n                                </Nav.Link>\n                            </Nav.Item>\n                        );\n                    })}\n                </Nav>\n            );\n        };\n\n        return (\n            <InstanceEditContext.Provider\n                value={\n                    Object.assign(\n                        { user: this.context.user, serverInfo: this.context.serverInfo },\n                        this.state\n                    ) as InstanceEditContext\n                }>\n                <Card>\n                    <Card.Header className=\"text-center mb-2\">\n                        <h3>\n                            <FormattedMessage\n                                id=\"view.instanceedit.title\"\n                                values={{\n                                    instanceid: this.props.match.params.id,\n                                    instancename: this.state.instance.name\n                                }}\n                            />\n                        </h3>\n                        <h5 className=\"text-white-50\">\n                            <FormattedMessage id={`view.instanceedit.tabs.${this.state.tab}`} />\n                        </h5>\n                    </Card.Header>\n                    <Tab.Container\n                        mountOnEnter\n                        unmountOnExit\n                        id=\"instanceedit\"\n                        activeKey={this.state.tab}>\n                        <Card.Body>\n                            <div className=\"d-block d-xl-none\">{nav(true)}</div>\n                            <div className=\"d-none d-xl-block\">{nav(false)}</div>\n                        </Card.Body>\n                        <Card.Body className=\"bg-body\">\n                            <Tab.Content>\n                                {InstanceEdit.tabs.map(([tabKey, , Comp]) => {\n                                    return (\n                                        <Tab.Pane eventKey={tabKey} key={tabKey}>\n                                            {Comp ? <Comp /> : <WIPNotice />}\n                                        </Tab.Pane>\n                                    );\n                                })}\n                            </Tab.Content>\n                        </Card.Body>\n                    </Tab.Container>\n                </Card>\n            </InstanceEditContext.Provider>\n        );\n    }\n}\nInstanceEdit.contextType = GeneralContext;\nexport default withRouter(InstanceEdit);\n","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;"],"sourceRoot":""}