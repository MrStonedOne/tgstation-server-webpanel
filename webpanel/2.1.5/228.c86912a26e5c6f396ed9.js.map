{"version":3,"sources":["webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/PageItem.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Pagination.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/PopoverTitle.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/PopoverContent.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Popover.js","webpack://tgstation-server-control-panel/./src/components/utils/PageHelper.tsx","webpack://tgstation-server-control-panel/./src/components/views/Instance/List.tsx","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Badge.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Table.js"],"names":["PageItem","_ref","ref","active","disabled","className","style","activeLabel","children","props","Component","SafeAnchor","defaultProps","displayName","createButton","name","defaultValue","label","Button","_ref2","First","Prev","Ellipsis","Next","Last","Pagination","bsPrefix","size","decoratedBsPrefix","Item","_ref$as","as","Popover","placement","content","arrowProps","popper","show","primaryPlacement","split","role","Title","Content","PageHelper","state","showGoto","gotoValue","currentPage","items","maxRight","Math","max","this","totalPages","maxLeft","min","Number","i","push","onClick","selectPage","ellipsis","findPopover","id","onSubmit","e","preventDefault","setState","Form","type","value","onChange","parseInt","target","custom","OverlayTrigger","overlay","prev","icon","React","InstanceList","setOnline","bind","loading","instances","errors","page","RouteData","error","prevState","Array","from","prevProps","loadInstances","instancelist","InstanceClient","modifiedlist","code","StatusCode","payload","work","instance","modifiedinstance","online","InstancePermissionSetClient","then","permissionset","canAccess","ErrorCode","addError","Promise","all","sort","a","b","maxPage","desiredState","instanceedit","text","canOnline","resolvePermissionSet","context","user","instanceManagerRights","InstanceManagerRights","tablecellstyling","verticalAlign","map","err","index","key","onClose","newarr","undefined","striped","bordered","hover","variant","responsive","moveJob","path","configurationType","toString","history","AppRoutes","newPage","renderAddInstance","canCreate","triggerHandler","faPlus","contextType","GeneralContext","withRouter","Badge","pill","prefix","Table","borderless","classes","table","responsiveClass"],"mappings":"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","file":"228.c86912a26e5c6f396ed9.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\n/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport React from 'react';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  active: false,\n  disabled: false,\n  activeLabel: '(current)'\n};\nvar PageItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      style = _ref.style,\n      activeLabel = _ref.activeLabel,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"active\", \"disabled\", \"className\", \"style\", \"activeLabel\", \"children\"]);\n\n  var Component = active || disabled ? 'span' : SafeAnchor;\n  return /*#__PURE__*/React.createElement(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active: active,\n      disabled: disabled\n    })\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: \"page-link\",\n    disabled: disabled\n  }, props), children, active && activeLabel && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, activeLabel)));\n});\nPageItem.defaultProps = defaultProps;\nPageItem.displayName = 'PageItem';\nexport default PageItem;\n\nfunction createButton(name, defaultValue, label) {\n  if (label === void 0) {\n    label = name;\n  }\n\n  function Button(_ref2) {\n    var children = _ref2.children,\n        props = _objectWithoutPropertiesLoose(_ref2, [\"children\"]);\n\n    return /*#__PURE__*/React.createElement(PageItem, props, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, children || defaultValue), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\"\n    }, label));\n  }\n\n  Button.displayName = name;\n  return Button;\n}\n\nexport var First = createButton('First', '«');\nexport var Prev = createButton('Prev', '‹', 'Previous');\nexport var Ellipsis = createButton('Ellipsis', '…', 'More');\nexport var Next = createButton('Next', '›');\nexport var Last = createButton('Last', '»');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { Ellipsis, First, Last, Next, Prev } from './PageItem';\n\n/**\n * @property {PageItem} Item\n * @property {PageItem} First\n * @property {PageItem} Prev\n * @property {PageItem} Ellipsis\n * @property {PageItem} Next\n * @property {PageItem} Last\n */\nvar Pagination = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      size = _ref.size,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"children\", \"size\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return /*#__PURE__*/React.createElement(\"ul\", _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix, size && decoratedBsPrefix + \"-\" + size)\n  }), children);\n});\nPagination.First = First;\nPagination.Prev = Prev;\nPagination.Ellipsis = Ellipsis;\nPagination.Item = PageItem;\nPagination.Next = Next;\nPagination.Last = Last;\nexport default Pagination;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar PopoverTitle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"bsPrefix\", \"className\", \"children\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'popover-header');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(bsPrefix, className)\n  }), children);\n});\nexport default PopoverTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar PopoverContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"bsPrefix\", \"className\", \"children\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'popover-body');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix)\n  }), children);\n});\nexport default PopoverContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport isRequiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PopoverTitle from './PopoverTitle';\nimport PopoverContent from './PopoverContent';\nvar defaultProps = {\n  placement: 'right'\n};\nvar Popover = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      placement = _ref.placement,\n      className = _ref.className,\n      style = _ref.style,\n      children = _ref.children,\n      content = _ref.content,\n      arrowProps = _ref.arrowProps,\n      _ = _ref.popper,\n      _1 = _ref.show,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"placement\", \"className\", \"style\", \"children\", \"content\", \"arrowProps\", \"popper\", \"show\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'popover');\n\n  var _ref2 = (placement == null ? void 0 : placement.split('-')) || [],\n      primaryPlacement = _ref2[0];\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref,\n    role: \"tooltip\",\n    style: style,\n    \"x-placement\": primaryPlacement,\n    className: classNames(className, decoratedBsPrefix, primaryPlacement && \"bs-popover-\" + primaryPlacement)\n  }, props), /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: \"arrow\"\n  }, arrowProps)), content ? /*#__PURE__*/React.createElement(PopoverContent, null, children) : children);\n});\nPopover.defaultProps = defaultProps;\nPopover.Title = PopoverTitle;\nPopover.Content = PopoverContent;\nexport default Popover;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport Popover from \"react-bootstrap/Popover\";\nimport { FormattedMessage } from \"react-intl\";\n\ninterface IProps {\n    selectPage: (page: number) => void;\n    totalPages: number;\n    currentPage: number;\n}\n\ninterface IState {\n    showGoto: boolean;\n    gotoValue: number;\n}\n\nexport default class PageHelper extends React.PureComponent<IProps, IState> {\n    public constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            showGoto: false,\n            gotoValue: props.currentPage\n        };\n    }\n\n    public render(): React.ReactNode {\n        const items: React.ReactNodeArray = [];\n\n        const maxRight = Math.max(this.props.totalPages - this.props.currentPage - 1, 0);\n        const maxLeft = Math.max(this.props.currentPage - 2, 0);\n\n        const min = Math.max(\n            this.props.currentPage -\n                Math.max(\n                    5 - Number(this.props.currentPage !== this.props.totalPages) - maxRight,\n                    2\n                ),\n            2\n        );\n        const max = Math.min(\n            this.props.currentPage +\n                Math.max(5 - Number(this.props.currentPage !== 1) - maxLeft, 2),\n            this.props.totalPages - 1\n        );\n\n        //Start at the second page and stop at the second to last page\n        for (let i = min; i <= max; i++) {\n            items.push(\n                <Pagination.Item\n                    active={i === this.props.currentPage}\n                    onClick={() => this.props.selectPage(i)}>\n                    {i}\n                </Pagination.Item>\n            );\n        }\n\n        const ellipsis = this.props.totalPages > 7 ? <Pagination.Ellipsis disabled /> : null;\n\n        const findPopover = (\n            <Popover id=\"popover-gotopage\">\n                <Popover.Title>\n                    <FormattedMessage id=\"generic.goto.title\" />\n                </Popover.Title>\n                <Popover.Content>\n                    <form\n                        className=\"d-flex\"\n                        onSubmit={e => {\n                            e.preventDefault();\n                            this.props.selectPage(this.state.gotoValue);\n                            this.setState({\n                                showGoto: false\n                            });\n                        }}>\n                        <Form.Control\n                            className=\"mr-2\"\n                            type=\"number\"\n                            min={1}\n                            max={this.props.totalPages}\n                            value={this.state.gotoValue}\n                            onChange={e => this.setState({ gotoValue: parseInt(e.target.value) })}\n                            custom\n                        />\n                        <Button type=\"submit\">\n                            <FormattedMessage id=\"generic.goto\" />\n                        </Button>\n                    </form>\n                </Popover.Content>\n            </Popover>\n        );\n\n        return (\n            <div className=\"text-center\">\n                <Pagination className=\"justify-content-center\">\n                    <Pagination.Prev\n                        disabled={this.props.currentPage === 1}\n                        onClick={() =>\n                            this.props.selectPage(Math.max(this.props.currentPage - 1, 1))\n                        }\n                    />\n                    <Pagination.Item\n                        active={this.props.currentPage === 1}\n                        onClick={() => this.props.selectPage(1)}>\n                        1\n                    </Pagination.Item>\n                    {ellipsis}\n                    {items}\n                    {ellipsis}\n                    {this.props.totalPages >= 2 ? (\n                        <Pagination.Item\n                            active={this.props.currentPage === this.props.totalPages}\n                            onClick={() => this.props.selectPage(this.props.totalPages)}>\n                            {this.props.totalPages}\n                        </Pagination.Item>\n                    ) : null}\n                    {this.props.totalPages > 7 ? (\n                        <OverlayTrigger\n                            show={this.state.showGoto}\n                            placement=\"top\"\n                            overlay={findPopover}>\n                            <Pagination.Item\n                                onClick={() =>\n                                    this.setState(prev => {\n                                        return {\n                                            showGoto: !prev.showGoto\n                                        };\n                                    })\n                                }>\n                                <FontAwesomeIcon icon=\"search\" />\n                            </Pagination.Item>\n                        </OverlayTrigger>\n                    ) : null}\n                    <Pagination.Next\n                        disabled={this.props.currentPage === this.props.totalPages}\n                        onClick={() =>\n                            this.props.selectPage(\n                                Math.min(this.props.currentPage + 1, this.props.totalPages)\n                            )\n                        }\n                    />\n                </Pagination>\n            </div>\n        );\n    }\n}\n","import { faPlus } from \"@fortawesome/free-solid-svg-icons/faPlus\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { CSSProperties, ReactNode } from \"react\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Button from \"react-bootstrap/Button\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Table from \"react-bootstrap/Table\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport { FormattedMessage } from \"react-intl\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\n\nimport { InstanceManagerRights } from \"../../../ApiClient/generatedcode/_enums\";\nimport { InstanceResponse } from \"../../../ApiClient/generatedcode/schemas\";\nimport InstanceClient from \"../../../ApiClient/InstanceClient\";\nimport InstancePermissionSetClient from \"../../../ApiClient/InstancePermissionSetClient\";\nimport InternalError, { ErrorCode } from \"../../../ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"../../../ApiClient/models/InternalComms/InternalStatus\";\nimport { GeneralContext } from \"../../../contexts/GeneralContext\";\nimport { resolvePermissionSet } from \"../../../utils/misc\";\nimport { AppRoutes, RouteData } from \"../../../utils/routes\";\nimport ErrorAlert from \"../../utils/ErrorAlert\";\nimport Loading from \"../../utils/Loading\";\nimport PageHelper from \"../../utils/PageHelper\";\n\ntype Instance = InstanceResponse & {\n    canAccess: boolean;\n};\n\ninterface IState {\n    instances: Instance[];\n    loading?: boolean;\n    errors: Array<InternalError<ErrorCode> | undefined>;\n    page: number;\n    maxPage?: number;\n}\ninterface IProps extends RouteComponentProps {}\n\nclass InstanceList extends React.Component<IProps, IState> {\n    public declare context: GeneralContext;\n\n    public constructor(props: IProps) {\n        super(props);\n\n        this.setOnline = this.setOnline.bind(this);\n\n        this.state = {\n            loading: true,\n            instances: [],\n            errors: [],\n            page: RouteData.instancelistpage || 1\n        };\n    }\n\n    private addError(error: InternalError<ErrorCode>): void {\n        this.setState(prevState => {\n            const errors = Array.from(prevState.errors);\n            errors.push(error);\n            return {\n                errors\n            };\n        });\n    }\n\n    public async componentDidUpdate(prevProps: Readonly<IProps>, prevState: Readonly<IState>) {\n        if (prevState.page !== this.state.page) {\n            RouteData.instancelistpage = this.state.page;\n            await this.loadInstances();\n        }\n    }\n\n    private async loadInstances(): Promise<void> {\n        this.setState({\n            loading: true\n        });\n\n        const instancelist = await InstanceClient.listInstances({ page: this.state.page });\n        const modifiedlist: Array<Instance> = [];\n\n        if (instancelist.code == StatusCode.OK) {\n            //Safety against being on non existant pages\n            if (this.state.page > instancelist.payload.totalPages) {\n                this.setState({\n                    page: instancelist.payload.totalPages\n                });\n                return;\n            }\n\n            const work: Array<Promise<void>> = [];\n            for (const instance of instancelist.payload.content) {\n                const modifiedinstance = instance as Instance;\n                if (instance.online) {\n                    work.push(\n                        InstancePermissionSetClient.getCurrentInstancePermissionSet(\n                            instance.id\n                        ).then(permissionset => {\n                            if (permissionset.code == StatusCode.OK) {\n                                modifiedinstance.canAccess = true;\n                            } else {\n                                modifiedinstance.canAccess = false;\n                                if (permissionset.error.code !== ErrorCode.HTTP_ACCESS_DENIED) {\n                                    this.addError(permissionset.error);\n                                }\n                            }\n                            modifiedlist.push(modifiedinstance);\n                        })\n                    );\n                } else {\n                    modifiedinstance.canAccess = false;\n                    modifiedlist.push(modifiedinstance);\n                }\n            }\n\n            await Promise.all(work);\n\n            this.setState({\n                instances: modifiedlist.sort((a, b) => a.id - b.id),\n                maxPage: instancelist.payload.totalPages\n            });\n        } else {\n            this.addError(instancelist.error);\n        }\n\n        this.setState({\n            loading: false\n        });\n    }\n\n    public async componentDidMount(): Promise<void> {\n        await this.loadInstances();\n    }\n\n    private async setOnline(instance: Instance) {\n        //Yes this is desynchronized and will use the last known state of the instance\n        // to determine what state we should put it in, thats intentional, if the user clicks Set Online, it needs\n        // to be online, no matter what it previously was\n        const desiredState = !instance.online;\n        const instanceedit = await InstanceClient.editInstance(({\n            id: instance.id,\n            online: desiredState\n        } as unknown) as InstanceResponse);\n        if (instanceedit.code === StatusCode.OK) {\n            await this.loadInstances();\n        } else {\n            this.addError(instanceedit.error);\n        }\n    }\n\n    public render(): ReactNode {\n        if (this.state.loading) {\n            return <Loading text=\"loading.instance.list\" />;\n        }\n\n        const canOnline = !!(\n            resolvePermissionSet(this.context.user).instanceManagerRights &\n            InstanceManagerRights.SetOnline\n        );\n\n        const tablecellstyling: CSSProperties = {\n            verticalAlign: \"middle\"\n        };\n\n        return (\n            <div className=\"text-center\">\n                {this.state.errors.map((err, index) => {\n                    if (!err) return;\n                    return (\n                        <ErrorAlert\n                            key={index}\n                            error={err}\n                            onClose={() =>\n                                this.setState(prev => {\n                                    const newarr = Array.from(prev.errors);\n                                    newarr[index] = undefined;\n                                    return {\n                                        errors: newarr\n                                    };\n                                })\n                            }\n                        />\n                    );\n                })}\n                <h3>\n                    <FormattedMessage id=\"view.instance.list.title\" />\n                </h3>\n                <Table striped bordered hover variant=\"dark\" responsive className=\"mb-4\">\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>\n                                <FormattedMessage id=\"generic.name\" />\n                            </th>\n                            <th>\n                                <FormattedMessage id=\"generic.online\" />\n                            </th>\n                            <th>\n                                <FormattedMessage id=\"generic.path\" />\n                            </th>\n                            <th>\n                                <FormattedMessage id=\"generic.configmode\" />\n                            </th>\n                            <th>\n                                <FormattedMessage id=\"generic.action\" />\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.instances.map(value => {\n                            return (\n                                <tr key={value.id}>\n                                    <td style={tablecellstyling}>{value.id}</td>\n                                    <td style={tablecellstyling}>{value.name}</td>\n                                    <td style={tablecellstyling}>\n                                        {value.online ? (\n                                            <Badge variant=\"success\">\n                                                <FormattedMessage id=\"generic.online\" />\n                                            </Badge>\n                                        ) : (\n                                            <Badge variant=\"danger\">\n                                                <FormattedMessage id=\"generic.offline\" />\n                                            </Badge>\n                                        )}\n                                    </td>\n                                    <td style={tablecellstyling}>\n                                        {value.moveJob ? (\n                                            <FormattedMessage id=\"view.instance.moving\" />\n                                        ) : (\n                                            value.path\n                                        )}\n                                    </td>\n                                    <td style={tablecellstyling}>\n                                        <FormattedMessage\n                                            id={`view.instance.configmode.${value.configurationType.toString()}`}\n                                        />\n                                    </td>\n                                    <td className=\"align-middle p-1\" style={tablecellstyling}>\n                                        <Button\n                                            className=\"mx-1\"\n                                            onClick={() => {\n                                                RouteData.selectedinstanceid = value.id;\n                                                this.props.history.push(\n                                                    AppRoutes.instanceedit.link ||\n                                                        AppRoutes.instanceedit.route\n                                                );\n                                            }}\n                                            disabled={!value.canAccess}>\n                                            <FormattedMessage id=\"generic.edit\" />\n                                        </Button>\n                                        <Button\n                                            className=\"mx-1\"\n                                            variant={value.online ? \"danger\" : \"success\"}\n                                            onClick={() => this.setOnline(value)}\n                                            disabled={!canOnline}>\n                                            <FormattedMessage\n                                                id={`view.instance.list.set.${\n                                                    value.online ? \"offline\" : \"online\"\n                                                }`}\n                                            />\n                                        </Button>\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n                <PageHelper\n                    selectPage={newPage => this.setState({ page: newPage })}\n                    totalPages={this.state.maxPage || 1}\n                    currentPage={this.state.page}\n                />\n                <div className=\"align-middle\">\n                    <div className=\"mb-4\">{this.renderAddInstance()}</div>\n                    <Button\n                        className=\"mx-1\"\n                        onClick={() => {\n                            this.props.history.push(\n                                AppRoutes.instancejobs.link || AppRoutes.instancejobs.route\n                            );\n                        }}>\n                        <FormattedMessage id=\"routes.instancejobs\" />\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n\n    private renderAddInstance(): React.ReactNode {\n        const canCreate = !!(\n            resolvePermissionSet(this.context.user).instanceManagerRights &\n            InstanceManagerRights.Create\n        );\n\n        return (\n            <OverlayTrigger\n                overlay={\n                    <Tooltip id=\"create-instance-tooltip\">\n                        <FormattedMessage id=\"perms.instance.create.warning\" />\n                    </Tooltip>\n                }\n                show={canCreate ? false : undefined}>\n                {({ ref, ...triggerHandler }) => (\n                    <Button\n                        ref={ref}\n                        className=\"mx-1\"\n                        variant=\"success\"\n                        onClick={() => {\n                            this.props.history.push(\n                                AppRoutes.instancecreate.link || AppRoutes.instancecreate.route\n                            );\n                        }}\n                        disabled={!canCreate}\n                        {...triggerHandler}>\n                        <div>\n                            <FontAwesomeIcon className=\"mr-2\" icon={faPlus} />\n                            <FormattedMessage id=\"routes.instancecreate\" />\n                        </div>\n                    </Button>\n                )}\n            </OverlayTrigger>\n        );\n    }\n}\nInstanceList.contextType = GeneralContext;\nexport default withRouter(InstanceList);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;"],"sourceRoot":""}