{"version":3,"sources":["webpack:///./src/components/views/Info.tsx"],"names":["Info","className","id","VERSION","MODE","this","context","serverInfo","Fragment","fixedWidth","icon","windowsHost","faWindows","faLinux","version","apiVersion","dmApiVersion","minimumPasswordLength","instanceLimit","userLimit","userGroupLimit","Object","keys","oAuthProviderInfos","join","swarmServers","length","tagName","map","server","key","identifier","controller","address","text","React","Component","contextType","GeneralContext"],"mappings":"g+CAaMA,E,+VAEF,WAAiC,MAC7B,OACI,yBAAKC,UAAU,eACX,4BACI,kBAAC,IAAD,CAAkBC,GAAG,sBAEzB,yBAAKD,UAAU,kBACX,4BACI,kBAAC,IAAD,CAAkBC,GAAG,sBADzB,UAEQC,IAFR,aAEoBC,IAFpB,OAMJ,6BAEA,4BACI,kBAAC,IAAD,CAAkBF,GAAG,sBAGvBG,KAAKC,QAAQC,WAGX,kBAAC,IAAMC,SAAP,KACI,yBAAKP,UAAU,kBACX,2BAAOA,UAAU,qBACb,+BACI,4BACI,4BACI,wBAAIA,UAAU,QACV,kBAAC,IAAD,CAAkBC,GAAG,wBAG7B,4BACI,4BACI,kBAAC,IAAD,CACIO,YAAU,EACVC,KACIL,KAAKC,QAAQC,WAAWI,YAClBC,YACAC,eAM1B,4BACI,4BACI,wBAAIZ,UAAU,QACV,kBAAC,IAAD,CAAkBC,GAAG,wBAG7B,4BACI,4BAAKG,KAAKC,QAAQC,WAAWO,WAGrC,4BACI,4BACI,wBAAIb,UAAU,QACV,kBAAC,IAAD,CAAkBC,GAAG,+BAG7B,4BACI,4BAAKG,KAAKC,QAAQC,WAAWQ,cAGrC,4BACI,4BACI,wBAAId,UAAU,QACV,kBAAC,IAAD,CAAkBC,GAAG,6BAG7B,4BACI,4BAAKG,KAAKC,QAAQC,WAAWS,gBAGrC,4BACI,4BACI,wBAAIf,UAAU,QACV,kBAAC,IAAD,CAAkBC,GAAG,4BAG7B,4BACI,4BAAKG,KAAKC,QAAQC,WAAWU,yBAGrC,4BACI,4BACI,wBAAIhB,UAAU,QACV,kBAAC,IAAD,CAAkBC,GAAG,8BAG7B,4BACI,4BAAKG,KAAKC,QAAQC,WAAWW,iBAGrC,4BACI,4BACI,wBAAIjB,UAAU,QACV,kBAAC,IAAD,CAAkBC,GAAG,0BAG7B,4BACI,4BAAKG,KAAKC,QAAQC,WAAWY,aAGrC,4BACI,4BACI,wBAAIlB,UAAU,QACV,kBAAC,IAAD,CAAkBC,GAAG,2BAG7B,4BACI,4BAAKG,KAAKC,QAAQC,WAAWa,kBAGrC,4BACI,4BACI,wBAAInB,UAAU,QACV,kBAAC,IAAD,CAAkBC,GAAG,sBAG7B,4BACI,4BACKmB,OAAOC,KACJjB,KAAKC,QAAQC,WAAWgB,oBAAsB,IAChDC,KAAK,YAO9B,UAAAnB,KAAKC,QAAQC,WAAWkB,oBAAxB,SAAsCC,OACnC,kBAAC,IAAMlB,SAAP,KACI,6BAEA,kBAAC,IAAD,CAAkBN,GAAG,kBAAkByB,QAAQ,OAE9CtB,KAAKC,QAAQC,WAAWkB,aAAaG,KAAI,SAAAC,GACtC,OACI,wBACIC,IAAKD,EAAOE,WACZ9B,UACI4B,EAAOG,WACD,kCACA,kBAETH,EAAOE,WAPZ,KAO0BF,EAAOI,QAPjC,IAO2C,IACtCJ,EAAOG,WACJ,kBAAC,IAAD,CAAkB9B,GAAG,yBACrB,UAKpB,MAvIR,kBAAC,IAAD,CAASgC,KAAK,uB,8BAtBfC,IAAMC,WAqKzBpC,EAAKqC,YAAcC,IACJtC","file":"18.20bcc7f54489bfc816f5.js","sourcesContent":["import { faLinux } from \"@fortawesome/free-brands-svg-icons/faLinux\";\nimport { faWindows } from \"@fortawesome/free-brands-svg-icons/faWindows\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { GeneralContext, UnsafeGeneralContext } from \"../../contexts/GeneralContext\";\nimport { MODE, VERSION } from \"../../definitions/constants\";\nimport Loading from \"../utils/Loading\";\n\ninterface IProps {}\ninterface IState {}\n\nclass Info extends React.Component<IProps, IState> {\n    public declare context: UnsafeGeneralContext;\n    public render(): React.ReactNode {\n        return (\n            <div className=\"text-center\">\n                <h3>\n                    <FormattedMessage id=\"view.info.client\" />\n                </h3>\n                <div className=\"text-secondary\">\n                    <h4>\n                        <FormattedMessage id=\"view.info.version\" />\n                        {`${VERSION} (${MODE})`}\n                    </h4>\n                </div>\n\n                <hr />\n\n                <h3>\n                    <FormattedMessage id=\"view.info.server\" />\n                </h3>\n\n                {!this.context.serverInfo ? (\n                    <Loading text=\"loading.info\" />\n                ) : (\n                    <React.Fragment>\n                        <div className=\"text-secondary\">\n                            <table className=\"mx-auto text-left\">\n                                <tbody>\n                                    <tr>\n                                        <td>\n                                            <h4 className=\"mr-3\">\n                                                <FormattedMessage id=\"view.admin.hostos\" />\n                                            </h4>\n                                        </td>\n                                        <td>\n                                            <h4>\n                                                <FontAwesomeIcon\n                                                    fixedWidth\n                                                    icon={\n                                                        this.context.serverInfo.windowsHost\n                                                            ? faWindows\n                                                            : faLinux\n                                                    }\n                                                />\n                                            </h4>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <h4 className=\"mr-3\">\n                                                <FormattedMessage id=\"view.info.version\" />\n                                            </h4>\n                                        </td>\n                                        <td>\n                                            <h4>{this.context.serverInfo.version}</h4>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <h4 className=\"mr-3\">\n                                                <FormattedMessage id=\"view.info.httpapiversion\" />\n                                            </h4>\n                                        </td>\n                                        <td>\n                                            <h4>{this.context.serverInfo.apiVersion}</h4>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <h4 className=\"mr-3\">\n                                                <FormattedMessage id=\"view.info.dmapiversion\" />\n                                            </h4>\n                                        </td>\n                                        <td>\n                                            <h4>{this.context.serverInfo.dmApiVersion}</h4>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <h4 className=\"mr-3\">\n                                                <FormattedMessage id=\"view.info.minpassword\" />\n                                            </h4>\n                                        </td>\n                                        <td>\n                                            <h4>{this.context.serverInfo.minimumPasswordLength}</h4>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <h4 className=\"mr-3\">\n                                                <FormattedMessage id=\"view.info.instancelimit\" />\n                                            </h4>\n                                        </td>\n                                        <td>\n                                            <h4>{this.context.serverInfo.instanceLimit}</h4>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <h4 className=\"mr-3\">\n                                                <FormattedMessage id=\"view.info.userlimit\" />\n                                            </h4>\n                                        </td>\n                                        <td>\n                                            <h4>{this.context.serverInfo.userLimit}</h4>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <h4 className=\"mr-3\">\n                                                <FormattedMessage id=\"view.info.grouplimit\" />\n                                            </h4>\n                                        </td>\n                                        <td>\n                                            <h4>{this.context.serverInfo.userGroupLimit}</h4>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <h4 className=\"mr-3\">\n                                                <FormattedMessage id=\"view.info.oauth\" />\n                                            </h4>\n                                        </td>\n                                        <td>\n                                            <h4>\n                                                {Object.keys(\n                                                    this.context.serverInfo.oAuthProviderInfos || {}\n                                                ).join(\", \")}\n                                            </h4>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                        {this.context.serverInfo.swarmServers?.length ? (\n                            <React.Fragment>\n                                <hr />\n\n                                <FormattedMessage id=\"view.info.swarm\" tagName=\"h3\" />\n\n                                {this.context.serverInfo.swarmServers.map(server => {\n                                    return (\n                                        <h4\n                                            key={server.identifier}\n                                            className={\n                                                server.controller\n                                                    ? \"font-weight-bold text-secondary\"\n                                                    : \"text-secondary\"\n                                            }>\n                                            {server.identifier} ({server.address}){\" \"}\n                                            {server.controller ? (\n                                                <FormattedMessage id=\"view.info.controller\" />\n                                            ) : null}\n                                        </h4>\n                                    );\n                                })}\n                            </React.Fragment>\n                        ) : null}\n                    </React.Fragment>\n                )}\n            </div>\n        );\n    }\n}\n\nInfo.contextType = GeneralContext;\nexport default Info;\n"],"sourceRoot":""}