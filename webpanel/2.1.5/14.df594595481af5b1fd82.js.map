{"version":3,"sources":["webpack:///./src/components/views/Home.tsx"],"names":["Home","props","setRoutes","bind","state","routes","this","setState","RouteController","getRoutes","on","removeListener","xs","sm","md","lg","className","map","val","homeIcon","AppRoutes","home","key","link","route","as","cachedAuth","Link","to","Body","style","height","fixedWidth","icon","Footer","id","name","React","Route"],"mappings":"uiDAgBqBA,E,0QAGjB,WAAmBC,GAAe,a,4FAAA,UAC9B,cAAMA,IACDC,UAAY,EAAKA,UAAUC,KAAf,MAEjB,EAAKC,MAAQ,CACTC,OAAQ,IALkB,E,sCASlC,SAAkBA,GACdC,KAAKC,SAAS,CAAEF,a,kCAGpB,YACIC,KAAKC,SAAS,CACVF,aAAcG,IAAgBC,WAAU,KAE5CD,IAAgBE,GAAG,aAAcJ,KAAKJ,Y,+PAG1C,WACIM,IAAgBG,eAAe,aAAcL,KAAKJ,a,oBAGtD,WACI,OACI,gBAAC,IAAD,CAAKU,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,UAAU,0BACtCV,KAAKF,MAAMC,OAAOY,KAAI,SAAAC,GAEnB,GAAKA,EAAIC,UAELD,IAAQE,IAAUC,KAEtB,OACI,gBAAC,IAAD,CAAKC,IAAKJ,EAAIK,MAAQL,EAAIM,MAAOR,UAAU,QACvC,gBAAC,IAAD,CACIS,GAAIP,EAAIQ,WAAaC,IAAO,MAE5BC,GAAIV,EAAIK,MAAQL,EAAIM,MACpBR,UAAS,wCACLE,EAAIQ,WAAa,eAAiB,iCAEtC,gBAAC,IAAKG,KAAN,CACIC,MAAO,CACHC,OAAQ,UAEZ,gBAAC,IAAD,CACIC,YAAY,EACZC,KAAMf,EAAIC,SACVH,UAAU,gCAGlB,gBAAC,IAAKkB,OAAN,CACIlB,UAAS,uCACLE,EAAIQ,WAAa,GAAK,4BAE1B,gBAAC,IAAD,CAAkBS,GAAIjB,EAAIkB,mB,8BA3D5BC,aAAbrC,EACMsC,MAAgB","file":"14.df594595481af5b1fd82.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport * as React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\n\nimport RouteController from \"../../utils/RouteController\";\nimport { AppRoute, AppRoutes } from \"../../utils/routes\";\n\ninterface IProps {}\ninterface IState {\n    routes: Array<AppRoute>;\n}\n\nexport default class Home extends React.Component<IProps, IState> {\n    public static readonly Route: string = \"/\";\n\n    public constructor(props: IProps) {\n        super(props);\n        this.setRoutes = this.setRoutes.bind(this);\n\n        this.state = {\n            routes: []\n        };\n    }\n\n    private setRoutes(routes: AppRoute[]) {\n        this.setState({ routes });\n    }\n\n    public async componentDidMount(): Promise<void> {\n        this.setState({\n            routes: await RouteController.getRoutes(false)\n        });\n        RouteController.on(\"refreshAll\", this.setRoutes);\n    }\n\n    public componentWillUnmount(): void {\n        RouteController.removeListener(\"refreshAll\", this.setRoutes);\n    }\n\n    public render(): React.ReactNode {\n        return (\n            <Row xs={1} sm={2} md={3} lg={4} className=\"justify-content-center\">\n                {this.state.routes.map(val => {\n                    //this means it shouldnt be displayed on the home screen\n                    if (!val.homeIcon) return;\n\n                    if (val === AppRoutes.home) return;\n\n                    return (\n                        <Col key={val.link || val.route} className=\"mb-1\">\n                            <Card\n                                as={val.cachedAuth ? Link : \"div\"}\n                                //@ts-expect-error //dont really know how to fix this so uhhhhhhh, this will do for now\n                                to={val.link || val.route}\n                                className={`text-decoration-none m-1 h-75 ${\n                                    val.cachedAuth ? \"text-primary\" : \"text-danger d-sm-flex d-none\"\n                                }`}>\n                                <Card.Body\n                                    style={{\n                                        height: \"245px\"\n                                    }}>\n                                    <FontAwesomeIcon\n                                        fixedWidth={true}\n                                        icon={val.homeIcon}\n                                        className=\"d-block w-100 h-100 m-auto\"\n                                    />\n                                </Card.Body>\n                                <Card.Footer\n                                    className={`text-center font-weight-bold ${\n                                        val.cachedAuth ? \"\" : \"text-danger font-italic\"\n                                    }`}>\n                                    <FormattedMessage id={val.name} />\n                                </Card.Footer>\n                            </Card>\n                        </Col>\n                    );\n                })}\n            </Row>\n        );\n    }\n}\n"],"sourceRoot":""}