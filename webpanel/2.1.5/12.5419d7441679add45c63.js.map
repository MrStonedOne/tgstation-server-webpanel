{"version":3,"sources":["webpack://tgstation-server-control-panel/./src/components/views/Instance/Edit/Byond.tsx","webpack://tgstation-server-control-panel/./src/contexts/InstanceEditContext.ts","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/InputGroup.js"],"names":["Byond","props","state","versions","errors","activeVersion","latestVersion","selectedVersion","loading","error","this","setState","prevState","Array","from","push","response","ByondClient","context","instance","id","code","StatusCode","payload","content","response2","version","addError","loadVersions","fetch","then","res","text","data","split","catch","e","InternalError","ErrorCode","jsError","Error","instancePermissionSet","byondRights","ByondRights","className","map","err","index","key","onClose","prev","newarr","undefined","onChange","target","value","disabled","name","defaultChecked","as","htmlFor","overlay","innerid","show","endsWith","ref","triggerHandler","substr","length","fixedWidth","icon","type","defaultValue","arr","join","variant","onClick","customFile","arrayBuffer","custom","label","accept","files","React","contextType","InstanceEditContext","InputGroupAppend","InputGroupPrepend","InputGroupText","Component","InputGroup","_ref","bsPrefix","size","_ref$as","displayName","InputGroupWithExtras","Text","Radio","Checkbox","Append","Prepend"],"mappings":"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","file":"12.5419d7441679add45c63.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { ChangeEvent } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport ByondClient from \"../../../../ApiClient/ByondClient\";\nimport { ByondRights } from \"../../../../ApiClient/generatedcode/_enums\";\nimport { ByondResponse } from \"../../../../ApiClient/generatedcode/schemas\";\nimport InternalError, { ErrorCode } from \"../../../../ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"../../../../ApiClient/models/InternalComms/InternalStatus\";\nimport { InstanceEditContext } from \"../../../../contexts/InstanceEditContext\";\nimport AccessDenied from \"../../../utils/AccessDenied\";\nimport ErrorAlert from \"../../../utils/ErrorAlert\";\nimport Loading from \"../../../utils/Loading\";\n\ninterface IProps {}\n\ninterface IState {\n    errors: Array<InternalError<ErrorCode> | undefined>;\n    versions: ByondResponse[];\n    activeVersion?: string | null;\n    latestVersion: string;\n    selectedVersion: string;\n    loading: boolean;\n    customFile?: File | null;\n}\n\nclass Byond extends React.Component<IProps, IState> {\n    public declare context: InstanceEditContext;\n    public constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            versions: [],\n            errors: [],\n            activeVersion: \"\",\n            latestVersion: \"\",\n            selectedVersion: \"\",\n            loading: true\n        };\n    }\n\n    private addError(error: InternalError<ErrorCode>): void {\n        this.setState(prevState => {\n            const errors = Array.from(prevState.errors);\n            errors.push(error);\n            return {\n                errors\n            };\n        });\n    }\n\n    private async loadVersions() {\n        const response = await ByondClient.listAllVersions(this.context.instance.id);\n        if (response.code === StatusCode.OK) {\n            this.setState({\n                versions: response.payload.content\n            });\n\n            const response2 = await ByondClient.getActiveVersion(this.context.instance.id);\n            if (response2.code === StatusCode.OK) {\n                this.setState({\n                    activeVersion: response2.payload.version\n                });\n            } else {\n                this.addError(response2.error);\n            }\n        } else {\n            this.addError(response.error);\n        }\n    }\n\n    public async componentDidMount(): Promise<void> {\n        await this.loadVersions();\n\n        fetch(\"https://secure.byond.com/download/version.txt\")\n            .then(res => res.text())\n            .then(data => data.split(\"\\n\"))\n            .then(versions => versions[0])\n            .then(version => {\n                this.setState({\n                    latestVersion: version,\n                    selectedVersion: version,\n                    loading: false\n                });\n            })\n            .catch(e => {\n                this.addError(new InternalError(ErrorCode.APP_FAIL, { jsError: Error(e) }));\n                this.setState({\n                    loading: false\n                });\n            });\n    }\n\n    public render(): React.ReactNode {\n        if (this.state.loading) {\n            return <Loading text=\"loading.instance\" />;\n        }\n\n        // noinspection JSBitwiseOperatorUsage\n        if (\n            !(\n                this.context.instancePermissionSet.byondRights & ByondRights.ListInstalled &&\n                this.context.instancePermissionSet.byondRights & ByondRights.ReadActive\n            )\n        ) {\n            return <AccessDenied />;\n        }\n\n        const tooltip = (innerid?: string) => {\n            if (!innerid) return <React.Fragment />;\n\n            return (\n                <Tooltip id={innerid}>\n                    <FormattedMessage id={innerid} />\n                </Tooltip>\n            );\n        };\n\n        return (\n            <div className=\"text-center\">\n                <h1>\n                    <FormattedMessage id=\"view.instance.hosting.byond\" />\n                </h1>\n                {this.state.errors.map((err, index) => {\n                    if (!err) return;\n                    return (\n                        <ErrorAlert\n                            key={index}\n                            error={err}\n                            onClose={() =>\n                                this.setState(prev => {\n                                    const newarr = Array.from(prev.errors);\n                                    newarr[index] = undefined;\n                                    return {\n                                        errors: newarr\n                                    };\n                                })\n                            }\n                        />\n                    );\n                })}\n                <div\n                    onChange={async (e: ChangeEvent<HTMLInputElement>) => {\n                        this.setState({\n                            loading: true\n                        });\n                        const response = await ByondClient.switchActive(\n                            this.context.instance.id,\n                            e.target.value\n                        );\n                        if (response.code === StatusCode.OK) {\n                            await this.loadVersions();\n                        } else {\n                            this.addError(response.error);\n                        }\n                        this.setState({\n                            loading: false\n                        });\n                    }}>\n                    {this.state.versions.map(version => {\n                        // noinspection JSBitwiseOperatorUsage\n                        return (\n                            <InputGroup\n                                className=\"w-md-25 mb-1 mx-auto d-flex\"\n                                key={version.version}>\n                                <InputGroup.Prepend>\n                                    <InputGroup.Radio\n                                        disabled={\n                                            !(\n                                                this.context.instancePermissionSet.byondRights &\n                                                ByondRights.InstallOfficialOrChangeActiveVersion\n                                            )\n                                        }\n                                        name=\"byond\"\n                                        id={version.version!}\n                                        value={version.version!}\n                                        defaultChecked={\n                                            version.version! === this.state.activeVersion\n                                        }\n                                    />\n                                </InputGroup.Prepend>\n                                <InputGroup.Append\n                                    className=\"flex-grow-1 m-0\"\n                                    as=\"label\"\n                                    htmlFor={version.version!}>\n                                    <OverlayTrigger\n                                        overlay={tooltip(\"view.instance.hosting.byond.custom\")}\n                                        show={!version.version!.endsWith(\".0\") ? undefined : false}>\n                                        {({ ref, ...triggerHandler }) => (\n                                            <InputGroup.Text className=\"w-100\" {...triggerHandler}>\n                                                {version.version!.endsWith(\".0\")\n                                                    ? version.version!.substr(\n                                                          0,\n                                                          version.version!.length - 2\n                                                      )\n                                                    : version.version}\n                                                {!version.version!.endsWith(\".0\") ? (\n                                                    <div\n                                                        className={\"ml-auto\"}\n                                                        ref={ref as React.Ref<HTMLDivElement>}>\n                                                        <FontAwesomeIcon fixedWidth icon=\"info\" />\n                                                    </div>\n                                                ) : null}\n                                            </InputGroup.Text>\n                                        )}\n                                    </OverlayTrigger>\n                                </InputGroup.Append>\n                            </InputGroup>\n                        );\n                    })}\n                </div>\n                <hr />\n                <h4>\n                    <FormattedMessage id=\"view.instance.hosting.byond.add\" />\n                </h4>\n                <InputGroup className=\"w-md-50 w-lg-25 mb-3 mx-auto\">\n                    <FormControl\n                        type=\"number\"\n                        defaultValue={this.state.latestVersion.split(\".\")[0]}\n                        onChange={e => {\n                            this.setState(prev => {\n                                const arr = prev.selectedVersion.split(\".\");\n                                arr[0] = e.target.value;\n                                return {\n                                    selectedVersion: arr.join(\".\")\n                                };\n                            });\n                        }}\n                    />\n                    <InputGroup.Text className=\"rounded-0\">.</InputGroup.Text>\n                    <FormControl\n                        type=\"number\"\n                        defaultValue={this.state.latestVersion.split(\".\")[1]}\n                        onChange={e => {\n                            this.setState(prev => {\n                                const arr = prev.selectedVersion.split(\".\");\n                                arr[1] = e.target.value;\n                                return {\n                                    selectedVersion: arr.join(\".\")\n                                };\n                            });\n                        }}\n                    />\n                    <InputGroup.Append>\n                        <Button\n                            variant=\"success\"\n                            onClick={async () => {\n                                this.setState({\n                                    loading: true\n                                });\n                                const response = await ByondClient.switchActive(\n                                    this.context.instance.id,\n                                    this.state.selectedVersion,\n                                    this.state.customFile\n                                        ? await this.state.customFile.arrayBuffer()\n                                        : undefined\n                                );\n                                if (response.code === StatusCode.ERROR) {\n                                    this.addError(response.error);\n                                } else {\n                                    this.setState({\n                                        customFile: null\n                                    });\n                                    await this.loadVersions();\n                                }\n                                this.setState({\n                                    loading: false\n                                });\n                            }}>\n                            <FontAwesomeIcon icon=\"plus\" />\n                        </Button>\n                    </InputGroup.Append>\n                </InputGroup>\n                <Form>\n                    <Form.File\n                        custom\n                        id=\"test\"\n                        className=\"w-md-50 w-lg-25 text-left\"\n                        label={\n                            this.state.customFile ? (\n                                this.state.customFile.name\n                            ) : (\n                                <FormattedMessage id=\"view.instance.hosting.byond.upload\" />\n                            )\n                        }\n                        accept=\".zip\"\n                        onChange={(e: ChangeEvent<HTMLInputElement>) => {\n                            this.setState({\n                                customFile: e.target.files ? e.target.files[0] : null\n                            });\n                        }}\n                    />\n                </Form>\n            </div>\n        );\n    }\n}\nByond.contextType = InstanceEditContext;\nexport default Byond;\n","import React from \"react\";\n\nimport {\n    InstancePermissionSetResponse,\n    InstanceResponse,\n    ServerInformationResponse,\n    UserResponse\n} from \"../ApiClient/generatedcode/schemas\";\nimport InternalError from \"../ApiClient/models/InternalComms/InternalError\";\n\nexport type InstanceEditContext = {\n    deleteError: (error: InternalError) => void;\n    errors: Set<InternalError>;\n    reloadInstance: () => void;\n    instance: InstanceResponse;\n    user: UserResponse;\n    serverInfo: ServerInformationResponse;\n    instancePermissionSet: InstancePermissionSetResponse;\n};\n\n//same as InstanceEditContext except used for components which arent loading under instanceedit so we cant guarentee that instance wont be null\nexport type UnsafeInstanceEditContext = {\n    deleteError: (error: InternalError) => void;\n    errors: Set<InternalError>;\n    reloadInstance: () => void;\n    instance: InstanceResponse | null;\n    user: UserResponse;\n    serverInfo: ServerInformationResponse;\n    instancePermissionSet: InstancePermissionSetResponse | null;\n};\n\nexport const InstanceEditContext = React.createContext<InstanceEditContext>(\n    (undefined as unknown) as InstanceEditContext\n);\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nInputGroup.displayName = 'InputGroup';\n\nvar InputGroupWithExtras = _extends({}, InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox,\n  Append: InputGroupAppend,\n  Prepend: InputGroupPrepend\n});\n\nexport default InputGroupWithExtras;"],"sourceRoot":""}