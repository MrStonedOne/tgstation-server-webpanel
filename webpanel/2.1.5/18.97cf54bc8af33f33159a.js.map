{"version":3,"sources":["webpack:///./src/components/views/Info.tsx"],"names":["Info","props","state","response","ServerClient","getServerInfo","code","StatusCode","OK","this","setState","serverInfo","payload","error","className","onClose","undefined","id","VERSION","MODE","Fragment","fixedWidth","icon","windowsHost","faWindows","faLinux","version","apiVersion","dmApiVersion","minimumPasswordLength","instanceLimit","userLimit","userGroupLimit","Object","keys","oAuthProviderInfos","join","swarmServers","length","tagName","map","server","key","identifier","controller","address","text","React","Component"],"mappings":"ijDAoBqBA,E,0QACjB,WAAmBC,GAAe,a,4FAAA,UAC9B,cAAMA,IAEDC,MAAQ,GAHiB,E,iDAMlC,YACI,IAAMC,QAAiBC,IAAaC,gBAChCF,EAASG,OAASC,IAAWC,GAC7BC,KAAKC,SAAS,CACVC,WAAYR,EAASS,UAGzBH,KAAKC,SAAS,CACVG,MAAOV,EAASU,S,iPAK5B,WAAiC,aAC7B,OACI,yBAAKC,UAAU,eACX,kBAAC,IAAD,CACID,MAAOJ,KAAKP,MAAMW,MAClBE,QAAS,kBAAM,EAAKL,SAAS,CAAEG,WAAOG,OAG1C,4BACI,kBAAC,IAAD,CAAkBC,GAAG,sBAEzB,yBAAKH,UAAU,kBACX,4BACI,kBAAC,IAAD,CAAkBG,GAAG,sBADzB,UAEQC,IAFR,aAEoBC,IAFpB,OAMJ,6BAEA,4BACI,kBAAC,IAAD,CAAkBF,GAAG,sBAGvBR,KAAKP,MAAMW,MA+IT,KA9ICJ,KAAKP,MAAMS,WAGR,kBAAC,IAAMS,SAAP,KACI,yBAAKN,UAAU,kBACX,2BAAOA,UAAU,qBACb,+BACI,4BACI,4BACI,wBAAIA,UAAU,QACV,kBAAC,IAAD,CAAkBG,GAAG,wBAG7B,4BACI,4BACI,kBAAC,IAAD,CACII,YAAU,EACVC,KACIb,KAAKP,MAAMS,WAAWY,YAChBC,YACAC,eAM1B,4BACI,4BACI,wBAAIX,UAAU,QACV,kBAAC,IAAD,CAAkBG,GAAG,wBAG7B,4BACI,4BAAKR,KAAKP,MAAMS,WAAWe,WAGnC,4BACI,4BACI,wBAAIZ,UAAU,QACV,kBAAC,IAAD,CAAkBG,GAAG,+BAG7B,4BACI,4BAAKR,KAAKP,MAAMS,WAAWgB,cAGnC,4BACI,4BACI,wBAAIb,UAAU,QACV,kBAAC,IAAD,CAAkBG,GAAG,6BAG7B,4BACI,4BAAKR,KAAKP,MAAMS,WAAWiB,gBAGnC,4BACI,4BACI,wBAAId,UAAU,QACV,kBAAC,IAAD,CAAkBG,GAAG,4BAG7B,4BACI,4BACKR,KAAKP,MAAMS,WAAWkB,yBAInC,4BACI,4BACI,wBAAIf,UAAU,QACV,kBAAC,IAAD,CAAkBG,GAAG,8BAG7B,4BACI,4BAAKR,KAAKP,MAAMS,WAAWmB,iBAGnC,4BACI,4BACI,wBAAIhB,UAAU,QACV,kBAAC,IAAD,CAAkBG,GAAG,0BAG7B,4BACI,4BAAKR,KAAKP,MAAMS,WAAWoB,aAGnC,4BACI,4BACI,wBAAIjB,UAAU,QACV,kBAAC,IAAD,CAAkBG,GAAG,2BAG7B,4BACI,4BAAKR,KAAKP,MAAMS,WAAWqB,kBAGnC,4BACI,4BACI,wBAAIlB,UAAU,QACV,kBAAC,IAAD,CAAkBG,GAAG,sBAG7B,4BACI,4BACKgB,OAAOC,KACJzB,KAAKP,MAAMS,WAAWwB,oBAClB,IACNC,KAAK,YAO9B,UAAA3B,KAAKP,MAAMS,WAAW0B,oBAAtB,SAAoCC,OACjC,kBAAC,IAAMlB,SAAP,KACI,6BAEA,kBAAC,IAAD,CAAkBH,GAAG,kBAAkBsB,QAAQ,OAE9C9B,KAAKP,MAAMS,WAAW0B,aAAaG,KAAI,SAAAC,GACpC,OACI,wBACIC,IAAKD,EAAOE,WACZ7B,UACI2B,EAAOG,WACD,kCACA,kBAETH,EAAOE,WAPZ,KAO0BF,EAAOI,QAPjC,IAO2C,IACtCJ,EAAOG,WACJ,kBAAC,IAAD,CAAkB3B,GAAG,yBACrB,UAKpB,MA1IR,kBAAC,IAAD,CAAS6B,KAAK,uB,8BA9CJC,IAAMC","file":"18.97cf54bc8af33f33159a.js","sourcesContent":["import { faLinux } from \"@fortawesome/free-brands-svg-icons/faLinux\";\nimport { faWindows } from \"@fortawesome/free-brands-svg-icons/faWindows\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { Components } from \"../../ApiClient/generatedcode/_generated\";\nimport InternalError, { ErrorCode } from \"../../ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"../../ApiClient/models/InternalComms/InternalStatus\";\nimport ServerClient from \"../../ApiClient/ServerClient\";\nimport { MODE, VERSION } from \"../../definitions/constants\";\nimport ErrorAlert from \"../utils/ErrorAlert\";\nimport Loading from \"../utils/Loading\";\n\ninterface IProps {}\ninterface IState {\n    serverInfo?: Components.Schemas.ServerInformationResponse;\n    error?: InternalError<ErrorCode>;\n}\n\nexport default class Info extends React.Component<IProps, IState> {\n    public constructor(props: IProps) {\n        super(props);\n\n        this.state = {};\n    }\n\n    public async componentDidMount(): Promise<void> {\n        const response = await ServerClient.getServerInfo();\n        if (response.code === StatusCode.OK) {\n            this.setState({\n                serverInfo: response.payload\n            });\n        } else {\n            this.setState({\n                error: response.error\n            });\n        }\n    }\n\n    public render(): React.ReactNode {\n        return (\n            <div className=\"text-center\">\n                <ErrorAlert\n                    error={this.state.error}\n                    onClose={() => this.setState({ error: undefined })}\n                />\n\n                <h3>\n                    <FormattedMessage id=\"view.info.client\" />\n                </h3>\n                <div className=\"text-secondary\">\n                    <h4>\n                        <FormattedMessage id=\"view.info.version\" />\n                        {`${VERSION} (${MODE})`}\n                    </h4>\n                </div>\n\n                <hr />\n\n                <h3>\n                    <FormattedMessage id=\"view.info.server\" />\n                </h3>\n\n                {!this.state.error ? (\n                    !this.state.serverInfo ? (\n                        <Loading text=\"loading.info\" />\n                    ) : (\n                        <React.Fragment>\n                            <div className=\"text-secondary\">\n                                <table className=\"mx-auto text-left\">\n                                    <tbody>\n                                        <tr>\n                                            <td>\n                                                <h4 className=\"mr-3\">\n                                                    <FormattedMessage id=\"view.admin.hostos\" />\n                                                </h4>\n                                            </td>\n                                            <td>\n                                                <h4>\n                                                    <FontAwesomeIcon\n                                                        fixedWidth\n                                                        icon={\n                                                            this.state.serverInfo.windowsHost\n                                                                ? faWindows\n                                                                : faLinux\n                                                        }\n                                                    />\n                                                </h4>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <h4 className=\"mr-3\">\n                                                    <FormattedMessage id=\"view.info.version\" />\n                                                </h4>\n                                            </td>\n                                            <td>\n                                                <h4>{this.state.serverInfo.version}</h4>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <h4 className=\"mr-3\">\n                                                    <FormattedMessage id=\"view.info.httpapiversion\" />\n                                                </h4>\n                                            </td>\n                                            <td>\n                                                <h4>{this.state.serverInfo.apiVersion}</h4>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <h4 className=\"mr-3\">\n                                                    <FormattedMessage id=\"view.info.dmapiversion\" />\n                                                </h4>\n                                            </td>\n                                            <td>\n                                                <h4>{this.state.serverInfo.dmApiVersion}</h4>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <h4 className=\"mr-3\">\n                                                    <FormattedMessage id=\"view.info.minpassword\" />\n                                                </h4>\n                                            </td>\n                                            <td>\n                                                <h4>\n                                                    {this.state.serverInfo.minimumPasswordLength}\n                                                </h4>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <h4 className=\"mr-3\">\n                                                    <FormattedMessage id=\"view.info.instancelimit\" />\n                                                </h4>\n                                            </td>\n                                            <td>\n                                                <h4>{this.state.serverInfo.instanceLimit}</h4>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <h4 className=\"mr-3\">\n                                                    <FormattedMessage id=\"view.info.userlimit\" />\n                                                </h4>\n                                            </td>\n                                            <td>\n                                                <h4>{this.state.serverInfo.userLimit}</h4>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <h4 className=\"mr-3\">\n                                                    <FormattedMessage id=\"view.info.grouplimit\" />\n                                                </h4>\n                                            </td>\n                                            <td>\n                                                <h4>{this.state.serverInfo.userGroupLimit}</h4>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <h4 className=\"mr-3\">\n                                                    <FormattedMessage id=\"view.info.oauth\" />\n                                                </h4>\n                                            </td>\n                                            <td>\n                                                <h4>\n                                                    {Object.keys(\n                                                        this.state.serverInfo.oAuthProviderInfos ||\n                                                            {}\n                                                    ).join(\", \")}\n                                                </h4>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                            {this.state.serverInfo.swarmServers?.length ? (\n                                <React.Fragment>\n                                    <hr />\n\n                                    <FormattedMessage id=\"view.info.swarm\" tagName=\"h3\" />\n\n                                    {this.state.serverInfo.swarmServers.map(server => {\n                                        return (\n                                            <h4\n                                                key={server.identifier}\n                                                className={\n                                                    server.controller\n                                                        ? \"font-weight-bold text-secondary\"\n                                                        : \"text-secondary\"\n                                                }>\n                                                {server.identifier} ({server.address}){\" \"}\n                                                {server.controller ? (\n                                                    <FormattedMessage id=\"view.info.controller\" />\n                                                ) : null}\n                                            </h4>\n                                        );\n                                    })}\n                                </React.Fragment>\n                            ) : null}\n                        </React.Fragment>\n                    )\n                ) : null}\n            </div>\n        );\n    }\n}\n"],"sourceRoot":""}