"use strict";(self.webpackChunktgstation_server_control_panel=self.webpackChunktgstation_server_control_panel||[]).push([[207],{8425:function(e,t,r){r.d(t,{t:function(){return l}});var n=r(7294),a=r(5171),s=r.n(a),o=r(7961);function i(e){return n.createElement(s(),{src:e.obj,name:"JSON",theme:"tube",iconStyle:"triangle",collapsed:!0,displayDataTypes:!1})}function l(e){return o.ZP.showjson.value?n.createElement("div",{className:"text-left"},n.createElement(i,{obj:e.obj})):n.createElement(n.Fragment,null)}},207:function(e,t,r){r.r(t);var n=r(1436),a=r(7814),s=r(7294),o=r(5005),i=r(1555),l=r(4716),c=r(2318),d=r(5293),u=r(3489),m=r(4012),p=r(724),h=r.n(p),w=r(5977),v=r(1249),E=r(2480),f=r(8509),g=r(6846),y=r(3803),Z=r(5631),b=r(6942),R=r(4615),O=r(7428),C=r(6964),G=r(1320),j=r(3e3),k=r(8425),I=r(5855);function P(){return P=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},P.apply(this,arguments)}class A extends s.Component{constructor(e){super(e),this.loadNotes=this.loadNotes.bind(this),this.updateServer=this.updateServer.bind(this),this.state={versions:[],errors:[],loading:!0}}async componentDidMount(){await this.loadVersions(),this.setState({loading:!1})}componentWillUnmount(){this.state.timer&&window.clearInterval(this.state.timer)}addError(e){this.setState((t=>{const r=Array.from(t.errors);return r.push(e),{errors:r}}))}async loadVersions(){if(!(0,C.N3)((0,C.Zg)(this.context.user),f.oj.ChangeVersion))return;const e=await E.Z.getAdminInfo();switch(e.code){case y.G.ERROR:return this.addError(e.error);case y.G.OK:{const t=e.payload.trackedRepositoryUrl,r=/https?:\/\/(github\.com)\/(.*?)\/(.*)/.exec(t);if(!r)return this.addError(new g.ZP(g.jK.APP_FAIL,{jsError:Error(`Unknown repository url format: ${t}`)}));if("github.com"!==r[1])return void this.setState({versions:[{body:"Updates unavailable to non github repos",version:"Updates unavailable to non github repos",current:!0,old:!0}]});const n=await O.Z.getVersions({owner:r[2],repo:r[3],current:this.context.serverInfo.version,all:!!this.props.match.params.all});switch(console.log("Version info: ",n),n.code){case y.G.ERROR:return this.addError(n.error);case y.G.OK:this.setState({versions:n.payload})}}}}loadNotes(){for(const e of this.state.versions){if(e.version!==this.state.selectedOption)continue;const t=window.setInterval((()=>{this.setState((e=>void 0===e.secondsLeft||null===e.secondsLeft?e:1===e.secondsLeft?(window.clearInterval(e.timer),{timer:null,secondsLeft:null}):{secondsLeft:e.secondsLeft-1}))}),1e3);return void this.setState({selectedVersion:e,timer:t,secondsLeft:10})}}async uploadVersion(){const e=new Promise((e=>{const t=document.createElement("input");t.type="file",t.onchange=t=>{const r=t.target?.files;e(r?r[0]:null)},t.click()})),t=await e;if(!t)return;if(!t.name.toLowerCase().endsWith(".zip"))return void alert("Invalid zipfile!");const r=await t.arrayBuffer(),n=prompt("Enter the TGS version semver:");if(!n)return;const a=new v.SemVer(n),s=`${a.major}.${a.minor}.${a.patch}`;s==n?confirm(`JUST WHAT DO YOU THINK YOU'RE DOING!? This is your only and final warning: Uploading a TGS Version .zip that is improperly formatted or that does not match the version you just entered (${s}) can brick your installation! Think carefully before pressing OK to continue.`)&&await this.serverUpdated(E.Z.uploadVersion(s,r)):alert("Invalid semver!")}async updateServer(){if(!this.state.selectedOption)return console.error("Attempted to update server to a no version"),void this.setState({selectedVersion:void 0});await this.serverUpdated(E.Z.updateServer(this.state.selectedOption))}async serverUpdated(e){const t=await e;switch(t.code){case y.G.ERROR:return void this.addError(t.error);case y.G.OK:}Z.Z.autoLogin=!1,window.setInterval((async()=>{if((await b.Z.getCurrentUser(!0)).code===y.G.ERROR)window.location.reload()}),2e3),this.setState({updating:!0})}render(){if(this.state.updating)return s.createElement(I.Z,{text:"loading.updating"});if(this.state.loading)return s.createElement(I.Z,{text:"loading.version"});const e=e=>{this.setState({selectedOption:e.target.value})},t=(0,C.Zg)(this.context.user),r=(0,C.N3)(t,f.oj.ChangeVersion),p=(0,C.N3)(t,f.oj.UploadVersion),w=this.state.selectedVersion?.body.replaceAll("\r","").replaceAll("\n","\n\n"),v="number"==typeof this.state.secondsLeft;return s.createElement(s.Fragment,null,s.createElement(k.t,{obj:this.state.versions}),s.createElement("div",{className:"text-center"},this.state.errors.map(((e,t)=>{if(e)return s.createElement(j.ZP,{key:t,error:e,onClose:()=>this.setState((e=>{const r=Array.from(e.errors);return r[t]=void 0,{errors:r}}))})}))),this.state.selectedVersion?s.createElement(s.Fragment,null,s.createElement("div",{className:"text-center"},s.createElement(o.Z,{className:"mr-3",onClick:()=>this.setState({selectedVersion:void 0})},s.createElement(m.Z,{id:"generic.goback"})),s.createElement(d.Z,{overlay:s.createElement(u.Z,{id:"timing-tooltip"},s.createElement(m.Z,{id:"view.admin.update.wait"})),show:v},s.createElement(o.Z,{onClick:this.updateServer,disabled:v},s.createElement(m.Z,{id:"generic.continue"}),v?` [${this.state.secondsLeft}]`:"")),s.createElement("h3",null,s.createElement(m.Z,{id:"view.admin.update.releasenotes"})),s.createElement("hr",null)),s.createElement(h(),null,w)):s.createElement("div",{className:"text-center"},s.createElement("h3",{className:"mb-4"},s.createElement(m.Z,{id:"view.admin.update.selectversion"})),r?s.createElement(i.Z,{xs:8,md:6,className:"mx-auto"},this.state.versions.map(((t,r)=>s.createElement(c.Z,{className:"mb-3",key:t.version},s.createElement(c.Z.Prepend,null,s.createElement(c.Z.Radio,{id:t.version,name:"version",disabled:t.current,value:t.version,checked:this.state.selectedOption===t.version,onChange:e})),s.createElement(l.Z,{as:"label",htmlFor:t.version,disabled:!0},t.version,t.current?s.createElement(m.Z,{id:"view.admin.update.current"}):"",0==r?s.createElement(m.Z,{id:"view.admin.update.latest"}):"")))),s.createElement(o.Z,{variant:"link",onClick:()=>{this.props.history.push((G.$w.admin_update.link??G.$w.admin_update.route)+"all/",{reload:!0})},disabled:!!this.props.match.params.all},s.createElement(m.Z,{id:"view.admin.update.showall"})),s.createElement("br",null),s.createElement(o.Z,{onClick:this.loadNotes,disabled:!this.state.selectedOption},s.createElement(m.Z,{id:"generic.continue"}))):s.createElement("h4",null,s.createElement(m.Z,{id:"view.admin.update.selectversion.deny"})),s.createElement("br",null),s.createElement(d.Z,{overlay:s.createElement(u.Z,{id:"create-instance-tooltip"},s.createElement(m.Z,{id:"view.admin.update.upload.deny"})),show:!p&&void 0},(({ref:e,...t})=>s.createElement(o.Z,P({ref:e,className:"mx-1",variant:"success",onClick:()=>{this.uploadVersion()},disabled:!p},t),s.createElement("div",null,s.createElement(a.G,{className:"mr-2",icon:n.cf$}),s.createElement(m.Z,{id:"view.admin.update.upload"})))))))}}A.contextType=R.f,t.default=(0,w.EN)(A)},7428:function(e,t,r){var n=r(7162),a=r(7347),s=r(2638),o=r(2527),i=r(6846),l=r(3803),c=r(7961),d=r(6755);async function u(e,t,r){const n=e.endpoint.merge(t,r);return c.ZP.githubtoken.value&&(n.headers.authorization=`token ${c.ZP.githubtoken.value}`),e(n)}async function m(){return c.ZP.githubtoken.value?{type:"token",tokenType:"pat",token:c.ZP.githubtoken.value}:{type:"unauthenticated"}}const p=()=>Object.assign(m.bind(null),{hook:u.bind(null)}),h=new class extends o.TypedEmitter{constructor(){super(),this.apiClient=void 0;const e=s.v.plugin(n.X,a.O);this.apiClient=new e({authStrategy:p,userAgent:"tgstation-server-control-panel/"+d.q4,baseUrl:"https://api.github.com",throttle:{onRateLimit:(e,t)=>(console.warn(`Request quota exhausted for request ${t.method} ${t.url}`),0===t.request.retryCount&&(console.log(`Retrying after ${e} seconds!`),!0)),onAbuseLimit:(e,t)=>{console.warn(`Abuse detected for request ${t.method} ${t.url}`)}}})}async getVersions({owner:e,repo:t,current:r,all:n}){let a,s=0;try{a=await this.apiClient.paginate(this.apiClient.repos.listReleases,{owner:e,repo:t},((e,t)=>e.data.reduce(((e,a)=>{const o=/tgstation-server-v([\d.]+)/.exec(a.name??"");if(!o)return e;if("4"!==o[1][0]&&"5"!==o[1][0])return e;const i=o[1];let l=!1;if(i<=r){if(s>=3&&!n)return t(),e;s++,l=!0}return e.push({version:i,body:a.body??"",current:i===r,old:l}),e}),[])))}catch(e){return new l.Z({code:l.G.ERROR,error:new i.ZP(i.jK.GITHUB_FAIL,{jsError:e})})}return new l.Z({code:l.G.OK,payload:a})}transformPR(e){return{number:e.number,title:e.title,author:e.user?.login??"ghost",state:e.merged_at?"merged":e.state,link:e.html_url,head:e.head.sha,tail:e.base.sha,testmergelabel:e.labels.some((e=>e.name?.toLowerCase().includes("testmerge")||e.name?.toLowerCase().includes("test merge")))}}async getPRs({owner:e,repo:t,wantedPRs:r}){let n=[];try{n=(await this.apiClient.paginate(this.apiClient.pulls.list,{owner:e,repo:t,state:"open"})).map(this.transformPR);for(const a of r??[])if(!n.find((e=>e.number==a))){const r=(await this.apiClient.pulls.get({owner:e,repo:t,pull_number:a})).data;n.push(this.transformPR(r))}}catch(e){return console.error(e),new l.Z({code:l.G.ERROR,error:new i.ZP(i.jK.GITHUB_FAIL,{jsError:e})})}return new l.Z({code:l.G.OK,payload:n})}async getPRCommits({owner:e,repo:t,pr:r,wantedCommit:n}){let a,s=[];try{if(s=await this.apiClient.paginate(this.apiClient.pulls.listCommits,{owner:e,repo:t,pull_number:r.number,per_page:100},(({data:e})=>e.map((e=>({name:e.commit.message.split("\n")[0],sha:e.sha,url:e.html_url}))))),s.reverse(),n&&!s.find((e=>e.sha===n))){const r=(await this.apiClient.repos.getCommit({owner:e,repo:t,ref:n})).data;a={name:r.commit.message.split("\n")[0],sha:r.sha,url:r.html_url}}}catch(e){return console.error(e),new l.Z({code:l.G.ERROR,error:new i.ZP(i.jK.GITHUB_FAIL,{jsError:e})})}return new l.Z({code:l.G.OK,payload:[s,a]})}async getFile(e,t,r){try{const{data:n}=await this.apiClient.repos.getContent({mediaType:{format:"base64"},owner:e,repo:t,path:r});if(Array.isArray(n))return new l.Z({code:l.G.ERROR,error:new i.ZP(i.jK.GITHUB_FAIL,{jsError:new Error(`${r} was a directory!`)})});if("file"!==n.type)return new l.Z({code:l.G.ERROR,error:new i.ZP(i.jK.GITHUB_FAIL,{jsError:new Error(`${r} has type ${n.type}!`)})});const a=n.content;return new l.Z({code:l.G.OK,payload:a})}catch(e){return console.error(e),new l.Z({code:l.G.ERROR,error:new i.ZP(i.jK.GITHUB_FAIL,{jsError:e})})}}async getDirectoryContents(e,t,r){try{const{data:n}=await this.apiClient.repos.getContent({owner:e,repo:t,path:r});if(!Array.isArray(n))return new l.Z({code:l.G.ERROR,error:new i.ZP(i.jK.GITHUB_FAIL,{jsError:new Error(`${r} was not a directory!`)})});const a=[];return n.forEach((e=>a.push({path:e.path,isDirectory:"dir"==e.type}))),new l.Z({code:l.G.OK,payload:a})}catch(e){return console.error(e),new l.Z({code:l.G.ERROR,error:new i.ZP(i.jK.GITHUB_FAIL,{jsError:e})})}}};t.Z=h}}]);
//# sourceMappingURL=207.63dceced324c9baae177.bundle.js.map