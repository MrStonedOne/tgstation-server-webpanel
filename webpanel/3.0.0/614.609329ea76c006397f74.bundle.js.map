{"version":3,"file":"614.609329ea76c006397f74.bundle.js","mappings":"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","sources":["webpack://tgstation-server-control-panel/./src/components/utils/JsonViewer.tsx","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Tabs.js","webpack://tgstation-server-control-panel/./src/utils/globalObjects.ts","webpack://tgstation-server-control-panel/./src/components/views/User/Edit.tsx","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Badge.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/InputGroup.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Row.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Tab.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabContainer.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabContent.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabPane.js"],"sourcesContent":["import React from \"react\";\nimport ReactJson from \"react-json-view\";\n\nimport configOptions from \"../../ApiClient/util/config\";\n\nexport default function JsonViewer(props: { obj: unknown }): JSX.Element {\n    return (\n        <ReactJson\n            src={props.obj as Record<string, unknown>}\n            name={\"JSON\"}\n            theme=\"tube\"\n            iconStyle=\"triangle\"\n            collapsed\n            displayDataTypes={false}\n        />\n    );\n}\n\nexport function DebugJsonViewer(props: { obj: unknown }): JSX.Element {\n    if (!configOptions.showjson.value) {\n        return <></>;\n    }\n    return (\n        <div className=\"text-left\">\n            <JsonViewer obj={props.obj} />\n        </div>\n    );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"id\", \"onSelect\", \"transition\", \"mountOnEnter\", \"unmountOnExit\", \"children\", \"activeKey\"];\nimport React from 'react';\nimport requiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport { useUncontrolled } from 'uncontrollable';\nimport Nav from './Nav';\nimport NavLink from './NavLink';\nimport NavItem from './NavItem';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\nimport { forEach, map } from './ElementChildren';\nvar defaultProps = {\n  variant: 'tabs',\n  mountOnEnter: false,\n  unmountOnExit: false\n};\n\nfunction getDefaultActiveKey(children) {\n  var defaultActiveKey;\n  forEach(children, function (child) {\n    if (defaultActiveKey == null) {\n      defaultActiveKey = child.props.eventKey;\n    }\n  });\n  return defaultActiveKey;\n}\n\nfunction renderTab(child) {\n  var _child$props = child.props,\n      title = _child$props.title,\n      eventKey = _child$props.eventKey,\n      disabled = _child$props.disabled,\n      tabClassName = _child$props.tabClassName,\n      id = _child$props.id;\n\n  if (title == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(NavItem, {\n    as: NavLink,\n    eventKey: eventKey,\n    disabled: disabled,\n    id: id,\n    className: tabClassName\n  }, title);\n}\n\nvar Tabs = function Tabs(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      onSelect = _useUncontrolled.onSelect,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children,\n      _useUncontrolled$acti = _useUncontrolled.activeKey,\n      activeKey = _useUncontrolled$acti === void 0 ? getDefaultActiveKey(children) : _useUncontrolled$acti,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n\n  return /*#__PURE__*/React.createElement(TabContainer, {\n    id: id,\n    activeKey: activeKey,\n    onSelect: onSelect,\n    transition: transition,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, /*#__PURE__*/React.createElement(Nav, _extends({}, controlledProps, {\n    role: \"tablist\",\n    as: \"nav\"\n  }), map(children, renderTab)), /*#__PURE__*/React.createElement(TabContent, null, map(children, function (child) {\n    var childProps = _extends({}, child.props);\n\n    delete childProps.title;\n    delete childProps.disabled;\n    delete childProps.tabClassName;\n    return /*#__PURE__*/React.createElement(TabPane, childProps);\n  })));\n};\n\nTabs.defaultProps = defaultProps;\nTabs.displayName = 'Tabs';\nexport default Tabs;","//this should be a proper data store thing eventually but it will do 4 now\nimport Translation from \"../translations/Translation\";\n\nexport interface GlobalObjects {\n    translation?: Translation;\n    setupMode?: boolean;\n}\n\nexport const GlobalObjects: GlobalObjects = {};\n","import { faPlus } from \"@fortawesome/free-solid-svg-icons/faPlus\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons/faTrash\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { FormEvent } from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Row from \"react-bootstrap/Row\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport { FormattedMessage, FormattedRelativeTime } from \"react-intl\";\nimport { RouteComponentProps, withRouter } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n    AdministrationRights,\n    InstanceManagerRights,\n    OAuthConnection,\n    OAuthProvider,\n    PermissionSet,\n    UserGroup,\n    UserGroupResponse,\n    UserResponse\n} from \"../../../ApiClient/generatedcode/generated\";\nimport InternalError, { ErrorCode } from \"../../../ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"../../../ApiClient/models/InternalComms/InternalStatus\";\nimport UserClient from \"../../../ApiClient/UserClient\";\nimport UserGroupClient from \"../../../ApiClient/UserGroupClient\";\nimport { GeneralContext } from \"../../../contexts/GeneralContext\";\nimport { GlobalObjects } from \"../../../utils/globalObjects\";\nimport { resolvePermissionSet } from \"../../../utils/misc\";\nimport { AppRoutes, RouteData } from \"../../../utils/routes\";\nimport ErrorAlert from \"../../utils/ErrorAlert\";\nimport { DebugJsonViewer } from \"../../utils/JsonViewer\";\nimport Loading from \"../../utils/Loading\";\n\ninterface IProps extends RouteComponentProps<{ id: string; tab?: string }> {}\n\ninterface IState {\n    errors: Array<InternalError<ErrorCode> | undefined>;\n    user?: UserResponse;\n    newOAuthConnections: OAuthConnection[];\n    loading: boolean;\n    saving: boolean;\n    permsadmin: { [key: string]: Permission };\n    permsinstance: { [key: string]: Permission };\n    tab: string;\n    groups: UserGroupResponse[];\n    createGroupName: string;\n}\n\ninterface Permission {\n    readonly bitflag: number;\n    readonly currentVal: boolean;\n}\n\nclass UserEdit extends React.Component<IProps, IState> {\n    public declare context: GeneralContext;\n    public constructor(props: IProps, context: GeneralContext) {\n        super(props);\n\n        this.createGroup = this.createGroup.bind(this);\n        this.changeGroup = this.changeGroup.bind(this);\n\n        if (!context.user) {\n            throw Error(\"UserEdit: this.context.user is null!\");\n        }\n\n        this.state = {\n            errors: [],\n            loading: true,\n            saving: false,\n            permsadmin: {},\n            permsinstance: {},\n            tab: props.match.params.tab ?? \"info\",\n            groups: context.user.group ? [Object.assign({ users: [] }, context.user.group)] : [],\n            createGroupName: \"\",\n            newOAuthConnections: []\n        };\n\n        RouteData.selecteduserid = parseInt(props.match.params.id);\n        RouteData.selectedusertab = props.match.params.tab;\n    }\n\n    private get canEdit() {\n        return !!(\n            resolvePermissionSet(this.context.user).administrationRights &\n            AdministrationRights.WriteUsers\n        );\n    }\n\n    private get canRead() {\n        return !!(\n            resolvePermissionSet(this.context.user).administrationRights &\n            AdministrationRights.ReadUsers\n        );\n    }\n\n    private get canEditOwnPassword() {\n        const userid = parseInt(this.props.match.params.id);\n        return (\n            !!(\n                resolvePermissionSet(this.context.user).administrationRights &\n                AdministrationRights.EditOwnPassword\n            ) && this.context.user.id === userid\n        );\n    }\n\n    private get canEditOwnOAuth() {\n        const userid = parseInt(this.props.match.params.id);\n        return (\n            !!(\n                resolvePermissionSet(this.context.user).administrationRights &\n                AdministrationRights.EditOwnOAuthConnections\n            ) && this.context.user.id === userid\n        );\n    }\n\n    public componentDidUpdate(prevProps: Readonly<IProps>) {\n        if (prevProps.match.params.tab !== this.props.match.params.tab) {\n            this.setState({\n                tab: this.props.match.params.tab ?? \"info\"\n            });\n        }\n    }\n\n    public async componentDidMount(): Promise<void> {\n        const userid = parseInt(this.props.match.params.id);\n        const response = await UserClient.getUser(userid);\n        switch (response.code) {\n            case StatusCode.ERROR: {\n                this.addError(response.error);\n                break;\n            }\n            case StatusCode.OK: {\n                this.loadUser(response.payload);\n                break;\n            }\n        }\n\n        await this.loadGroups();\n\n        this.setState({\n            loading: false\n        });\n    }\n\n    private async loadGroups() {\n        if (!this.canRead) return;\n\n        const groups1 = await UserGroupClient.listGroups({ page: 1, pageSize: 100 });\n        if (groups1.code === StatusCode.OK) {\n            const groups = [...groups1.payload.content];\n            for (let i = 2; i <= groups1.payload.totalPages; i++) {\n                const groups2 = await UserGroupClient.listGroups({ page: i, pageSize: 100 });\n                if (groups2.code === StatusCode.ERROR) {\n                    this.addError(groups2.error);\n                    return;\n                } else {\n                    groups.push(...groups2.payload.content);\n                }\n            }\n            this.setState({\n                groups: groups\n            });\n        } else {\n            this.addError(groups1.error);\n        }\n    }\n\n    private loadUser(user: UserResponse) {\n        this.setState({\n            user,\n            newOAuthConnections: user.oAuthConnections ? Array.from(user.oAuthConnections) : []\n        });\n        this.loadEnums();\n    }\n\n    private loadEnums(): void {\n        // noinspection DuplicatedCode\n        Object.entries(AdministrationRights).forEach(([k, v]) => {\n            /* enums are objects that are reverse mapped, for example, an enum with a = 1 and b = 2 would look like this:\n             * {\n             *   \"a\": 1,\n             *   \"b\": 2,\n             *   1: \"a\",\n             *   2: \"b\"\n             * }\n             * so we need to drop everything that doesnt resolve to a string because otherwise we end up with twice the values\n             */\n            if (!isNaN(parseInt(k))) return;\n\n            const key = k.toLowerCase();\n            const val = v as number;\n\n            //we dont care about nothing\n            if (key == \"none\") return;\n\n            const currentVal = !!(\n                resolvePermissionSet(this.state.user!).administrationRights & val\n            );\n            this.setState(prevState => {\n                return {\n                    permsadmin: {\n                        ...prevState.permsadmin,\n                        [key]: {\n                            currentVal: currentVal,\n                            bitflag: val\n                        }\n                    }\n                };\n            });\n        });\n        // noinspection DuplicatedCode\n        Object.entries(InstanceManagerRights).forEach(([k, v]) => {\n            if (!isNaN(parseInt(k))) return;\n\n            const key = k.toLowerCase();\n            const val = v as number;\n\n            //we dont care about nothing\n            if (key == \"none\") return;\n\n            const currentVal = !!(\n                resolvePermissionSet(this.state.user!).instanceManagerRights & val\n            );\n            this.setState(prevState => {\n                return {\n                    permsinstance: {\n                        ...prevState.permsinstance,\n                        [key]: {\n                            currentVal: currentVal,\n                            bitflag: val\n                        }\n                    }\n                };\n            });\n        });\n    }\n\n    private addError(error: InternalError<ErrorCode>): void {\n        this.setState(prevState => {\n            const errors = Array.from(prevState.errors);\n            errors.push(error);\n            return {\n                errors\n            };\n        });\n    }\n\n    public render(): React.ReactNode {\n        if (this.state.loading) {\n            return <Loading text=\"loading.user.load\" />;\n        }\n        if (this.state.saving) {\n            return <Loading text=\"loading.user.save\" />;\n        }\n\n        // noinspection DuplicatedCode\n        const changetabs = (newkey: string | null) => {\n            if (!newkey) return;\n\n            RouteData.selectedusertab = newkey;\n            if (!GlobalObjects.setupMode) {\n                this.props.history.push(AppRoutes.useredit.link ?? AppRoutes.useredit.route);\n            }\n            this.setState({\n                tab: newkey\n            });\n        };\n\n        return (\n            <div className=\"text-center\">\n                <DebugJsonViewer obj={this.state.user} />\n                {this.state.errors.map((err, index) => {\n                    if (!err) return;\n                    return (\n                        <ErrorAlert\n                            key={index}\n                            error={err}\n                            onClose={() =>\n                                this.setState(prev => {\n                                    const newarr = Array.from(prev.errors);\n                                    newarr[index] = undefined;\n                                    return {\n                                        errors: newarr\n                                    };\n                                })\n                            }\n                        />\n                    );\n                })}\n                {this.state.user ? (\n                    <React.Fragment>\n                        {!this.canEdit ? (\n                            <Alert className=\"clearfix\" variant=\"error\">\n                                <FormattedMessage id=\"view.user.edit.cantedit\" />\n                            </Alert>\n                        ) : (\n                            \"\"\n                        )}\n                        {this.state.user.systemIdentifier ? (\n                            <Badge variant=\"primary\" className=\"mx-1\">\n                                <FormattedMessage id=\"generic.system.short\" />\n                            </Badge>\n                        ) : (\n                            <Badge variant=\"primary\" className=\"mx-1\">\n                                <FormattedMessage id=\"generic.tgs\" />\n                            </Badge>\n                        )}\n                        {this.state.user.enabled ? (\n                            <Badge variant=\"success\" className=\"mx-1\">\n                                <FormattedMessage id=\"generic.enabled\" />\n                            </Badge>\n                        ) : (\n                            <Badge variant=\"danger\" className=\"mx-1\">\n                                <FormattedMessage id=\"generic.disabled\" />\n                            </Badge>\n                        )}\n                        {this.state.user.group ? (\n                            <Badge variant=\"warning\" className=\"mx-1\">\n                                <FormattedMessage id=\"generic.grouped\" />\n                            </Badge>\n                        ) : null}\n                        <h3 className=\"text-capitalize\">{this.state.user.name}</h3>\n                        <Button as={Link} to={AppRoutes.userlist.link ?? AppRoutes.userlist.route}>\n                            <FormattedMessage id=\"generic.goback\" />\n                        </Button>\n                        <Tabs\n                            activeKey={this.state.tab}\n                            onSelect={changetabs}\n                            id=\"test\"\n                            className=\"justify-content-center mb-3 mt-4 flex-column flex-md-row\">\n                            <Tab eventKey=\"info\" title={<FormattedMessage id=\"generic.info\" />}>\n                                <Col lg={5} className=\"text-center text-md-left mx-auto\">\n                                    <Row xs={1} md={2}>\n                                        <Col>\n                                            <h5 className=\"m-0\">\n                                                <FormattedMessage id=\"generic.userid\" />\n                                            </h5>\n                                        </Col>\n                                        <Col className=\"text-capitalize mb-2\">\n                                            {this.state.user.id}\n                                        </Col>\n                                    </Row>\n                                    {this.state.user.systemIdentifier ? (\n                                        <Row xs={1} md={2}>\n                                            <Col>\n                                                <h5 className=\"m-0\">\n                                                    <FormattedMessage id=\"generic.systemidentifier\" />\n                                                </h5>\n                                            </Col>\n                                            <Col className=\"mb-2 text-sm-break\">\n                                                {this.state.user.systemIdentifier}\n                                            </Col>\n                                        </Row>\n                                    ) : (\n                                        \"\"\n                                    )}\n                                    <Row xs={1} md={2}>\n                                        <Col>\n                                            <h5 className=\"m-0\">\n                                                <FormattedMessage id=\"generic.enabled\" />\n                                            </h5>\n                                        </Col>\n                                        <Col className=\"text-capitalize mb-2\">\n                                            {this.state.user.enabled.toString()}\n                                        </Col>\n                                    </Row>\n                                    <Row xs={1} md={2}>\n                                        <Col>\n                                            <h5 className=\"m-0\">\n                                                <FormattedMessage id=\"generic.created\" />\n                                            </h5>\n                                        </Col>\n                                        <OverlayTrigger\n                                            overlay={\n                                                <Tooltip id={`${this.state.user.name}-tooltip`}>\n                                                    {new Date(\n                                                        this.state.user.createdAt\n                                                    ).toLocaleString()}\n                                                </Tooltip>\n                                            }>\n                                            {({ ref, ...triggerHandler }) => (\n                                                <Col\n                                                    className=\"text-capitalize mb-2\"\n                                                    {...triggerHandler}>\n                                                    <span ref={ref as React.Ref<HTMLSpanElement>}>\n                                                        <FormattedRelativeTime\n                                                            value={\n                                                                (new Date(\n                                                                    this.state.user!.createdAt\n                                                                ).getTime() -\n                                                                    Date.now()) /\n                                                                1000\n                                                            }\n                                                            numeric=\"auto\"\n                                                            updateIntervalInSeconds={1}\n                                                        />\n                                                    </span>\n                                                </Col>\n                                            )}\n                                        </OverlayTrigger>\n                                    </Row>\n                                    <Row xs={1} md={2}>\n                                        <Col>\n                                            <h5 className=\"m-0\">\n                                                <FormattedMessage id=\"generic.createdby\" />\n                                            </h5>\n                                        </Col>\n                                        <OverlayTrigger\n                                            overlay={\n                                                <Tooltip\n                                                    id={`${this.state.user.name}-tooltip-createdby`}>\n                                                    <FormattedMessage id=\"generic.userid\" />\n                                                    {this.state.user.createdBy.id}\n                                                </Tooltip>\n                                            }>\n                                            {({ ref, ...triggerHandler }) => (\n                                                <Col\n                                                    className=\"text-capitalize mb-2\"\n                                                    {...triggerHandler}>\n                                                    <span ref={ref as React.Ref<HTMLSpanElement>}>\n                                                        {this.state.user!.createdBy.name}\n                                                    </span>\n                                                </Col>\n                                            )}\n                                        </OverlayTrigger>\n                                    </Row>\n                                    <div className=\"text-center mt-3\">\n                                        {this.canEdit || this.canEditOwnPassword ? (\n                                            <Button\n                                                className=\"mr-2\"\n                                                as={Link}\n                                                to={\n                                                    (AppRoutes.passwd.link ??\n                                                        AppRoutes.passwd.route) +\n                                                    this.state.user.id.toString()\n                                                }>\n                                                <FormattedMessage id=\"routes.passwd\" />\n                                            </Button>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                        {this.canEdit ? (\n                                            <Button\n                                                variant={\n                                                    this.state.user.enabled ? \"danger\" : \"success\"\n                                                }\n                                                onClick={async () => {\n                                                    this.setState({\n                                                        saving: true\n                                                    });\n\n                                                    const response = await UserClient.editUser({\n                                                        enabled: !this.state.user!.enabled,\n                                                        id: this.state.user!.id\n                                                    });\n                                                    if (response.code == StatusCode.OK) {\n                                                        this.loadUser(response.payload);\n                                                    } else {\n                                                        this.addError(response.error);\n                                                    }\n\n                                                    this.setState({\n                                                        saving: false\n                                                    });\n                                                }}>\n                                                <FormattedMessage\n                                                    id={\n                                                        this.state.user.enabled\n                                                            ? \"generic.disable\"\n                                                            : \"generic.enable\"\n                                                    }\n                                                />\n                                            </Button>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                    </div>\n                                </Col>\n                            </Tab>\n                            <Tab\n                                eventKey=\"adminperms\"\n                                title={<FormattedMessage id=\"perms.admin\" />}>\n                                {this.renderPerms(\"permsadmin\", \"admin\")}\n                            </Tab>\n                            <Tab\n                                eventKey=\"instanceperms\"\n                                title={<FormattedMessage id=\"perms.instance\" />}>\n                                {this.renderPerms(\"permsinstance\", \"instance\")}\n                            </Tab>\n                            <Tab eventKey=\"group\" title={<FormattedMessage id=\"perms.group\" />}>\n                                {this.renderGroups()}\n                            </Tab>\n                            {this.renderOAuth()}\n                        </Tabs>\n                    </React.Fragment>\n                ) : (\n                    \"\"\n                )}\n            </div>\n        );\n    }\n\n    private renderOAuth(): React.ReactNode {\n        const oAuthProviderInfos = this.context.serverInfo.oAuthProviderInfos;\n        const currentOAuthConnections =\n            this.state.newOAuthConnections ?? this.state.user?.oAuthConnections;\n        if (\n            this.state.user?.name.toLowerCase() === \"admin\" || // admin user can't have OAuthConnections\n            currentOAuthConnections == null ||\n            !oAuthProviderInfos ||\n            !Object.keys(oAuthProviderInfos).length\n        )\n            return null;\n\n        const save = async () => {\n            this.setState({\n                saving: true\n            });\n\n            if (!this.state.user) {\n                this.addError(\n                    new InternalError(ErrorCode.APP_FAIL, {\n                        jsError: Error(\"this.state.user is null in user edit save\")\n                    })\n                );\n                return;\n            }\n\n            const response = await UserClient.editUser({\n                id: this.state.user.id,\n                oAuthConnections: this.state.newOAuthConnections\n            });\n            if (response.code == StatusCode.OK) {\n                this.loadUser(response.payload);\n            } else {\n                this.addError(response.error);\n            }\n\n            this.setState({\n                saving: false\n            });\n        };\n\n        const canEditOauth = this.canEdit || this.canEditOwnOAuth;\n\n        return (\n            <Tab\n                eventKey=\"oauth\"\n                title={<FormattedMessage id=\"view.user.edit.oauth.connections\" />}>\n                <h3 className=\"mb-3\">\n                    <FormattedMessage id=\"view.user.edit.oauth.current\" />\n                </h3>\n                <div>\n                    {this.state.newOAuthConnections.map((oAuthConnection, idx) => (\n                        <div className=\"justify-content-center d-flex\" key={idx}>\n                            <InputGroup className=\"w-75 mb-1\">\n                                <InputGroup.Prepend>\n                                    <InputGroup.Text>\n                                        <span>\n                                            <FormattedMessage id=\"view.user.edit.oauth.provider\" />\n                                        </span>\n                                    </InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <Form.Control\n                                    className=\"flex-grow-1 flex-md-grow-0 w-50 w-md-auto \"\n                                    as=\"select\"\n                                    custom\n                                    disabled={!canEditOauth}\n                                    onChange={event => {\n                                        const provider = event.target.value as OAuthProvider;\n                                        this.setState(prev => {\n                                            return {\n                                                newOAuthConnections: prev.newOAuthConnections.map(\n                                                    (val, idx2) => {\n                                                        if (idx2 !== idx) return val;\n                                                        return {\n                                                            ...val,\n                                                            provider: provider\n                                                        };\n                                                    }\n                                                )\n                                            };\n                                        });\n                                    }}>\n                                    {Object.keys(oAuthProviderInfos).map(key => {\n                                        return (\n                                            <FormattedMessage\n                                                key={key}\n                                                id={`view.user.edit.oauth.provider.${key.toLowerCase()}`}>\n                                                {txt => (\n                                                    <option\n                                                        value={key}\n                                                        selected={oAuthConnection.provider === key}>\n                                                        {txt}\n                                                    </option>\n                                                )}\n                                            </FormattedMessage>\n                                        );\n                                    })}\n                                </Form.Control>\n                                <InputGroup.Text className=\"rounded-0\">\n                                    <FormattedMessage id=\"view.user.edit.oauth.id\" />\n                                </InputGroup.Text>\n                                <FormControl\n                                    className=\"\"\n                                    value={oAuthConnection.externalUserId}\n                                    onChange={event => {\n                                        const externalUserId = event.target.value;\n                                        this.setState(prev => {\n                                            return {\n                                                newOAuthConnections: prev.newOAuthConnections.map(\n                                                    (val, idx2) => {\n                                                        if (idx2 !== idx) return val;\n                                                        return {\n                                                            ...val,\n                                                            externalUserId: externalUserId\n                                                        };\n                                                    }\n                                                )\n                                            };\n                                        });\n                                    }}\n                                    disabled={!canEditOauth}\n                                />\n                                <InputGroup.Append className=\"\">\n                                    <Button\n                                        variant=\"danger\"\n                                        className=\"text-darker\"\n                                        hidden={!canEditOauth}\n                                        onClick={() => {\n                                            this.setState(prev => {\n                                                return {\n                                                    newOAuthConnections: prev.newOAuthConnections.filter(\n                                                        (val, idx2) => idx !== idx2\n                                                    )\n                                                };\n                                            });\n                                        }}>\n                                        <div>\n                                            <FontAwesomeIcon icon={faTrash} />\n                                        </div>\n                                    </Button>\n                                </InputGroup.Append>\n                            </InputGroup>\n                        </div>\n                    ))}\n                </div>\n                {canEditOauth ? (\n                    <div className=\"text-center mt-3\">\n                        <Button\n                            className=\"mr-2\"\n                            onClick={() => {\n                                this.setState(prev => {\n                                    return {\n                                        newOAuthConnections: [\n                                            ...prev.newOAuthConnections,\n                                            {\n                                                provider: Object.keys(\n                                                    oAuthProviderInfos\n                                                )[0] as OAuthProvider,\n                                                externalUserId: \"\"\n                                            }\n                                        ]\n                                    };\n                                });\n                            }}>\n                            <FormattedMessage id=\"view.user.edit.oauth.add\" />\n                        </Button>\n                        <Button\n                            onClick={save}\n                            variant=\"success\"\n                            disabled={\n                                this.state.newOAuthConnections.some(\n                                    x => x.externalUserId.trim().length === 0\n                                ) ||\n                                //If all values match up, and the lenght is the same, there has been no change, disable the button\n                                (this.state.newOAuthConnections.every(\n                                    (val, idx) =>\n                                        val.externalUserId ===\n                                            (this.state.user?.oAuthConnections ?? [])[idx]\n                                                ?.externalUserId &&\n                                        val.provider ===\n                                            (this.state.user?.oAuthConnections ?? [])[idx]?.provider\n                                ) &&\n                                    this.state.newOAuthConnections.length ===\n                                        this.state.user?.oAuthConnections?.length)\n                            }>\n                            <FormattedMessage id=\"generic.savepage\" />\n                        </Button>\n                    </div>\n                ) : (\n                    \"\"\n                )}\n            </Tab>\n        );\n    }\n\n    private renderGroups(): React.ReactNode {\n        //We can't use addError() here because that would trigger a rerender which would call this again and add another error and so on\n        if (!this.state.user || !this.state.groups) {\n            return (\n                <ErrorAlert\n                    error={\n                        new InternalError(ErrorCode.APP_FAIL, {\n                            jsError: Error(\"Assertion failed, user or group is null\")\n                        })\n                    }\n                />\n            );\n        }\n\n        return (\n            <div>\n                {!this.canRead ? (\n                    <Alert className=\"clearfix\" variant=\"error\">\n                        <FormattedMessage id=\"perms.group.cantlist\" />\n                    </Alert>\n                ) : null}\n                <h3 className=\"mb-3\">\n                    <FormattedMessage id=\"perms.group.current\" />\n                    {this.state.user.group ? (\n                        this.state.user.group.name\n                    ) : (\n                        <FormattedMessage id=\"perms.group.none\" />\n                    )}\n                </h3>\n                <div onChange={this.changeGroup}>\n                    <InputGroup\n                        className=\"justify-content-center mb-3\"\n                        as=\"label\"\n                        htmlFor={\n                            \"group_none\" /*notice the underscore, the normal groups use a dash, this prevents conflict with groups named \"none\"*/\n                        }>\n                        <InputGroup.Prepend>\n                            <InputGroup.Radio\n                                id={\"group_none\"}\n                                name=\"group\"\n                                defaultChecked={this.state.user.group?.id === undefined}\n                                disabled={!this.canEdit}\n                            />\n                        </InputGroup.Prepend>\n                        <InputGroup.Append className=\"w-40 overflow-auto\">\n                            <InputGroup.Text className=\"flex-fill\">\n                                <FormattedMessage id=\"perms.group.none\" />\n                            </InputGroup.Text>\n                        </InputGroup.Append>\n                    </InputGroup>\n                    {this.state.groups.map(group => {\n                        return (\n                            <InputGroup className=\"justify-content-center mb-1\" key={group.id}>\n                                <InputGroup.Prepend>\n                                    <InputGroup.Radio\n                                        id={\"group-\" + group.id.toString()}\n                                        name=\"group\"\n                                        defaultChecked={this.state.user!.group?.id === group.id}\n                                        disabled={!this.canEdit}\n                                    />\n                                </InputGroup.Prepend>\n                                <InputGroup.Append className=\"w-40 overflow-auto\">\n                                    <InputGroup.Text\n                                        className=\"flex-fill\"\n                                        as=\"label\"\n                                        htmlFor={\"group-\" + group.id.toString()}>\n                                        <span>{group.name}</span>\n                                        <div className=\"text-right ml-auto\">\n                                            <FormattedMessage\n                                                id=\"generic.numusers\"\n                                                values={{\n                                                    count: this.canRead\n                                                        ? group.users?.length\n                                                        : \"???\"\n                                                }}\n                                            />\n                                        </div>\n                                    </InputGroup.Text>\n                                    <OverlayTrigger\n                                        overlay={\n                                            <Tooltip id={`${group.id}-tooltip`}>\n                                                <FormattedMessage id=\"perms.group.delete.warning\" />\n                                            </Tooltip>\n                                        }\n                                        show={\n                                            (!group.users?.length || !this.canEdit) &&\n                                            group.id !== this.state.user!.group?.id\n                                                ? false\n                                                : undefined\n                                        }>\n                                        {({ ref, ...triggerHandler }) => (\n                                            <Button\n                                                variant=\"danger\"\n                                                className=\"text-darker\"\n                                                disabled={\n                                                    !!group.users?.length ||\n                                                    !this.canEdit ||\n                                                    group.id === this.state.user!.group?.id\n                                                }\n                                                onClick={() => void this.deleteGroup(group.id)}\n                                                {...triggerHandler}>\n                                                <div ref={ref as React.Ref<HTMLDivElement>}>\n                                                    <FontAwesomeIcon icon={faTrash} />\n                                                </div>\n                                            </Button>\n                                        )}\n                                    </OverlayTrigger>\n                                </InputGroup.Append>\n                            </InputGroup>\n                        );\n                    })}\n                </div>\n                {/*<hr />\n                    <h4 className=\"mt-3\">\n                        <FormattedMessage id=\"perms.group.create\" />\n                    </h4>*/}\n                <InputGroup className=\"justify-content-center mb-1 mt-5\">\n                    <InputGroup.Prepend>\n                        <Button\n                            variant=\"primary\"\n                            onClick={this.createGroup}\n                            disabled={!this.canEdit || !this.state.createGroupName.length}>\n                            <FontAwesomeIcon icon={faPlus} />\n                        </Button>\n                    </InputGroup.Prepend>\n                    <FormControl\n                        className=\"w-40 overflow-auto flex-grow-0\"\n                        value={this.state.createGroupName}\n                        onChange={event => {\n                            this.setState({\n                                createGroupName: event.target.value\n                            });\n                        }}\n                        disabled={!this.canEdit}\n                    />\n                </InputGroup>\n            </div>\n        );\n    }\n\n    private async changeGroup(e: FormEvent<HTMLDivElement>) {\n        if (!this.state.user) {\n            this.addError(\n                new InternalError(ErrorCode.APP_FAIL, {\n                    jsError: Error(\"this.state.user is null in changegroup\")\n                })\n            );\n            return;\n        }\n\n        this.setState({\n            loading: true\n        });\n        const id = (e.target as HTMLInputElement).id;\n        if (id === \"group_none\") {\n            const response = await UserClient.editUser({\n                id: this.state.user.id,\n                permissionSet: resolvePermissionSet(this.state.user)\n            });\n            if (response.code === StatusCode.OK) {\n                await this.loadGroups();\n                this.loadUser(response.payload);\n            } else {\n                this.addError(response.error);\n            }\n        } else {\n            const realID = parseInt(id.substr(6));\n            const response = await UserClient.editUser({\n                id: this.state.user.id,\n                group: {\n                    id: realID\n                } as UserGroup\n            });\n            if (response.code === StatusCode.OK) {\n                await this.loadGroups();\n                this.loadUser(response.payload);\n            } else {\n                this.addError(response.error);\n            }\n        }\n        this.setState({\n            loading: false\n        });\n    }\n\n    private async deleteGroup(id: number) {\n        this.setState({\n            loading: true\n        });\n        const response = await UserGroupClient.deleteGroup(id);\n        if (response.code === StatusCode.OK) {\n            this.setState(prev => {\n                return {\n                    groups: prev.groups.filter(group => group.id !== id)\n                };\n            });\n        } else {\n            this.addError(response.error);\n        }\n        this.setState({\n            loading: false\n        });\n    }\n\n    private async createGroup() {\n        this.setState({\n            loading: true\n        });\n        const response = await UserGroupClient.createGroup(\n            this.state.createGroupName,\n            resolvePermissionSet(this.state.user!)\n        );\n        if (response.code === StatusCode.OK) {\n            this.setState(prev => {\n                return {\n                    groups: prev.groups.concat([response.payload])\n                };\n            });\n        } else {\n            this.addError(response.error);\n        }\n        this.setState({\n            loading: false\n        });\n    }\n\n    private renderPerms(\n        enumname: \"permsadmin\" | \"permsinstance\",\n        permprefix: string\n    ): React.ReactNode {\n        const inputs: Record<\n            string,\n            { input: React.RefObject<HTMLInputElement>; field: React.RefObject<HTMLDivElement> }\n        > = {};\n        const setBold = (\n            inputRef: React.RefObject<HTMLInputElement>,\n            fieldRef: React.RefObject<HTMLDivElement>,\n            defaultVal: boolean\n        ) => {\n            if (!inputRef.current || !fieldRef.current) return;\n            if (inputRef.current.checked !== defaultVal) {\n                fieldRef.current.classList.add(\"font-weight-bold\");\n            } else {\n                fieldRef.current.classList.remove(\"font-weight-bold\");\n            }\n        };\n        const setAll = (val: boolean): (() => void) => {\n            return () => {\n                for (const [permname, refs] of Object.entries(inputs)) {\n                    if (!refs.input.current) return;\n\n                    refs.input.current.checked = val;\n                    setBold(refs.input, refs.field, this.state[enumname][permname].currentVal);\n                }\n            };\n        };\n        const resetAll = () => {\n            for (const [permname, refs] of Object.entries(inputs)) {\n                if (!refs.input.current) continue;\n\n                refs.input.current.checked = this.state[enumname][permname].currentVal;\n                setBold(refs.input, refs.field, this.state[enumname][permname].currentVal);\n            }\n        };\n        const save = async () => {\n            this.setState({\n                saving: true\n            });\n            let bitflag = 0;\n\n            for (const [permname, refs] of Object.entries(inputs)) {\n                if (!refs.input.current) continue;\n\n                bitflag += refs.input.current.checked ? this.state[enumname][permname].bitflag : 0;\n            }\n\n            if (!this.state.user) {\n                this.addError(\n                    new InternalError(ErrorCode.APP_FAIL, {\n                        jsError: Error(\"this.state.user is null in user edit save\")\n                    })\n                );\n                return;\n            }\n\n            if (this.state.user.group) {\n                const newset = Object.assign(\n                    Object.assign({}, this.state.user.group.permissionSet),\n                    {\n                        [enumname == \"permsadmin\"\n                            ? \"AdministrationRights\"\n                            : \"InstanceManagerRights\"]: bitflag\n                    } as\n                        | { AdministrationRights: AdministrationRights }\n                        | { InstanceManagerRights: InstanceManagerRights }\n                ) as PermissionSet;\n                const response = await UserGroupClient.updateGroup({\n                    id: this.state.user.group.id,\n                    permissionSet: newset\n                });\n                if (response.code == StatusCode.OK) {\n                    const response2 = await UserClient.getUser(this.state.user.id);\n                    if (response2.code == StatusCode.OK) {\n                        this.loadUser(response2.payload);\n                    } else {\n                        this.addError(response2.error);\n                    }\n                } else {\n                    this.addError(response.error);\n                }\n            } else {\n                const newset = Object.assign(Object.assign({}, this.state.user.permissionSet), {\n                    [enumname == \"permsadmin\"\n                        ? \"AdministrationRights\"\n                        : \"InstanceManagerRights\"]: bitflag\n                } as { AdministrationRights: AdministrationRights } | { InstanceManagerRights: InstanceManagerRights });\n                const response = await UserClient.editUser({\n                    id: this.state.user.id,\n                    permissionSet: newset\n                });\n                if (response.code == StatusCode.OK) {\n                    this.loadUser(response.payload);\n                } else {\n                    this.addError(response.error);\n                }\n            }\n\n            this.setState({\n                saving: false\n            });\n        };\n        return (\n            <React.Fragment>\n                {this.state.user?.group ? (\n                    <Alert variant=\"warning\">\n                        <FormattedMessage\n                            id=\"perms.group.warning\"\n                            values={{\n                                group: `${this.state.user.group.name} (${this.state.user.group.id})`\n                            }}\n                        />\n                    </Alert>\n                ) : null}\n                {this.canEdit ? (\n                    <React.Fragment>\n                        <h5>\n                            <FormattedMessage id=\"generic.setall\" />\n                        </h5>\n                        <Button onClick={setAll(true)}>\n                            <FormattedMessage id=\"generic.true\" />\n                        </Button>{\" \"}\n                        <Button onClick={setAll(false)}>\n                            <FormattedMessage id=\"generic.false\" />\n                        </Button>{\" \"}\n                        <Button onClick={resetAll}>\n                            <FormattedMessage id=\"generic.reset\" />\n                        </Button>\n                    </React.Fragment>\n                ) : (\n                    \"\"\n                )}\n                <Col md={8} lg={7} xl={6} className=\"mx-auto\">\n                    <hr />\n                    {Object.entries(this.state[enumname]).map(([perm, value]) => {\n                        const inputRef = React.createRef<HTMLInputElement>();\n                        const fieldRef = React.createRef<HTMLDivElement>();\n                        inputs[perm] = { input: inputRef, field: fieldRef };\n                        return (\n                            <InputGroup key={perm} as=\"label\" htmlFor={perm} className=\"mb-0\">\n                                <InputGroup.Prepend className=\"flex-grow-1 overflow-auto\">\n                                    <OverlayTrigger\n                                        overlay={\n                                            <Tooltip id={`perms.${permprefix}.${perm}.desc`}>\n                                                <FormattedMessage\n                                                    id={`perms.${permprefix}.${perm}.desc`}\n                                                />\n                                            </Tooltip>\n                                        }>\n                                        {({ ref, ...triggerHandler }) => (\n                                            <InputGroup.Text className=\"flex-fill\" ref={fieldRef}>\n                                                <div {...triggerHandler}>\n                                                    <FormattedMessage\n                                                        id={`perms.${permprefix}.${perm}`}\n                                                    />\n                                                </div>\n                                                <div className=\"ml-auto d-flex align-items-center\">\n                                                    <Form.Check\n                                                        inline\n                                                        type=\"switch\"\n                                                        custom\n                                                        id={perm}\n                                                        className=\"d-flex justify-content-center align-content-center mx-2\"\n                                                        label=\"\"\n                                                        ref={inputRef}\n                                                        disabled={!this.canEdit}\n                                                        defaultChecked={value.currentVal}\n                                                        onChange={() => {\n                                                            setBold(\n                                                                inputRef,\n                                                                fieldRef,\n                                                                value.currentVal\n                                                            );\n                                                        }}\n                                                    />\n                                                    <div\n                                                        {...triggerHandler}\n                                                        ref={ref as React.Ref<HTMLDivElement>}>\n                                                        <FontAwesomeIcon fixedWidth icon=\"info\" />\n                                                    </div>\n                                                </div>\n                                            </InputGroup.Text>\n                                        )}\n                                    </OverlayTrigger>\n                                </InputGroup.Prepend>\n                            </InputGroup>\n                        );\n                    })}\n                    <hr />\n                </Col>\n                {this.canEdit ? (\n                    <Button onClick={save}>\n                        <FormattedMessage id=\"generic.savepage\" />\n                    </Button>\n                ) : (\n                    \"\"\n                )}\n            </React.Fragment>\n        );\n    }\n}\nUserEdit.contextType = GeneralContext;\nexport default withRouter(UserEdit);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"bsPrefix\", \"size\", \"hasValidation\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      hasValidation = _ref.hasValidation,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size, hasValidation && 'has-validation')\n  }));\n});\nInputGroup.displayName = 'InputGroup';\nInputGroup.Text = InputGroupText;\nInputGroup.Radio = InputGroupRadio;\nInputGroup.Checkbox = InputGroupCheckbox;\nInputGroup.Append = InputGroupAppend;\nInputGroup.Prepend = InputGroupPrepend;\nexport default InputGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"noGutters\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"as\", \"className\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"activeKey\", \"getControlledId\", \"getControllerId\"],\n    _excluded2 = [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, _excluded);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, _excluded2);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;"],"names":["JsonViewer","props","src","obj","name","theme","iconStyle","collapsed","displayDataTypes","DebugJsonViewer","configOptions","className","_excluded","renderTab","child","_child$props","title","eventKey","disabled","tabClassName","id","NavItem","as","NavLink","Tabs","_useUncontrolled","activeKey","onSelect","transition","mountOnEnter","unmountOnExit","children","_useUncontrolled$acti","defaultActiveKey","getDefaultActiveKey","controlledProps","TabContainer","Nav","role","TabContent","childProps","TabPane","defaultProps","variant","displayName","GlobalObjects","UserEdit","context","createGroup","bind","changeGroup","user","Error","state","errors","loading","saving","permsadmin","permsinstance","tab","match","params","groups","group","Object","assign","users","createGroupName","newOAuthConnections","RouteData","parseInt","componentDidUpdate","prevProps","this","setState","componentDidMount","userid","UserClient","response","code","StatusCode","addError","error","loadUser","payload","loadGroups","canRead","UserGroupClient","page","pageSize","groups1","content","i","totalPages","groups2","push","oAuthConnections","Array","from","loadEnums","entries","AdministrationRights","forEach","k","v","isNaN","key","toLowerCase","val","currentVal","resolvePermissionSet","administrationRights","prevState","bitflag","InstanceManagerRights","instanceManagerRights","render","Loading","text","map","err","index","ErrorAlert","onClose","prev","newarr","undefined","canEdit","Alert","systemIdentifier","Badge","enabled","Button","Link","to","AppRoutes","newkey","setupMode","history","Tab","Col","lg","Row","xs","md","toString","OverlayTrigger","overlay","Tooltip","Date","createdAt","toLocaleString","ref","triggerHandler","value","getTime","now","numeric","updateIntervalInSeconds","createdBy","canEditOwnPassword","onClick","renderPerms","renderGroups","renderOAuth","oAuthProviderInfos","serverInfo","currentOAuthConnections","keys","length","save","InternalError","ErrorCode","jsError","canEditOauth","canEditOwnOAuth","oAuthConnection","idx","InputGroup","Form","custom","onChange","event","provider","target","idx2","txt","selected","FormControl","externalUserId","hidden","filter","icon","faTrash","some","x","trim","every","htmlFor","defaultChecked","values","count","show","deleteGroup","faPlus","e","permissionSet","realID","substr","concat","enumname","permprefix","inputs","setBold","inputRef","fieldRef","defaultVal","current","checked","classList","add","remove","setAll","permname","refs","input","field","newset","response2","xl","perm","React","inline","type","label","fixedWidth","contextType","GeneralContext","withRouter","_ref","bsPrefix","pill","_ref$as","Component","prefix","InputGroupAppend","InputGroupPrepend","InputGroupText","size","hasValidation","Text","Radio","Checkbox","Append","Prepend","DEVICE_SIZES","noGutters","decoratedBsPrefix","sizePrefix","classes","brkPoint","cols","propValue","infix","_React$Component","apply","arguments","prototype","Container","Content","Pane","generateCustomChildId","generateChildId","useMemo","tabContext","getControlledId","getControllerId","_excluded2","_useTabContext","useContext","rest","shouldTransition","active","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","pane","in"],"sourceRoot":""}