{"version":3,"file":"182.02480eeb109a075bb2a8.bundle.js","mappings":"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","sources":["webpack://tgstation-server-control-panel/./src/components/utils/WIPNotice.tsx","webpack://tgstation-server-control-panel/./src/components/views/Instance/Edit/Config.tsx","webpack://tgstation-server-control-panel/./src/components/views/Instance/Edit/JobHistory.tsx","webpack://tgstation-server-control-panel/./src/components/views/Instance/Edit/Server.tsx","webpack://tgstation-server-control-panel/./src/components/views/Instance/InstanceEdit.tsx","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Tab.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabContainer.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabContent.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabPane.js"],"sourcesContent":["import React, { ReactNode } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { MODE, VERSION } from \"../../definitions/constants\";\n\nexport default class WIPNotice extends React.Component {\n    public render(): ReactNode {\n        return (\n            <Card className=\"bg-transparent\" border=\"info\">\n                <Card.Header className=\"bg-info text-dark font-weight-bold\">\n                    <FormattedMessage id=\"generic.wip\" />\n                </Card.Header>\n                <Card.Body>\n                    <Card.Title>\n                        <FormattedMessage id=\"generic.wip.desc\" />\n                        <a href=\"https://github.com/tgstation/Tgstation.Server.ControlPanel/releases/latest\">\n                            https://github.com/tgstation/Tgstation.Server.ControlPanel/releases/latest\n                        </a>\n                    </Card.Title>\n                    <Card.Text as={\"pre\"} className=\"bg-transparent text-info\">\n                        <code>\n                            {`Version: ${VERSION}\\nWebpanel Mode: ${MODE}\\nCurrent route: ${window.location.toString()}`}\n                        </code>\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n","import React from \"react\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\n\nimport {\n    ConfigurationType,\n    InstanceManagerRights,\n    InstanceUpdateRequest\n} from \"../../../../ApiClient/generatedcode/generated\";\nimport InstanceClient from \"../../../../ApiClient/InstanceClient\";\nimport InternalError, { ErrorCode } from \"../../../../ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"../../../../ApiClient/models/InternalComms/InternalStatus\";\nimport { InstanceEditContext } from \"../../../../contexts/InstanceEditContext\";\nimport { hasInstanceManagerRight, resolvePermissionSet } from \"../../../../utils/misc\";\nimport ErrorAlert from \"../../../utils/ErrorAlert\";\nimport { FieldType } from \"../../../utils/InputField\";\nimport InputForm from \"../../../utils/InputForm\";\nimport { DebugJsonViewer } from \"../../../utils/JsonViewer\";\n\ninterface IProps extends RouteComponentProps {}\ninterface IState {\n    errors: Array<InternalError<ErrorCode> | undefined>;\n}\n\nclass InstanceSettings extends React.Component<IProps, IState> {\n    public declare context: InstanceEditContext;\n\n    public constructor(props: IProps) {\n        super(props);\n\n        this.editInstance = this.editInstance.bind(this);\n\n        this.state = {\n            errors: []\n        };\n    }\n\n    private addError(error: InternalError<ErrorCode>): void {\n        this.setState(prevState => {\n            const errors = Array.from(prevState.errors);\n            errors.push(error);\n            return {\n                errors\n            };\n        });\n    }\n\n    private async editInstance(instance: Omit<InstanceUpdateRequest, \"id\">) {\n        const response = await InstanceClient.editInstance({\n            ...instance,\n            id: this.context.instance.id\n        });\n        if (response.code === StatusCode.OK) {\n            this.context.reloadInstance();\n        } else {\n            this.addError(response.error);\n        }\n    }\n\n    public render(): React.ReactNode {\n        const checkIMFlag = (flag: InstanceManagerRights) => {\n            return hasInstanceManagerRight(resolvePermissionSet(this.context.user), flag);\n        };\n\n        const fields = {\n            name: {\n                name: \"fields.instance.name\",\n                type: FieldType.String as FieldType.String,\n                defaultValue: this.context.instance.name,\n                disabled: !checkIMFlag(InstanceManagerRights.Rename)\n            },\n            path: {\n                name: \"fields.instance.path\",\n                type: FieldType.String as FieldType.String,\n                defaultValue: this.context.instance.path,\n                disabled: !checkIMFlag(InstanceManagerRights.Relocate)\n            },\n            chatBotLimit: {\n                name: \"fields.instance.chatbotlimit\",\n                type: FieldType.Number as FieldType.Number,\n                min: 0,\n                defaultValue: this.context.instance.chatBotLimit,\n                disabled: !checkIMFlag(InstanceManagerRights.SetChatBotLimit)\n            },\n            autoUpdateInterval: {\n                name: \"fields.instance.autoupdate\",\n                type: FieldType.Number as FieldType.Number,\n                min: 0,\n                defaultValue: this.context.instance.autoUpdateInterval,\n                disabled: !checkIMFlag(InstanceManagerRights.SetAutoUpdate)\n            },\n            configurationType: {\n                name: \"fields.instance.filemode\",\n                type: FieldType.Enum as FieldType.Enum,\n                enum: ConfigurationType,\n                defaultValue: this.context.instance.configurationType,\n                disabled: !checkIMFlag(InstanceManagerRights.SetConfiguration)\n            }\n        };\n\n        return (\n            <div className=\"text-center\">\n                <DebugJsonViewer obj={this.context} />\n                {this.state.errors.map((err, index) => {\n                    if (!err) return;\n                    return (\n                        <ErrorAlert\n                            key={index}\n                            error={err}\n                            onClose={() =>\n                                this.setState(prev => {\n                                    const newarr = Array.from(prev.errors);\n                                    newarr[index] = undefined;\n                                    return {\n                                        errors: newarr\n                                    };\n                                })\n                            }\n                        />\n                    );\n                })}\n\n                <InputForm fields={fields} onSave={this.editInstance} />\n            </div>\n        );\n    }\n}\nInstanceSettings.contextType = InstanceEditContext;\nexport default withRouter(InstanceSettings);\n","import React, { useEffect, useState } from \"react\";\n\nimport JobsClient, { TGSJobResponse } from \"../../../../ApiClient/JobsClient\";\nimport InternalError, { ErrorCode } from \"../../../../ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"../../../../ApiClient/models/InternalComms/InternalStatus\";\nimport JobsController from \"../../../../ApiClient/util/JobsController\";\nimport { InstanceEditContext } from \"../../../../contexts/InstanceEditContext\";\nimport { RouteData } from \"../../../../utils/routes\";\nimport ErrorAlert from \"../../../utils/ErrorAlert\";\nimport JobCard from \"../../../utils/JobCard\";\nimport { DebugJsonViewer } from \"../../../utils/JsonViewer\";\nimport Loading from \"../../../utils/Loading\";\nimport PageHelper from \"../../../utils/PageHelper\";\n\nexport default function JobHistory(): JSX.Element {\n    const instanceEditContext = React.useContext(InstanceEditContext);\n\n    const [jobs, setJobs] = useState<TGSJobResponse[]>([]);\n    const [errors, setErrors] = useState<Array<InternalError<ErrorCode> | undefined>>([]);\n    const [loading, setLoading] = useState(true);\n    const [page, setPage] = useState(\n        RouteData.jobhistorypage.get(instanceEditContext.instance.id) ?? 1\n    );\n    const [maxPage, setMaxPage] = useState<number | undefined>(undefined);\n\n    //const [];\n\n    useEffect(() => {\n        async function loadJobs() {\n            const response = await JobsClient.listJobs(instanceEditContext.instance.id, {\n                page: page\n            });\n            if (response.code === StatusCode.OK) {\n                if (page > response.payload.totalPages && response.payload.totalPages !== 0)\n                    setPage(1);\n                setJobs(response.payload.content);\n                setMaxPage(response.payload.totalPages);\n            } else {\n                addError(response.error);\n            }\n            setLoading(false);\n        }\n\n        RouteData.jobhistorypage.set(instanceEditContext.instance.id, page);\n        setLoading(true);\n        void loadJobs();\n    }, [page, instanceEditContext.instance.id]);\n\n    useEffect(() => {}, [errors]);\n\n    function addError(error: InternalError<ErrorCode>): void {\n        setErrors(prevState => {\n            const errors = Array.from(prevState);\n            errors.push(error);\n            return errors;\n        });\n    }\n\n    async function onCancel(job: TGSJobResponse) {\n        const status = await JobsClient.deleteJob(job.instanceid, job.id);\n\n        if (status.code === StatusCode.OK) {\n            JobsController.fastmode = 5;\n        } else {\n            addError(status.error);\n        }\n    }\n\n    if (loading) {\n        return <Loading text=\"loading.instance.jobs.list\" />;\n    }\n\n    return (\n        <div>\n            <DebugJsonViewer obj={jobs} />\n            {errors.map((err, index) => {\n                if (!err) return;\n                return (\n                    <ErrorAlert\n                        key={index}\n                        error={err}\n                        onClose={() =>\n                            setErrors(prev => {\n                                const newarr = Array.from(prev);\n                                newarr[index] = undefined;\n                                return newarr;\n                            })\n                        }\n                    />\n                );\n            })}\n            {jobs\n                .sort((a, b) => b.id - a.id)\n                .filter(job => !!job.stoppedAt)\n                .map(job => (\n                    <JobCard job={job} key={job.id} onCancel={onCancel} />\n                ))}\n            <PageHelper\n                selectPage={newPage => setPage(newPage)}\n                totalPages={maxPage ?? 1}\n                currentPage={page}\n            />\n        </div>\n    );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Button from \"react-bootstrap/Button\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport DreamDaemonClient from \"../../../../ApiClient/DreamDaemonClient\";\nimport {\n    DreamDaemonResponse,\n    DreamDaemonRights,\n    DreamDaemonSecurity,\n    DreamDaemonVisibility,\n    WatchdogStatus\n} from \"../../../../ApiClient/generatedcode/generated\";\nimport InternalError, { ErrorCode } from \"../../../../ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"../../../../ApiClient/models/InternalComms/InternalStatus\";\nimport JobsController from \"../../../../ApiClient/util/JobsController\";\nimport { InstanceEditContext } from \"../../../../contexts/InstanceEditContext\";\nimport { hasDreamDaemonRight } from \"../../../../utils/misc\";\nimport { addError, displayErrors } from \"../../../utils/ErrorAlert\";\nimport GenericAlert from \"../../../utils/GenericAlert\";\nimport InputField, { FieldType } from \"../../../utils/InputField\";\nimport InputForm from \"../../../utils/InputForm\";\nimport { DebugJsonViewer } from \"../../../utils/JsonViewer\";\nimport Loading from \"../../../utils/Loading\";\nimport WIPNotice from \"../../../utils/WIPNotice\";\n\nenum GracefulAction {\n    None,\n    Stop,\n    Restart\n}\n\nexport default function Server(): JSX.Element {\n    const instanceEditContext = useContext(InstanceEditContext);\n    const [watchdogSettings, setWatchdogSettings] = useState<DreamDaemonResponse>();\n    const [loading, setLoading] = useState(false);\n    const errorState = useState<Array<InternalError<ErrorCode> | undefined>>([]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(() => void loadWatchdogSettings(), [instanceEditContext.instance.id]);\n\n    async function loadWatchdogSettings(): Promise<void> {\n        if (\n            !hasDreamDaemonRight(\n                instanceEditContext.instancePermissionSet,\n                DreamDaemonRights.ReadMetadata\n            )\n        ) {\n            return setWatchdogSettings({});\n        }\n\n        const response = await DreamDaemonClient.getWatchdogStatus(instanceEditContext.instance.id);\n        if (response.code === StatusCode.ERROR) {\n            addError(errorState, response.error);\n        } else {\n            setWatchdogSettings(response.payload);\n        }\n    }\n    async function saveWatchdogSettings(newSettings: DreamDaemonResponse): Promise<void> {\n        setLoading(true);\n        const response = await DreamDaemonClient.updateWatchdogStatus(\n            instanceEditContext.instance.id,\n            newSettings\n        );\n        if (response.code === StatusCode.ERROR) {\n            addError(errorState, response.error);\n        }\n        await loadWatchdogSettings();\n        setLoading(false);\n    }\n\n    async function startWatchdog(): Promise<void> {\n        setLoading(true);\n        const response = await DreamDaemonClient.startWatchdog(instanceEditContext.instance.id);\n        if (response.code === StatusCode.ERROR) {\n            addError(errorState, response.error);\n        } else {\n            JobsController.registerCallback(response.payload.id, () => void loadWatchdogSettings());\n            JobsController.fastmode = 5;\n            await loadWatchdogSettings();\n        }\n        setLoading(false);\n    }\n\n    async function stopWatchdog(): Promise<void> {\n        setLoading(true);\n        const response = await DreamDaemonClient.stopWatchdog(instanceEditContext.instance.id);\n        if (response.code === StatusCode.ERROR) {\n            addError(errorState, response.error);\n        } else {\n            await loadWatchdogSettings();\n        }\n        setLoading(false);\n    }\n\n    async function restartWatchdog(): Promise<void> {\n        setLoading(true);\n        const response = await DreamDaemonClient.restartWatchdog(instanceEditContext.instance.id);\n        if (response.code === StatusCode.ERROR) {\n            addError(errorState, response.error);\n        } else {\n            JobsController.registerCallback(response.payload.id, () => void loadWatchdogSettings());\n            JobsController.fastmode = 5;\n            await loadWatchdogSettings();\n        }\n        setLoading(false);\n    }\n\n    async function dumpWatchdog(): Promise<void> {\n        setLoading(true);\n        const response = await DreamDaemonClient.dumpWatchdog(instanceEditContext.instance.id);\n        if (response.code === StatusCode.ERROR) {\n            addError(errorState, response.error);\n        } else {\n            JobsController.fastmode = 5;\n        }\n        setLoading(false);\n    }\n\n    if (!watchdogSettings) {\n        return <>{displayErrors(errorState)}</>;\n    }\n\n    if (loading) {\n        return <Loading />;\n    }\n\n    const fields = {\n        autoStart: {\n            type: FieldType.Boolean as FieldType.Boolean,\n            name: \"fields.instance.watchdog.autostart\",\n            defaultValue: watchdogSettings.autoStart,\n            disabled: !hasDreamDaemonRight(\n                instanceEditContext.instancePermissionSet,\n                DreamDaemonRights.SetAutoStart\n            )\n        },\n        port: {\n            type: FieldType.Number as FieldType.Number,\n            name: \"fields.instance.watchdog.port\",\n            defaultValue: watchdogSettings.port,\n            min: 0,\n            max: 65535,\n            disabled: !hasDreamDaemonRight(\n                instanceEditContext.instancePermissionSet,\n                DreamDaemonRights.SetPort\n            )\n        },\n        visibility: {\n            type: FieldType.Enum as FieldType.Enum,\n            name: \"fields.instance.watchdog.visibility\",\n            defaultValue: watchdogSettings.visibility,\n            enum: DreamDaemonVisibility,\n            disabled: !hasDreamDaemonRight(\n                instanceEditContext.instancePermissionSet,\n                DreamDaemonRights.SetVisibility\n            )\n        },\n        securityLevel: {\n            type: FieldType.Enum as FieldType.Enum,\n            name: \"fields.instance.watchdog.securitylevel\",\n            defaultValue: watchdogSettings.securityLevel,\n            enum: DreamDaemonSecurity,\n            disabled: !hasDreamDaemonRight(\n                instanceEditContext.instancePermissionSet,\n                DreamDaemonRights.SetSecurity\n            )\n        },\n        startupTimeout: {\n            type: FieldType.Number as FieldType.Number,\n            name: \"fields.instance.watchdog.timeout.startup\",\n            defaultValue: watchdogSettings.startupTimeout,\n            min: 0,\n            disabled: !hasDreamDaemonRight(\n                instanceEditContext.instancePermissionSet,\n                DreamDaemonRights.SetStartupTimeout\n            )\n        },\n        topicRequestTimeout: {\n            type: FieldType.Number as FieldType.Number,\n            name: \"fields.instance.watchdog.timeout.topic\",\n            defaultValue: watchdogSettings.topicRequestTimeout,\n            min: 0,\n            disabled: !hasDreamDaemonRight(\n                instanceEditContext.instancePermissionSet,\n                DreamDaemonRights.SetTopicTimeout\n            )\n        },\n        heartbeatSeconds: {\n            type: FieldType.Number as FieldType.Number,\n            name: \"fields.instance.watchdog.heartbeat\",\n            defaultValue: watchdogSettings.heartbeatSeconds,\n            min: 0,\n            disabled: !hasDreamDaemonRight(\n                instanceEditContext.instancePermissionSet,\n                DreamDaemonRights.SetHeartbeatInterval\n            )\n        },\n        allowWebClient: {\n            type: FieldType.Boolean as FieldType.Boolean,\n            name: \"fields.instance.watchdog.allowwebclient\",\n            defaultValue: watchdogSettings.allowWebClient,\n            disabled: !hasDreamDaemonRight(\n                instanceEditContext.instancePermissionSet,\n                DreamDaemonRights.SetWebClient\n            )\n        },\n        additionalParameters: {\n            type: FieldType.String as FieldType.String,\n            name: \"fields.instance.watchdog.additionalparams\",\n            defaultValue: watchdogSettings.additionalParameters,\n            disabled: !hasDreamDaemonRight(\n                instanceEditContext.instancePermissionSet,\n                DreamDaemonRights.SetAdditionalParameters\n            )\n        }\n    };\n\n    const anyEditableField = Object.values(fields).some(field => !field.disabled);\n\n    const no_perm_tooltip = (\n        <Tooltip id=\"generic.no_perm\">\n            <FormattedMessage id=\"generic.no_perm\" />\n        </Tooltip>\n    );\n\n    const canStart = hasDreamDaemonRight(\n        instanceEditContext.instancePermissionSet,\n        DreamDaemonRights.Start\n    );\n    const canStop = hasDreamDaemonRight(\n        instanceEditContext.instancePermissionSet,\n        DreamDaemonRights.Shutdown\n    );\n    const canRestart = hasDreamDaemonRight(\n        instanceEditContext.instancePermissionSet,\n        DreamDaemonRights.Restart\n    );\n    const canDump = hasDreamDaemonRight(\n        instanceEditContext.instancePermissionSet,\n        DreamDaemonRights.CreateDump\n    );\n    const canMetadata = hasDreamDaemonRight(\n        instanceEditContext.instancePermissionSet,\n        DreamDaemonRights.ReadMetadata\n    );\n    const canGracefulAny =\n        hasDreamDaemonRight(\n            instanceEditContext.instancePermissionSet,\n            DreamDaemonRights.SoftShutdown\n        ) ||\n        hasDreamDaemonRight(\n            instanceEditContext.instancePermissionSet,\n            DreamDaemonRights.SoftRestart\n        );\n    const canActionAny = canStart || canStop || canRestart || canDump;\n\n    return (\n        <div>\n            <DebugJsonViewer obj={watchdogSettings} />\n            {displayErrors(errorState)}\n            <h2 className=\"text-center\">\n                <FormattedMessage id=\"view.instance.server.status\" />\n                <Badge\n                    pill\n                    variant={\n                        watchdogSettings.status === WatchdogStatus.Online\n                            ? \"success\"\n                            : watchdogSettings.status === WatchdogStatus.Offline\n                            ? \"danger\"\n                            : \"warning\"\n                    }>\n                    <FormattedMessage\n                        id={`view.instance.server.status.${\n                            WatchdogStatus[watchdogSettings.status!]\n                        }`}\n                    />\n                </Badge>\n            </h2>\n            <hr />\n            <h3 className=\"text-center\">\n                <FormattedMessage id=\"view.instance.server.settings\" />\n            </h3>\n            {!canMetadata ? (\n                anyEditableField ? (\n                    <GenericAlert title=\"view.instance.server.no_metadata\" />\n                ) : (\n                    <GenericAlert title=\"view.instance.server.no_metadata_and_no_settings\" />\n                )\n            ) : null}\n            <InputForm fields={fields} onSave={saveWatchdogSettings} hideDisabled={!canMetadata} />\n            <hr />\n            <h3 className=\"text-center\">\n                <FormattedMessage id=\"view.instance.server.actions\" />\n            </h3>\n            {canActionAny ? (\n                <>\n                    {!canMetadata ? (\n                        <GenericAlert title=\"view.instance.server.no_metadata_actions\" />\n                    ) : null}\n                    <div className=\"text-center mb-3\">\n                        <OverlayTrigger\n                            overlay={no_perm_tooltip}\n                            show={canStart ? false : undefined}>\n                            <Button\n                                variant=\"success\"\n                                className=\"mx-2\"\n                                onClick={startWatchdog}\n                                disabled={\n                                    (canMetadata &&\n                                        watchdogSettings.status != WatchdogStatus.Offline) ||\n                                    !canStart\n                                }>\n                                <FormattedMessage id=\"view.instance.server.start\" />\n                            </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                            overlay={no_perm_tooltip}\n                            show={canStop ? false : undefined}>\n                            <Button\n                                variant=\"danger\"\n                                className=\"mx-2\"\n                                onClick={stopWatchdog}\n                                disabled={\n                                    (canMetadata &&\n                                        watchdogSettings.status != WatchdogStatus.Online) ||\n                                    !canStop\n                                }>\n                                <FormattedMessage id=\"view.instance.server.stop\" />\n                            </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                            overlay={no_perm_tooltip}\n                            show={canRestart ? false : undefined}>\n                            <Button\n                                variant=\"warning\"\n                                className=\"mx-2\"\n                                onClick={restartWatchdog}\n                                disabled={\n                                    (canMetadata &&\n                                        watchdogSettings.status != WatchdogStatus.Online) ||\n                                    !canRestart\n                                }>\n                                <FormattedMessage id=\"view.instance.server.restart\" />\n                            </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                            overlay={no_perm_tooltip}\n                            show={canDump ? false : undefined}>\n                            <Button\n                                variant=\"info\"\n                                className=\"mx-2\"\n                                onClick={dumpWatchdog}\n                                disabled={\n                                    (canMetadata &&\n                                        watchdogSettings.status != WatchdogStatus.Online) ||\n                                    !canDump\n                                }>\n                                <FormattedMessage id=\"view.instance.server.dump\" />\n                            </Button>\n                        </OverlayTrigger>\n                    </div>\n                </>\n            ) : (\n                <GenericAlert title=\"view.instance.server.no_actions\" />\n            )}\n            {!canMetadata && canGracefulAny ? (\n                <GenericAlert title=\"view.instance.server.no_metadata_graceful\" />\n            ) : null}\n\n            {canMetadata || canGracefulAny ? (\n                <div className=\"w-75 mx-auto\">\n                    <InputField\n                        name=\"view.instance.graceful\"\n                        type={FieldType.Enum}\n                        enum={GracefulAction}\n                        tooltip=\"view.instance.graceful.desc\"\n                        defaultValue={\n                            watchdogSettings.softRestart\n                                ? GracefulAction.Restart\n                                : watchdogSettings.softShutdown\n                                ? GracefulAction.Stop\n                                : GracefulAction.None\n                        }\n                        disabled={!canGracefulAny}\n                        onChange={_result => {\n                            const result = _result as GracefulAction;\n\n                            switch (result) {\n                                case GracefulAction.None:\n                                    if (\n                                        !watchdogSettings?.softRestart &&\n                                        !watchdogSettings?.softShutdown\n                                    )\n                                        return;\n                                    void saveWatchdogSettings({\n                                        softShutdown: watchdogSettings.softShutdown\n                                            ? false\n                                            : undefined,\n                                        softRestart: watchdogSettings.softRestart\n                                            ? false\n                                            : undefined\n                                    });\n                                    break;\n                                case GracefulAction.Stop:\n                                    if (watchdogSettings?.softShutdown) return;\n                                    void saveWatchdogSettings({\n                                        softShutdown: true\n                                    });\n                                    break;\n                                case GracefulAction.Restart:\n                                    if (watchdogSettings?.softRestart) return;\n                                    void saveWatchdogSettings({\n                                        softRestart: true\n                                    });\n                                    break;\n                            }\n                        }}\n                    />\n                </div>\n            ) : canActionAny ? (\n                <GenericAlert title=\"view.instance.server.no_graceful\" />\n            ) : null}\n            <hr />\n            <h3 className=\"text-center\">\n                <FormattedMessage id=\"view.instance.server.deployment_info\" />\n            </h3>\n            <WIPNotice />\n        </div>\n    );\n}\n","import { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { ComponentType } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Tab from \"react-bootstrap/Tab\";\nimport { FormattedMessage } from \"react-intl\";\nimport { RouteComponentProps, withRouter } from \"react-router\";\n\nimport {\n    ByondRights,\n    DreamDaemonRights,\n    InstancePermissionSetResponse\n} from \"../../../ApiClient/generatedcode/generated\";\nimport InstanceClient from \"../../../ApiClient/InstanceClient\";\nimport InstancePermissionSetClient from \"../../../ApiClient/InstancePermissionSetClient\";\nimport InternalError from \"../../../ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"../../../ApiClient/models/InternalComms/InternalStatus\";\nimport configOptions, { InstanceEditSidebar } from \"../../../ApiClient/util/config\";\nimport { GeneralContext } from \"../../../contexts/GeneralContext\";\nimport {\n    InstanceEditContext,\n    UnsafeInstanceEditContext\n} from \"../../../contexts/InstanceEditContext\";\nimport { AppRoutes, RouteData } from \"../../../utils/routes\";\nimport AccessDenied from \"../../utils/AccessDenied\";\nimport Loading from \"../../utils/Loading\";\nimport WIPNotice from \"../../utils/WIPNotice\";\nimport Byond from \"./Edit/Byond\";\nimport InstanceSettings from \"./Edit/Config\";\nimport JobHistory from \"./Edit/JobHistory\";\nimport Repository from \"./Edit/Repository\";\nimport Server from \"./Edit/Server\";\n\ntype IProps = RouteComponentProps<{ id: string; tab?: string }>;\ntype IState = Omit<UnsafeInstanceEditContext, \"user\" | \"serverInfo\"> & {\n    tab: string;\n    instanceid: number;\n};\n\nconst minimumByondPerms =\n    ByondRights.ReadActive |\n    ByondRights.ListInstalled |\n    ByondRights.InstallOfficialOrChangeActiveVersion |\n    ByondRights.InstallCustomVersion;\n\nconst minimumServerPerms =\n    DreamDaemonRights.SetPort |\n    DreamDaemonRights.SetAutoStart |\n    DreamDaemonRights.SetSecurity |\n    DreamDaemonRights.ReadMetadata |\n    DreamDaemonRights.SetWebClient |\n    DreamDaemonRights.SoftRestart |\n    DreamDaemonRights.SoftShutdown |\n    DreamDaemonRights.Restart |\n    DreamDaemonRights.Shutdown |\n    DreamDaemonRights.Start |\n    DreamDaemonRights.SetStartupTimeout |\n    DreamDaemonRights.SetHeartbeatInterval |\n    DreamDaemonRights.CreateDump |\n    DreamDaemonRights.SetTopicTimeout |\n    DreamDaemonRights.SetAdditionalParameters |\n    DreamDaemonRights.SetVisibility;\n\nclass InstanceEdit extends React.Component<IProps, IState> {\n    public declare context: GeneralContext;\n    public static tabs: [\n        string,\n        IconProp,\n        (\n            instancePermissionSet: InstancePermissionSetResponse,\n            generalContext: GeneralContext\n        ) => boolean,\n        ComponentType?\n    ][] = [\n        [\"info\", \"info\", () => true],\n        [\"repository\", \"code-branch\", () => true, Repository],\n        [\"deployment\", \"hammer\", () => true],\n        [\n            \"dd\",\n            \"server\",\n            instancePermissionSet =>\n                !!(instancePermissionSet.dreamDaemonRights & minimumServerPerms),\n            Server\n        ],\n        [\n            \"byond\",\n            \"list-ul\",\n            instancePermissionSet => !!(instancePermissionSet.byondRights & minimumByondPerms),\n            Byond\n        ],\n        [\"chatbots\", \"comments\", () => true],\n        [\"files\", \"folder-open\", () => true],\n        [\"users\", \"users\", () => true],\n        [\"jobs\", \"stream\", () => true, JobHistory],\n        [\"config\", \"cogs\", () => true, InstanceSettings]\n    ];\n\n    public constructor(props: IProps) {\n        super(props);\n\n        this.reloadInstance = this.reloadInstance.bind(this);\n        this.deleteContextError = this.deleteContextError.bind(this);\n\n        RouteData.selectedinstanceid = parseInt(this.props.match.params.id);\n\n        this.state = {\n            tab: props.match.params.tab ?? InstanceEdit.tabs[0][0],\n            errors: new Set(),\n            instance: null,\n            instancePermissionSet: null,\n            reloadInstance: this.reloadInstance,\n            deleteError: this.deleteContextError,\n            instanceid: parseInt(this.props.match.params.id)\n        };\n    }\n    public deleteContextError(error: InternalError): void {\n        this.setState(prev => {\n            const newSet = new Set(prev.errors);\n            newSet.delete(error);\n            return {\n                errors: newSet\n            };\n        });\n    }\n\n    public async componentDidMount(): Promise<void> {\n        await this.reloadInstance();\n    }\n\n    public componentDidUpdate(prevProps: Readonly<IProps>) {\n        if (\n            this.props.match.params.tab &&\n            prevProps.match.params.tab != this.props.match.params.tab\n        ) {\n            this.setState({\n                tab: this.props.match.params.tab\n            });\n        }\n    }\n\n    public async reloadInstance(): Promise<void> {\n        this.setState({\n            instance: null,\n            instancePermissionSet: null\n        });\n        const response = await InstanceClient.getInstance(this.state.instanceid);\n        if (response.code === StatusCode.OK) {\n            this.setState({\n                instance: response.payload\n            });\n\n            const response2 = await InstancePermissionSetClient.getCurrentInstancePermissionSet(\n                this.state.instanceid\n            );\n            if (response2.code === StatusCode.OK) {\n                this.setState({\n                    instancePermissionSet: response2.payload\n                });\n            } else {\n                this.setState(prev => {\n                    const newSet = new Set(prev.errors);\n                    newSet.add(response2.error);\n                    return {\n                        instancePermissionSet: null,\n                        errors: newSet\n                    };\n                });\n            }\n        } else {\n            this.setState(prev => {\n                const newSet = new Set(prev.errors);\n                newSet.add(response.error);\n                return {\n                    instance: null,\n                    errors: newSet\n                };\n            });\n        }\n    }\n\n    public render(): React.ReactNode {\n        if (!this.state.instance || !this.state.instancePermissionSet) {\n            return <Loading text=\"loading.instance\" />;\n        }\n\n        const nav = () => {\n            return (\n                <Nav\n                    defaultActiveKey={this.state.tab}\n                    onSelect={eventKey => {\n                        eventKey = eventKey ?? InstanceEdit.tabs[0][0];\n                        RouteData.selectedinstanceedittab = eventKey;\n                        this.props.history.push(\n                            AppRoutes.instanceedit.link ?? AppRoutes.instanceedit.route\n                        );\n                        this.setState({ tab: eventKey ?? InstanceEdit.tabs[0][0] });\n                    }}\n                    fill\n                    variant=\"pills\"\n                    activeKey={this.state.tab}\n                    className={\n                        \"flex-nowrap text-nowrap flex-column hover-bar sticky-top \" +\n                        (configOptions.instanceeditsidebar.value === InstanceEditSidebar.COLLAPSE\n                            ? \"pin-close\"\n                            : configOptions.instanceeditsidebar.value === InstanceEditSidebar.EXPAND\n                            ? \"pin-open\"\n                            : \"\")\n                    }\n                    style={{ top: \"8em\" }}>\n                    {InstanceEdit.tabs.map(([tabKey, icon, accessCb, component]) => {\n                        if (!this.state.instancePermissionSet) {\n                            throw Error(\n                                \"this.state.instancePermissionSet is null in instanceedit nav map\"\n                            );\n                        }\n                        const wip = !component;\n                        const accessDenied = !accessCb(\n                            this.state.instancePermissionSet,\n                            this.context\n                        );\n\n                        return (\n                            <Nav.Item key={tabKey}>\n                                <Nav.Link\n                                    eventKey={tabKey}\n                                    bsPrefix=\"nav-link instanceedittab\"\n                                    className={\n                                        (wip ? \"no-access text-white\" : \"\") +\n                                        (accessDenied ? \"no-access text-white font-italic\" : \"\") +\n                                        \" text-left\"\n                                    }>\n                                    <React.Fragment>\n                                        <FontAwesomeIcon\n                                            icon={accessDenied ? \"lock\" : icon}\n                                            fixedWidth\n                                        />\n                                        <div\n                                            className={\n                                                \"tab-text d-inline-block \" +\n                                                (accessDenied ? \"font-weight-lighter\" : \"\")\n                                            }>\n                                            <span className=\"pl-1\">\n                                                <FormattedMessage\n                                                    id={`view.instanceedit.tabs.${tabKey}`}\n                                                />\n                                            </span>\n                                        </div>\n                                    </React.Fragment>\n                                </Nav.Link>\n                            </Nav.Item>\n                        );\n                    })}\n                </Nav>\n            );\n        };\n\n        return (\n            <InstanceEditContext.Provider\n                value={\n                    Object.assign(\n                        { user: this.context.user, serverInfo: this.context.serverInfo },\n                        this.state\n                    ) as InstanceEditContext\n                }>\n                <Card>\n                    <Card.Header className=\"text-center mb-2 sticky-top\">\n                        <h3>\n                            <FormattedMessage\n                                id=\"view.instanceedit.title\"\n                                values={{\n                                    instanceid: this.props.match.params.id,\n                                    instancename: this.state.instance.name\n                                }}\n                            />\n                        </h3>\n                        <h5 className=\"text-white-50\">\n                            <FormattedMessage id={`view.instanceedit.tabs.${this.state.tab}`} />\n                        </h5>\n                    </Card.Header>\n                    <Tab.Container\n                        mountOnEnter\n                        unmountOnExit\n                        id=\"instanceedit\"\n                        activeKey={this.state.tab}>\n                        <div className=\"d-flex flex-row\">\n                            <Card.Body className=\"flex-grow-0\">{nav()}</Card.Body>\n                            <Card.Body className=\"bg-body\">\n                                <Tab.Content>\n                                    {InstanceEdit.tabs.map(([tabKey, , accessCb, Comp]) => {\n                                        if (!this.state.instancePermissionSet) {\n                                            throw Error(\n                                                \"this.state.instancePermissionSet is null in render card map\"\n                                            );\n                                        }\n                                        return (\n                                            <Tab.Pane eventKey={tabKey} key={tabKey}>\n                                                {Comp ? (\n                                                    !accessCb(\n                                                        this.state.instancePermissionSet,\n                                                        this.context\n                                                    ) ? (\n                                                        <AccessDenied />\n                                                    ) : (\n                                                        <Comp />\n                                                    )\n                                                ) : (\n                                                    <WIPNotice />\n                                                )}\n                                            </Tab.Pane>\n                                        );\n                                    })}\n                                </Tab.Content>\n                            </Card.Body>\n                        </div>\n                    </Tab.Container>\n                </Card>\n            </InstanceEditContext.Provider>\n        );\n    }\n}\nInstanceEdit.contextType = GeneralContext;\nexport default withRouter(InstanceEdit);\n","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"as\", \"className\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"activeKey\", \"getControlledId\", \"getControllerId\"],\n    _excluded2 = [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, _excluded);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, _excluded2);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;"],"names":["WIPNotice","React","render","className","border","id","href","as","VERSION","MODE","window","location","toString","InstanceSettings","constructor","props","super","this","editInstance","bind","state","errors","addError","error","setState","prevState","Array","from","push","instance","response","InstanceClient","context","code","StatusCode","reloadInstance","checkIMFlag","flag","hasInstanceManagerRight","resolvePermissionSet","user","fields","name","type","FieldType","defaultValue","disabled","InstanceManagerRights","path","chatBotLimit","min","autoUpdateInterval","configurationType","enum","ConfigurationType","obj","map","err","index","key","onClose","prev","newarr","undefined","onSave","contextType","InstanceEditContext","withRouter","JobHistory","instanceEditContext","jobs","setJobs","useState","setErrors","loading","setLoading","page","setPage","RouteData","maxPage","setMaxPage","async","onCancel","job","status","JobsClient","instanceid","JobsController","useEffect","payload","totalPages","content","loadJobs","text","sort","a","b","filter","stoppedAt","selectPage","newPage","currentPage","GracefulAction","Server","useContext","watchdogSettings","setWatchdogSettings","errorState","loadWatchdogSettings","hasDreamDaemonRight","instancePermissionSet","DreamDaemonRights","DreamDaemonClient","saveWatchdogSettings","newSettings","displayErrors","autoStart","port","max","visibility","DreamDaemonVisibility","securityLevel","DreamDaemonSecurity","startupTimeout","topicRequestTimeout","heartbeatSeconds","allowWebClient","additionalParameters","anyEditableField","Object","values","some","field","no_perm_tooltip","canStart","canStop","canRestart","canDump","canMetadata","canGracefulAny","canActionAny","pill","variant","WatchdogStatus","title","hideDisabled","overlay","show","onClick","tooltip","softRestart","Restart","softShutdown","Stop","None","onChange","_result","minimumByondPerms","ByondRights","minimumServerPerms","InstanceEdit","deleteContextError","parseInt","match","params","tab","tabs","Set","deleteError","newSet","delete","componentDidUpdate","prevProps","response2","InstancePermissionSetClient","add","value","assign","serverInfo","instancename","mountOnEnter","unmountOnExit","activeKey","defaultActiveKey","onSelect","eventKey","history","AppRoutes","fill","configOptions","InstanceEditSidebar","style","top","tabKey","icon","accessCb","component","Error","wip","accessDenied","bsPrefix","fixedWidth","nav","Comp","Repository","dreamDaemonRights","byondRights","Byond","GeneralContext","Tab","_React$Component","apply","arguments","prototype","Container","Content","Pane","_useUncontrolled","generateCustomChildId","generateChildId","transition","children","useMemo","tabContext","getControlledId","getControllerId","_excluded","TabContent","_ref","ref","_ref$as","Component","decoratedBsPrefix","_excluded2","TabPane","_useTabContext","rest","shouldTransition","active","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","prefix","pane","role","in","displayName"],"sourceRoot":""}