{"version":3,"file":"711.7c5793f89e56aa15a150.js","mappings":"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","sources":["webpack://tgstation-server-control-panel/./src/components/utils/WIPNotice.tsx","webpack://tgstation-server-control-panel/./src/components/views/Instance/Edit/JobHistory.tsx","webpack://tgstation-server-control-panel/./src/components/views/Instance/InstanceEdit.tsx","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Tab.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabContainer.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabContent.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabPane.js"],"sourcesContent":["import React, { ReactNode } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { MODE, VERSION } from \"../../definitions/constants\";\n\nexport default class WIPNotice extends React.Component {\n    public render(): ReactNode {\n        return (\n            <Card className=\"bg-transparent\" border=\"info\">\n                <Card.Header className=\"bg-info text-dark font-weight-bold\">\n                    <FormattedMessage id=\"generic.wip\" />\n                </Card.Header>\n                <Card.Body>\n                    <Card.Title>\n                        <FormattedMessage id=\"generic.wip.desc\" />\n                        <a href=\"https://github.com/tgstation/Tgstation.Server.ControlPanel/releases/latest\">\n                            https://github.com/tgstation/Tgstation.Server.ControlPanel/releases/latest\n                        </a>\n                    </Card.Title>\n                    <Card.Text as={\"pre\"} className=\"bg-transparent text-info\">\n                        <code>\n                            {`Version: ${VERSION}\\nWebpanel Mode: ${MODE}\\nCurrent route: ${window.location.toString()}`}\n                        </code>\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport JobsClient, { TGSJobResponse } from \"../../../../ApiClient/JobsClient\";\nimport InternalError, { ErrorCode } from \"../../../../ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"../../../../ApiClient/models/InternalComms/InternalStatus\";\nimport JobsController from \"../../../../ApiClient/util/JobsController\";\nimport { InstanceEditContext } from \"../../../../contexts/InstanceEditContext\";\nimport { RouteData } from \"../../../../utils/routes\";\nimport ErrorAlert from \"../../../utils/ErrorAlert\";\nimport JobCard from \"../../../utils/JobCard\";\nimport Loading from \"../../../utils/Loading\";\nimport PageHelper from \"../../../utils/PageHelper\";\n\nexport default function JobHistory(): JSX.Element {\n    const instanceEditContext = React.useContext(InstanceEditContext);\n\n    const [jobs, setJobs] = useState<TGSJobResponse[]>([]);\n    const [errors, setErrors] = useState<Array<InternalError<ErrorCode> | undefined>>([]);\n    const [loading, setLoading] = useState(true);\n    const [page, setPage] = useState(\n        RouteData.jobhistorypage.get(instanceEditContext.instance.id) ?? 1\n    );\n    const [maxPage, setMaxPage] = useState<number | undefined>(undefined);\n\n    //const [];\n\n    useEffect(() => {\n        RouteData.jobhistorypage.set(instanceEditContext.instance.id, page);\n        setLoading(true);\n        void loadJobs();\n    }, [page]);\n\n    useEffect(() => {}, [errors]);\n\n    async function loadJobs() {\n        const response = await JobsClient.listJobs(instanceEditContext.instance.id, { page: page });\n        if (response.code === StatusCode.OK) {\n            if (page > response.payload.totalPages && response.payload.totalPages !== 0) setPage(1);\n            setJobs(response.payload.content);\n            setMaxPage(response.payload.totalPages);\n        } else {\n            addError(response.error);\n        }\n        setLoading(false);\n    }\n\n    function addError(error: InternalError<ErrorCode>): void {\n        setErrors(prevState => {\n            const errors = Array.from(prevState);\n            errors.push(error);\n            return errors;\n        });\n    }\n\n    async function onCancel(job: TGSJobResponse) {\n        const status = await JobsClient.deleteJob(job.instanceid, job.id);\n\n        if (status.code === StatusCode.OK) {\n            JobsController.fastmode = 5;\n        } else {\n            addError(status.error);\n        }\n    }\n\n    if (loading) {\n        return <Loading text=\"loading.instance.jobs.list\" />;\n    }\n\n    return (\n        <div>\n            {errors.map((err, index) => {\n                if (!err) return;\n                return (\n                    <ErrorAlert\n                        key={index}\n                        error={err}\n                        onClose={() =>\n                            setErrors(prev => {\n                                const newarr = Array.from(prev);\n                                newarr[index] = undefined;\n                                return newarr;\n                            })\n                        }\n                    />\n                );\n            })}\n            {jobs\n                .sort((a, b) => b.id - a.id)\n                .map(job => (\n                    <JobCard job={job} key={job.id} onCancel={onCancel} />\n                ))}\n            <PageHelper\n                selectPage={newPage => setPage(newPage)}\n                totalPages={maxPage ?? 1}\n                currentPage={page}\n            />\n        </div>\n    );\n}\n","import { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { ComponentType } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Tab from \"react-bootstrap/Tab\";\nimport { FormattedMessage } from \"react-intl\";\nimport { RouteComponentProps, withRouter } from \"react-router\";\n\nimport InstanceClient from \"../../../ApiClient/InstanceClient\";\nimport InstancePermissionSetClient from \"../../../ApiClient/InstancePermissionSetClient\";\nimport InternalError from \"../../../ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"../../../ApiClient/models/InternalComms/InternalStatus\";\nimport { GeneralContext } from \"../../../contexts/GeneralContext\";\nimport {\n    InstanceEditContext,\n    UnsafeInstanceEditContext\n} from \"../../../contexts/InstanceEditContext\";\nimport { AppRoutes, RouteData } from \"../../../utils/routes\";\nimport Loading from \"../../utils/Loading\";\nimport WIPNotice from \"../../utils/WIPNotice\";\nimport Byond from \"./Edit/Byond\";\nimport InstanceSettings from \"./Edit/Config\";\nimport JobHistory from \"./Edit/JobHistory\";\n\ntype IProps = RouteComponentProps<{ id: string; tab?: string }>;\ntype IState = Omit<UnsafeInstanceEditContext, \"user\" | \"serverInfo\"> & {\n    tab: string;\n    instanceid: number;\n};\n\nclass InstanceEdit extends React.Component<IProps, IState> {\n    public declare context: GeneralContext;\n    public static tabs: [string, IconProp, ComponentType?][] = [\n        [\"info\", \"info\"],\n        [\"repository\", \"code-branch\"],\n        [\"deployment\", \"hammer\"],\n        [\"dd\", \"server\"],\n        [\"byond\", \"list-ul\", Byond],\n        [\"chatbots\", \"comments\"],\n        [\"files\", \"folder-open\"],\n        [\"users\", \"users\"],\n        [\"jobs\", \"stream\", JobHistory],\n        [\"config\", \"cogs\", InstanceSettings]\n    ];\n\n    public constructor(props: IProps) {\n        super(props);\n\n        this.reloadInstance = this.reloadInstance.bind(this);\n        this.deleteContextError = this.deleteContextError.bind(this);\n\n        RouteData.selectedinstanceid = parseInt(this.props.match.params.id);\n\n        this.state = {\n            tab: props.match.params.tab ?? InstanceEdit.tabs[0][0],\n            errors: new Set(),\n            instance: null,\n            instancePermissionSet: null,\n            reloadInstance: this.reloadInstance,\n            deleteError: this.deleteContextError,\n            instanceid: parseInt(this.props.match.params.id)\n        };\n    }\n    public deleteContextError(error: InternalError): void {\n        this.setState(prev => {\n            const newSet = new Set(prev.errors);\n            newSet.delete(error);\n            return {\n                errors: newSet\n            };\n        });\n    }\n\n    public async componentDidMount(): Promise<void> {\n        await this.reloadInstance();\n    }\n\n    public async reloadInstance(): Promise<void> {\n        this.setState({\n            instance: null,\n            instancePermissionSet: null\n        });\n        const response = await InstanceClient.getInstance(this.state.instanceid);\n        if (response.code === StatusCode.OK) {\n            this.setState({\n                instance: response.payload\n            });\n\n            const response2 = await InstancePermissionSetClient.getCurrentInstancePermissionSet(\n                this.state.instanceid\n            );\n            if (response2.code === StatusCode.OK) {\n                this.setState({\n                    instancePermissionSet: response2.payload\n                });\n            } else {\n                this.setState(prev => {\n                    const newSet = new Set(prev.errors);\n                    newSet.add(response2.error);\n                    return {\n                        instancePermissionSet: null,\n                        errors: newSet\n                    };\n                });\n            }\n        } else {\n            this.setState(prev => {\n                const newSet = new Set(prev.errors);\n                newSet.add(response.error);\n                return {\n                    instance: null,\n                    errors: newSet\n                };\n            });\n        }\n    }\n\n    public render(): React.ReactNode {\n        if (!this.state.instance || !this.state.instancePermissionSet) {\n            return <Loading text=\"loading.instance\" />;\n        }\n\n        const nav = () => {\n            return (\n                <Nav\n                    defaultActiveKey={this.state.tab}\n                    onSelect={eventKey => {\n                        eventKey = eventKey ?? InstanceEdit.tabs[0][0];\n                        RouteData.selectedinstanceedittab = eventKey;\n                        this.props.history.push(\n                            AppRoutes.instanceedit.link ?? AppRoutes.instanceedit.route\n                        );\n                        this.setState({ tab: eventKey ?? InstanceEdit.tabs[0][0] });\n                    }}\n                    fill\n                    variant=\"pills\"\n                    activeKey={this.state.tab}\n                    className=\"flex-nowrap text-nowrap flex-column hover-bar\">\n                    {InstanceEdit.tabs.map(([tabKey, icon, component]) => {\n                        return (\n                            <Nav.Item key={tabKey}>\n                                <Nav.Link\n                                    eventKey={tabKey}\n                                    bsPrefix=\"nav-link instanceedittab\"\n                                    className={(!component ? \"wip text-white\" : \"\") + \" text-left\"}>\n                                    <React.Fragment>\n                                        <FontAwesomeIcon icon={icon} fixedWidth />\n                                        <div className=\"tab-text d-inline-block\">\n                                            <span className=\"pl-1\">\n                                                <FormattedMessage\n                                                    id={`view.instanceedit.tabs.${tabKey}`}\n                                                />\n                                            </span>\n                                        </div>\n                                    </React.Fragment>\n                                </Nav.Link>\n                            </Nav.Item>\n                        );\n                    })}\n                </Nav>\n            );\n        };\n\n        const test = false;\n\n        if (test) {\n            const Comp = InstanceEdit.tabs.find(tab => tab[0] === this.state.tab)?.[2] ?? WIPNotice;\n            return <Comp />;\n        } else {\n            return (\n                <InstanceEditContext.Provider\n                    value={\n                        Object.assign(\n                            { user: this.context.user, serverInfo: this.context.serverInfo },\n                            this.state\n                        ) as InstanceEditContext\n                    }>\n                    <Card>\n                        <Card.Header className=\"text-center mb-2\">\n                            <h3>\n                                <FormattedMessage\n                                    id=\"view.instanceedit.title\"\n                                    values={{\n                                        instanceid: this.props.match.params.id,\n                                        instancename: this.state.instance.name\n                                    }}\n                                />\n                            </h3>\n                            <h5 className=\"text-white-50\">\n                                <FormattedMessage id={`view.instanceedit.tabs.${this.state.tab}`} />\n                            </h5>\n                        </Card.Header>\n                        <Tab.Container\n                            mountOnEnter\n                            unmountOnExit\n                            id=\"instanceedit\"\n                            activeKey={this.state.tab}>\n                            <div className=\"d-flex flex-row\">\n                                <Card.Body className=\"flex-grow-0\">{nav()}</Card.Body>\n                                <Card.Body className=\"bg-body\">\n                                    <Tab.Content>\n                                        {InstanceEdit.tabs.map(([tabKey, , Comp]) => {\n                                            return (\n                                                <Tab.Pane eventKey={tabKey} key={tabKey}>\n                                                    {Comp ? <Comp /> : <WIPNotice />}\n                                                </Tab.Pane>\n                                            );\n                                        })}\n                                    </Tab.Content>\n                                </Card.Body>\n                            </div>\n                        </Tab.Container>\n                    </Card>\n                </InstanceEditContext.Provider>\n            );\n        }\n    }\n}\nInstanceEdit.contextType = GeneralContext;\nexport default withRouter(InstanceEdit);\n","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"as\", \"className\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"activeKey\", \"getControlledId\", \"getControllerId\"],\n    _excluded2 = [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, _excluded);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, _excluded2);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;"],"names":["WIPNotice","className","border","id","href","as","VERSION","MODE","window","location","toString","React","JobHistory","instanceEditContext","InstanceEditContext","useState","jobs","setJobs","errors","setErrors","loading","setLoading","RouteData","instance","page","setPage","undefined","maxPage","setMaxPage","response","JobsClient","code","StatusCode","payload","totalPages","content","addError","error","prevState","Array","from","push","onCancel","job","status","instanceid","JobsController","useEffect","loadJobs","text","map","err","index","key","onClose","prev","newarr","sort","a","b","selectPage","newPage","currentPage","InstanceEdit","props","reloadInstance","bind","deleteContextError","parseInt","match","params","state","tab","tabs","Set","instancePermissionSet","deleteError","this","setState","newSet","delete","InstanceClient","response2","InstancePermissionSetClient","add","value","Object","assign","user","context","serverInfo","values","instancename","name","mountOnEnter","unmountOnExit","activeKey","defaultActiveKey","onSelect","eventKey","history","AppRoutes","fill","variant","tabKey","icon","component","bsPrefix","fixedWidth","Comp","Byond","InstanceSettings","contextType","GeneralContext","withRouter","Tab","_React$Component","apply","arguments","prototype","render","Error","Container","Content","Pane","_useUncontrolled","generateCustomChildId","generateChildId","transition","children","useMemo","type","tabContext","getControlledId","getControllerId","_excluded","TabContent","_ref","ref","_ref$as","Component","decoratedBsPrefix","_excluded2","TabPane","_useTabContext","useContext","rest","shouldTransition","active","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","prefix","pane","role","in","displayName"],"sourceRoot":""}