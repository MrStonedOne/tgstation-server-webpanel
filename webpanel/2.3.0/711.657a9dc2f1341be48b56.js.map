{"version":3,"file":"711.657a9dc2f1341be48b56.js","mappings":"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","sources":["webpack://tgstation-server-control-panel/./src/components/utils/WIPNotice.tsx","webpack://tgstation-server-control-panel/./src/components/views/Instance/InstanceEdit.tsx","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Tab.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabContainer.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabContent.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabPane.js"],"sourcesContent":["import React, { ReactNode } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { MODE, VERSION } from \"../../definitions/constants\";\n\nexport default class WIPNotice extends React.Component {\n    public render(): ReactNode {\n        return (\n            <Card className=\"bg-transparent\" border=\"info\">\n                <Card.Header className=\"bg-info text-dark font-weight-bold\">\n                    <FormattedMessage id=\"generic.wip\" />\n                </Card.Header>\n                <Card.Body>\n                    <Card.Title>\n                        <FormattedMessage id=\"generic.wip.desc\" />\n                        <a href=\"https://github.com/tgstation/Tgstation.Server.ControlPanel/releases/latest\">\n                            https://github.com/tgstation/Tgstation.Server.ControlPanel/releases/latest\n                        </a>\n                    </Card.Title>\n                    <Card.Text as={\"pre\"} className=\"bg-transparent text-info\">\n                        <code>\n                            {`Version: ${VERSION}\\nWebpanel Mode: ${MODE}\\nCurrent route: ${window.location.toString()}`}\n                        </code>\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n","import { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { ComponentType } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Tab from \"react-bootstrap/Tab\";\nimport { FormattedMessage } from \"react-intl\";\nimport { RouteComponentProps, withRouter } from \"react-router\";\n\nimport InstanceClient from \"../../../ApiClient/InstanceClient\";\nimport InstancePermissionSetClient from \"../../../ApiClient/InstancePermissionSetClient\";\nimport InternalError from \"../../../ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"../../../ApiClient/models/InternalComms/InternalStatus\";\nimport { GeneralContext } from \"../../../contexts/GeneralContext\";\nimport {\n    InstanceEditContext,\n    UnsafeInstanceEditContext\n} from \"../../../contexts/InstanceEditContext\";\nimport { AppRoutes, RouteData } from \"../../../utils/routes\";\nimport Loading from \"../../utils/Loading\";\nimport WIPNotice from \"../../utils/WIPNotice\";\nimport Byond from \"./Edit/Byond\";\nimport InstanceSettings from \"./Edit/Config\";\n\ntype IProps = RouteComponentProps<{ id: string; tab?: string }>;\ntype IState = Omit<UnsafeInstanceEditContext, \"user\" | \"serverInfo\"> & {\n    tab: string;\n    instanceid: number;\n};\n\nclass InstanceEdit extends React.Component<IProps, IState> {\n    public declare context: GeneralContext;\n    public static tabs: [string, IconProp, ComponentType?][] = [\n        [\"info\", \"info\"],\n        [\"repository\", \"code-branch\"],\n        [\"deployment\", \"hammer\"],\n        [\"dd\", \"server\"],\n        [\"byond\", \"list-ul\", Byond],\n        [\"chatbots\", \"comments\"],\n        [\"files\", \"folder-open\"],\n        [\"users\", \"users\"],\n        [\"config\", \"cogs\", InstanceSettings]\n    ];\n\n    public constructor(props: IProps) {\n        super(props);\n\n        this.reloadInstance = this.reloadInstance.bind(this);\n        this.deleteContextError = this.deleteContextError.bind(this);\n\n        RouteData.selectedinstanceid = parseInt(this.props.match.params.id);\n\n        this.state = {\n            tab: props.match.params.tab ?? InstanceEdit.tabs[0][0],\n            errors: new Set(),\n            instance: null,\n            instancePermissionSet: null,\n            reloadInstance: this.reloadInstance,\n            deleteError: this.deleteContextError,\n            instanceid: parseInt(this.props.match.params.id)\n        };\n    }\n    public deleteContextError(error: InternalError): void {\n        this.setState(prev => {\n            const newSet = new Set(prev.errors);\n            newSet.delete(error);\n            return {\n                errors: newSet\n            };\n        });\n    }\n\n    public async componentDidMount(): Promise<void> {\n        await this.reloadInstance();\n    }\n\n    public async reloadInstance(): Promise<void> {\n        this.setState({\n            instance: null,\n            instancePermissionSet: null\n        });\n        const response = await InstanceClient.getInstance(this.state.instanceid);\n        if (response.code === StatusCode.OK) {\n            this.setState({\n                instance: response.payload\n            });\n\n            const response2 = await InstancePermissionSetClient.getCurrentInstancePermissionSet(\n                this.state.instanceid\n            );\n            if (response2.code === StatusCode.OK) {\n                this.setState({\n                    instancePermissionSet: response2.payload\n                });\n            } else {\n                this.setState(prev => {\n                    const newSet = new Set(prev.errors);\n                    newSet.add(response2.error);\n                    return {\n                        instancePermissionSet: null,\n                        errors: newSet\n                    };\n                });\n            }\n        } else {\n            this.setState(prev => {\n                const newSet = new Set(prev.errors);\n                newSet.add(response.error);\n                return {\n                    instance: null,\n                    errors: newSet\n                };\n            });\n        }\n    }\n\n    public render(): React.ReactNode {\n        if (!this.state.instance || !this.state.instancePermissionSet) {\n            return <Loading text=\"loading.instance\" />;\n        }\n\n        const nav = () => {\n            return (\n                <Nav\n                    defaultActiveKey={this.state.tab}\n                    onSelect={eventKey => {\n                        eventKey = eventKey ?? InstanceEdit.tabs[0][0];\n                        RouteData.selectedinstanceedittab = eventKey;\n                        this.props.history.push(\n                            AppRoutes.instanceedit.link ?? AppRoutes.instanceedit.route\n                        );\n                        this.setState({ tab: eventKey ?? InstanceEdit.tabs[0][0] });\n                    }}\n                    fill\n                    variant=\"pills\"\n                    activeKey={this.state.tab}\n                    className=\"flex-nowrap text-nowrap flex-column hover-bar\">\n                    {InstanceEdit.tabs.map(([tabKey, icon, component]) => {\n                        return (\n                            <Nav.Item key={tabKey}>\n                                <Nav.Link\n                                    eventKey={tabKey}\n                                    bsPrefix=\"nav-link instanceedittab\"\n                                    className={(!component ? \"wip text-white\" : \"\") + \" text-left\"}>\n                                    <React.Fragment>\n                                        <FontAwesomeIcon icon={icon} fixedWidth />\n                                        <div className=\"tab-text d-inline-block\">\n                                            <span className=\"pl-1\">\n                                                <FormattedMessage\n                                                    id={`view.instanceedit.tabs.${tabKey}`}\n                                                />\n                                            </span>\n                                        </div>\n                                    </React.Fragment>\n                                </Nav.Link>\n                            </Nav.Item>\n                        );\n                    })}\n                </Nav>\n            );\n        };\n\n        const test = false;\n\n        if (test) {\n            const Comp = InstanceEdit.tabs.find(tab => tab[0] === this.state.tab)?.[2] ?? WIPNotice;\n            return <Comp />;\n        } else {\n            return (\n                <InstanceEditContext.Provider\n                    value={\n                        Object.assign(\n                            { user: this.context.user, serverInfo: this.context.serverInfo },\n                            this.state\n                        ) as InstanceEditContext\n                    }>\n                    <Card>\n                        <Card.Header className=\"text-center mb-2\">\n                            <h3>\n                                <FormattedMessage\n                                    id=\"view.instanceedit.title\"\n                                    values={{\n                                        instanceid: this.props.match.params.id,\n                                        instancename: this.state.instance.name\n                                    }}\n                                />\n                            </h3>\n                            <h5 className=\"text-white-50\">\n                                <FormattedMessage id={`view.instanceedit.tabs.${this.state.tab}`} />\n                            </h5>\n                        </Card.Header>\n                        <Tab.Container\n                            mountOnEnter\n                            unmountOnExit\n                            id=\"instanceedit\"\n                            activeKey={this.state.tab}>\n                            <div className=\"d-flex flex-row\">\n                                <Card.Body className=\"flex-grow-0\">{nav()}</Card.Body>\n                                <Card.Body className=\"bg-body\">\n                                    <Tab.Content>\n                                        {InstanceEdit.tabs.map(([tabKey, , Comp]) => {\n                                            return (\n                                                <Tab.Pane eventKey={tabKey} key={tabKey}>\n                                                    {Comp ? <Comp /> : <WIPNotice />}\n                                                </Tab.Pane>\n                                            );\n                                        })}\n                                    </Tab.Content>\n                                </Card.Body>\n                            </div>\n                        </Tab.Container>\n                    </Card>\n                </InstanceEditContext.Provider>\n            );\n        }\n    }\n}\nInstanceEdit.contextType = GeneralContext;\nexport default withRouter(InstanceEdit);\n","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"as\", \"className\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"activeKey\", \"getControlledId\", \"getControllerId\"],\n    _excluded2 = [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, _excluded);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, _excluded2);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;"],"names":["WIPNotice","className","border","id","href","as","VERSION","MODE","window","location","toString","React","InstanceEdit","props","reloadInstance","bind","deleteContextError","RouteData","parseInt","match","params","state","tab","tabs","errors","Set","instance","instancePermissionSet","deleteError","instanceid","error","this","setState","prev","newSet","delete","response","InstanceClient","code","StatusCode","payload","response2","InstancePermissionSetClient","add","value","Object","assign","user","context","serverInfo","values","instancename","name","mountOnEnter","unmountOnExit","activeKey","defaultActiveKey","onSelect","eventKey","history","push","AppRoutes","fill","variant","map","tabKey","icon","component","key","bsPrefix","fixedWidth","Comp","text","Byond","InstanceSettings","contextType","GeneralContext","withRouter","Tab","_React$Component","apply","arguments","prototype","render","Error","Container","Content","Pane","_useUncontrolled","generateCustomChildId","generateChildId","transition","children","useMemo","type","tabContext","getControlledId","getControllerId","_excluded","TabContent","_ref","ref","_ref$as","Component","decoratedBsPrefix","_excluded2","TabPane","_useTabContext","useContext","rest","shouldTransition","active","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","prefix","pane","role","in","displayName"],"sourceRoot":""}