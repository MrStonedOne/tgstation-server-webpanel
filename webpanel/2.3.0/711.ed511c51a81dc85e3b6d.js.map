{"version":3,"file":"711.ed511c51a81dc85e3b6d.js","mappings":"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","sources":["webpack://tgstation-server-control-panel/./src/components/views/Instance/Edit/Config.tsx","webpack://tgstation-server-control-panel/./src/components/views/Instance/Edit/JobHistory.tsx","webpack://tgstation-server-control-panel/./src/components/views/Instance/InstanceEdit.tsx","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Tab.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabContainer.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabContent.js","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/TabPane.js"],"sourcesContent":["import React from \"react\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\n\nimport {\n    ConfigurationType,\n    InstanceManagerRights\n} from \"../../../../ApiClient/generatedcode/_enums\";\nimport { InstanceUpdateRequest } from \"../../../../ApiClient/generatedcode/schemas\";\nimport InstanceClient from \"../../../../ApiClient/InstanceClient\";\nimport InternalError, { ErrorCode } from \"../../../../ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"../../../../ApiClient/models/InternalComms/InternalStatus\";\nimport { InstanceEditContext } from \"../../../../contexts/InstanceEditContext\";\nimport { hasInstanceManagerRight, resolvePermissionSet } from \"../../../../utils/misc\";\nimport ErrorAlert from \"../../../utils/ErrorAlert\";\nimport { FieldType } from \"../../../utils/InputField\";\nimport InputForm from \"../../../utils/InputForm\";\n\ninterface IProps extends RouteComponentProps {}\ninterface IState {\n    errors: Array<InternalError<ErrorCode> | undefined>;\n}\n\nclass InstanceSettings extends React.Component<IProps, IState> {\n    public declare context: InstanceEditContext;\n\n    public constructor(props: IProps) {\n        super(props);\n\n        this.editInstance = this.editInstance.bind(this);\n\n        this.state = {\n            errors: []\n        };\n    }\n\n    private addError(error: InternalError<ErrorCode>): void {\n        this.setState(prevState => {\n            const errors = Array.from(prevState.errors);\n            errors.push(error);\n            return {\n                errors\n            };\n        });\n    }\n\n    private async editInstance(instance: Omit<InstanceUpdateRequest, \"id\">) {\n        const response = await InstanceClient.editInstance({\n            ...instance,\n            id: this.context.instance.id\n        });\n        if (response.code === StatusCode.OK) {\n            this.context.reloadInstance();\n        } else {\n            this.addError(response.error);\n        }\n    }\n\n    public render(): React.ReactNode {\n        const checkIMFlag = (flag: InstanceManagerRights) => {\n            return hasInstanceManagerRight(resolvePermissionSet(this.context.user), flag);\n        };\n\n        const fields = {\n            name: {\n                name: \"fields.instance.name\",\n                type: FieldType.String as FieldType.String,\n                defaultValue: this.context.instance.name,\n                disabled: !checkIMFlag(InstanceManagerRights.Rename)\n            },\n            path: {\n                name: \"fields.instance.path\",\n                type: FieldType.String as FieldType.String,\n                defaultValue: this.context.instance.path,\n                disabled: !checkIMFlag(InstanceManagerRights.Relocate)\n            },\n            chatBotLimit: {\n                name: \"fields.instance.chatbotlimit\",\n                type: FieldType.Number as FieldType.Number,\n                min: 0,\n                defaultValue: this.context.instance.chatBotLimit,\n                disabled: !checkIMFlag(InstanceManagerRights.SetChatBotLimit)\n            },\n            autoUpdateInterval: {\n                name: \"fields.instance.autoupdate\",\n                type: FieldType.Number as FieldType.Number,\n                min: 0,\n                defaultValue: this.context.instance.autoUpdateInterval,\n                disabled: !checkIMFlag(InstanceManagerRights.SetAutoUpdate)\n            },\n            configurationType: {\n                name: \"fields.instance.filemode\",\n                type: FieldType.Enum as FieldType.Enum,\n                enum: ConfigurationType,\n                defaultValue: this.context.instance.configurationType,\n                disabled: !checkIMFlag(InstanceManagerRights.SetConfiguration)\n            }\n        };\n\n        return (\n            <div className=\"text-center\">\n                {this.state.errors.map((err, index) => {\n                    if (!err) return;\n                    return (\n                        <ErrorAlert\n                            key={index}\n                            error={err}\n                            onClose={() =>\n                                this.setState(prev => {\n                                    const newarr = Array.from(prev.errors);\n                                    newarr[index] = undefined;\n                                    return {\n                                        errors: newarr\n                                    };\n                                })\n                            }\n                        />\n                    );\n                })}\n\n                <InputForm fields={fields} onSave={this.editInstance} />\n            </div>\n        );\n    }\n}\nInstanceSettings.contextType = InstanceEditContext;\nexport default withRouter(InstanceSettings);\n","import React, { useEffect, useState } from \"react\";\n\nimport JobsClient, { TGSJobResponse } from \"../../../../ApiClient/JobsClient\";\nimport InternalError, { ErrorCode } from \"../../../../ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"../../../../ApiClient/models/InternalComms/InternalStatus\";\nimport JobsController from \"../../../../ApiClient/util/JobsController\";\nimport { InstanceEditContext } from \"../../../../contexts/InstanceEditContext\";\nimport { RouteData } from \"../../../../utils/routes\";\nimport ErrorAlert from \"../../../utils/ErrorAlert\";\nimport JobCard from \"../../../utils/JobCard\";\nimport Loading from \"../../../utils/Loading\";\nimport PageHelper from \"../../../utils/PageHelper\";\n\nexport default function JobHistory(): JSX.Element {\n    const instanceEditContext = React.useContext(InstanceEditContext);\n\n    const [jobs, setJobs] = useState<TGSJobResponse[]>([]);\n    const [errors, setErrors] = useState<Array<InternalError<ErrorCode> | undefined>>([]);\n    const [loading, setLoading] = useState(true);\n    const [page, setPage] = useState(\n        RouteData.jobhistorypage.get(instanceEditContext.instance.id) ?? 1\n    );\n    const [maxPage, setMaxPage] = useState<number | undefined>(undefined);\n\n    //const [];\n\n    useEffect(() => {\n        RouteData.jobhistorypage.set(instanceEditContext.instance.id, page);\n        setLoading(true);\n        void loadJobs();\n    }, [page]);\n\n    useEffect(() => {}, [errors]);\n\n    async function loadJobs() {\n        const response = await JobsClient.listJobs(instanceEditContext.instance.id, { page: page });\n        if (response.code === StatusCode.OK) {\n            if (page > response.payload.totalPages && response.payload.totalPages !== 0) setPage(1);\n            setJobs(response.payload.content);\n            setMaxPage(response.payload.totalPages);\n        } else {\n            addError(response.error);\n        }\n        setLoading(false);\n    }\n\n    function addError(error: InternalError<ErrorCode>): void {\n        setErrors(prevState => {\n            const errors = Array.from(prevState);\n            errors.push(error);\n            return errors;\n        });\n    }\n\n    async function onCancel(job: TGSJobResponse) {\n        const status = await JobsClient.deleteJob(job.instanceid, job.id);\n\n        if (status.code === StatusCode.OK) {\n            JobsController.fastmode = 5;\n        } else {\n            addError(status.error);\n        }\n    }\n\n    if (loading) {\n        return <Loading text=\"loading.instance.jobs.list\" />;\n    }\n\n    return (\n        <div>\n            {errors.map((err, index) => {\n                if (!err) return;\n                return (\n                    <ErrorAlert\n                        key={index}\n                        error={err}\n                        onClose={() =>\n                            setErrors(prev => {\n                                const newarr = Array.from(prev);\n                                newarr[index] = undefined;\n                                return newarr;\n                            })\n                        }\n                    />\n                );\n            })}\n            {jobs\n                .sort((a, b) => b.id - a.id)\n                .filter(job => !!job.stoppedAt)\n                .map(job => (\n                    <JobCard job={job} key={job.id} onCancel={onCancel} />\n                ))}\n            <PageHelper\n                selectPage={newPage => setPage(newPage)}\n                totalPages={maxPage ?? 1}\n                currentPage={page}\n            />\n        </div>\n    );\n}\n","import { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { ComponentType } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Tab from \"react-bootstrap/Tab\";\nimport { FormattedMessage } from \"react-intl\";\nimport { RouteComponentProps, withRouter } from \"react-router\";\n\nimport { ByondRights, DreamDaemonRights } from \"../../../ApiClient/generatedcode/_enums\";\nimport { InstancePermissionSetResponse } from \"../../../ApiClient/generatedcode/schemas\";\nimport InstanceClient from \"../../../ApiClient/InstanceClient\";\nimport InstancePermissionSetClient from \"../../../ApiClient/InstancePermissionSetClient\";\nimport InternalError from \"../../../ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"../../../ApiClient/models/InternalComms/InternalStatus\";\nimport configOptions, { InstanceEditSidebar } from \"../../../ApiClient/util/config\";\nimport { GeneralContext } from \"../../../contexts/GeneralContext\";\nimport {\n    InstanceEditContext,\n    UnsafeInstanceEditContext\n} from \"../../../contexts/InstanceEditContext\";\nimport { AppRoutes, RouteData } from \"../../../utils/routes\";\nimport AccessDenied from \"../../utils/AccessDenied\";\nimport Loading from \"../../utils/Loading\";\nimport WIPNotice from \"../../utils/WIPNotice\";\nimport Byond from \"./Edit/Byond\";\nimport InstanceSettings from \"./Edit/Config\";\nimport JobHistory from \"./Edit/JobHistory\";\nimport Server from \"./Edit/Server\";\n\ntype IProps = RouteComponentProps<{ id: string; tab?: string }>;\ntype IState = Omit<UnsafeInstanceEditContext, \"user\" | \"serverInfo\"> & {\n    tab: string;\n    instanceid: number;\n};\n\nconst minimumByondPerms =\n    ByondRights.ReadActive |\n    ByondRights.ListInstalled |\n    ByondRights.InstallOfficialOrChangeActiveVersion |\n    ByondRights.InstallCustomVersion;\n\nconst minimumServerPerms =\n    DreamDaemonRights.SetPort |\n    DreamDaemonRights.SetAutoStart |\n    DreamDaemonRights.SetSecurity |\n    DreamDaemonRights.ReadMetadata |\n    DreamDaemonRights.SetWebClient |\n    DreamDaemonRights.SoftRestart |\n    DreamDaemonRights.SoftShutdown |\n    DreamDaemonRights.Restart |\n    DreamDaemonRights.Shutdown |\n    DreamDaemonRights.Start |\n    DreamDaemonRights.SetStartupTimeout |\n    DreamDaemonRights.SetHeartbeatInterval |\n    DreamDaemonRights.CreateDump |\n    DreamDaemonRights.SetTopicTimeout |\n    DreamDaemonRights.SetAdditionalParameters |\n    DreamDaemonRights.SetVisibility;\n\nclass InstanceEdit extends React.Component<IProps, IState> {\n    public declare context: GeneralContext;\n    public static tabs: [\n        string,\n        IconProp,\n        (\n            instancePermissionSet: InstancePermissionSetResponse,\n            generalContext: GeneralContext\n        ) => boolean,\n        ComponentType?\n    ][] = [\n        [\"info\", \"info\", () => true],\n        [\"repository\", \"code-branch\", () => true],\n        [\"deployment\", \"hammer\", () => true],\n        [\n            \"dd\",\n            \"server\",\n            instancePermissionSet =>\n                !!(instancePermissionSet.dreamDaemonRights & minimumServerPerms),\n            Server\n        ],\n        [\n            \"byond\",\n            \"list-ul\",\n            instancePermissionSet => !!(instancePermissionSet.byondRights & minimumByondPerms),\n            Byond\n        ],\n        [\"chatbots\", \"comments\", () => true],\n        [\"files\", \"folder-open\", () => true],\n        [\"users\", \"users\", () => true],\n        [\"jobs\", \"stream\", () => true, JobHistory],\n        [\"config\", \"cogs\", () => true, InstanceSettings]\n    ];\n\n    public constructor(props: IProps) {\n        super(props);\n\n        this.reloadInstance = this.reloadInstance.bind(this);\n        this.deleteContextError = this.deleteContextError.bind(this);\n\n        RouteData.selectedinstanceid = parseInt(this.props.match.params.id);\n\n        this.state = {\n            tab: props.match.params.tab ?? InstanceEdit.tabs[0][0],\n            errors: new Set(),\n            instance: null,\n            instancePermissionSet: null,\n            reloadInstance: this.reloadInstance,\n            deleteError: this.deleteContextError,\n            instanceid: parseInt(this.props.match.params.id)\n        };\n    }\n    public deleteContextError(error: InternalError): void {\n        this.setState(prev => {\n            const newSet = new Set(prev.errors);\n            newSet.delete(error);\n            return {\n                errors: newSet\n            };\n        });\n    }\n\n    public async componentDidMount(): Promise<void> {\n        await this.reloadInstance();\n    }\n\n    public componentDidUpdate(prevProps: Readonly<IProps>) {\n        if (\n            this.props.match.params.tab &&\n            prevProps.match.params.tab != this.props.match.params.tab\n        ) {\n            this.setState({\n                tab: this.props.match.params.tab\n            });\n        }\n    }\n\n    public async reloadInstance(): Promise<void> {\n        this.setState({\n            instance: null,\n            instancePermissionSet: null\n        });\n        const response = await InstanceClient.getInstance(this.state.instanceid);\n        if (response.code === StatusCode.OK) {\n            this.setState({\n                instance: response.payload\n            });\n\n            const response2 = await InstancePermissionSetClient.getCurrentInstancePermissionSet(\n                this.state.instanceid\n            );\n            if (response2.code === StatusCode.OK) {\n                this.setState({\n                    instancePermissionSet: response2.payload\n                });\n            } else {\n                this.setState(prev => {\n                    const newSet = new Set(prev.errors);\n                    newSet.add(response2.error);\n                    return {\n                        instancePermissionSet: null,\n                        errors: newSet\n                    };\n                });\n            }\n        } else {\n            this.setState(prev => {\n                const newSet = new Set(prev.errors);\n                newSet.add(response.error);\n                return {\n                    instance: null,\n                    errors: newSet\n                };\n            });\n        }\n    }\n\n    public render(): React.ReactNode {\n        if (!this.state.instance || !this.state.instancePermissionSet) {\n            return <Loading text=\"loading.instance\" />;\n        }\n\n        const nav = () => {\n            return (\n                <Nav\n                    defaultActiveKey={this.state.tab}\n                    onSelect={eventKey => {\n                        eventKey = eventKey ?? InstanceEdit.tabs[0][0];\n                        RouteData.selectedinstanceedittab = eventKey;\n                        this.props.history.push(\n                            AppRoutes.instanceedit.link ?? AppRoutes.instanceedit.route\n                        );\n                        this.setState({ tab: eventKey ?? InstanceEdit.tabs[0][0] });\n                    }}\n                    fill\n                    variant=\"pills\"\n                    activeKey={this.state.tab}\n                    className={\n                        \"flex-nowrap text-nowrap flex-column hover-bar sticky-top \" +\n                        (configOptions.instanceeditsidebar.value === InstanceEditSidebar.COLLAPSE\n                            ? \"pin-close\"\n                            : configOptions.instanceeditsidebar.value === InstanceEditSidebar.EXPAND\n                            ? \"pin-open\"\n                            : \"\")\n                    }\n                    style={{ top: \"8em\" }}>\n                    {InstanceEdit.tabs.map(([tabKey, icon, accessCb, component]) => {\n                        if (!this.state.instancePermissionSet) {\n                            throw Error(\n                                \"this.state.instancePermissionSet is null in instanceedit nav map\"\n                            );\n                        }\n                        const wip = !component;\n                        const accessDenied = !accessCb(\n                            this.state.instancePermissionSet,\n                            this.context\n                        );\n\n                        return (\n                            <Nav.Item key={tabKey}>\n                                <Nav.Link\n                                    eventKey={tabKey}\n                                    bsPrefix=\"nav-link instanceedittab\"\n                                    className={\n                                        (wip ? \"no-access text-white\" : \"\") +\n                                        (accessDenied ? \"no-access text-white font-italic\" : \"\") +\n                                        \" text-left\"\n                                    }>\n                                    <React.Fragment>\n                                        <FontAwesomeIcon\n                                            icon={accessDenied ? \"lock\" : icon}\n                                            fixedWidth\n                                        />\n                                        <div\n                                            className={\n                                                \"tab-text d-inline-block \" +\n                                                (accessDenied ? \"font-weight-lighter\" : \"\")\n                                            }>\n                                            <span className=\"pl-1\">\n                                                <FormattedMessage\n                                                    id={`view.instanceedit.tabs.${tabKey}`}\n                                                />\n                                            </span>\n                                        </div>\n                                    </React.Fragment>\n                                </Nav.Link>\n                            </Nav.Item>\n                        );\n                    })}\n                </Nav>\n            );\n        };\n\n        return (\n            <InstanceEditContext.Provider\n                value={\n                    Object.assign(\n                        { user: this.context.user, serverInfo: this.context.serverInfo },\n                        this.state\n                    ) as InstanceEditContext\n                }>\n                <Card>\n                    <Card.Header className=\"text-center mb-2 sticky-top\">\n                        <h3>\n                            <FormattedMessage\n                                id=\"view.instanceedit.title\"\n                                values={{\n                                    instanceid: this.props.match.params.id,\n                                    instancename: this.state.instance.name\n                                }}\n                            />\n                        </h3>\n                        <h5 className=\"text-white-50\">\n                            <FormattedMessage id={`view.instanceedit.tabs.${this.state.tab}`} />\n                        </h5>\n                    </Card.Header>\n                    <Tab.Container\n                        mountOnEnter\n                        unmountOnExit\n                        id=\"instanceedit\"\n                        activeKey={this.state.tab}>\n                        <div className=\"d-flex flex-row\">\n                            <Card.Body className=\"flex-grow-0\">{nav()}</Card.Body>\n                            <Card.Body className=\"bg-body\">\n                                <Tab.Content>\n                                    {InstanceEdit.tabs.map(([tabKey, , accessCb, Comp]) => {\n                                        if (!this.state.instancePermissionSet) {\n                                            throw Error(\n                                                \"this.state.instancePermissionSet is null in render card map\"\n                                            );\n                                        }\n                                        return (\n                                            <Tab.Pane eventKey={tabKey} key={tabKey}>\n                                                {Comp ? (\n                                                    !accessCb(\n                                                        this.state.instancePermissionSet,\n                                                        this.context\n                                                    ) ? (\n                                                        <AccessDenied />\n                                                    ) : (\n                                                        <Comp />\n                                                    )\n                                                ) : (\n                                                    <WIPNotice />\n                                                )}\n                                            </Tab.Pane>\n                                        );\n                                    })}\n                                </Tab.Content>\n                            </Card.Body>\n                        </div>\n                    </Tab.Container>\n                </Card>\n            </InstanceEditContext.Provider>\n        );\n    }\n}\nInstanceEdit.contextType = GeneralContext;\nexport default withRouter(InstanceEdit);\n","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\nvar Tab = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n    return null;\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React, { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer = function TabContainer(props) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      id = _useUncontrolled.id,\n      generateCustomChildId = _useUncontrolled.generateChildId,\n      onSelect = _useUncontrolled.onSelect,\n      activeKey = _useUncontrolled.activeKey,\n      transition = _useUncontrolled.transition,\n      mountOnEnter = _useUncontrolled.mountOnEnter,\n      unmountOnExit = _useUncontrolled.unmountOnExit,\n      children = _useUncontrolled.children;\n\n  var generateChildId = useMemo(function () {\n    return generateCustomChildId || function (key, type) {\n      return id ? id + \"-\" + type + \"-\" + key : null;\n    };\n  }, [id, generateCustomChildId]);\n  var tabContext = useMemo(function () {\n    return {\n      onSelect: onSelect,\n      activeKey: activeKey,\n      transition: transition,\n      mountOnEnter: mountOnEnter || false,\n      unmountOnExit: unmountOnExit || false,\n      getControlledId: function getControlledId(key) {\n        return generateChildId(key, 'tabpane');\n      },\n      getControllerId: function getControllerId(key) {\n        return generateChildId(key, 'tab');\n      }\n    };\n  }, [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: tabContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, children));\n};\n\nexport default TabContainer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"as\", \"className\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar TabContent = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix)\n  }));\n});\nexport default TabContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"activeKey\", \"getControlledId\", \"getControllerId\"],\n    _excluded2 = [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, _excluded);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, _excluded2);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n  var pane = /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = /*#__PURE__*/React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/React.createElement(TabContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;"],"names":["InstanceSettings","props","editInstance","bind","state","errors","error","this","setState","prevState","Array","from","push","instance","response","InstanceClient","id","context","code","StatusCode","reloadInstance","addError","checkIMFlag","flag","hasInstanceManagerRight","resolvePermissionSet","user","fields","name","type","FieldType","defaultValue","disabled","InstanceManagerRights","path","chatBotLimit","min","autoUpdateInterval","configurationType","enum","ConfigurationType","className","map","err","index","key","onClose","prev","newarr","undefined","onSave","React","contextType","InstanceEditContext","withRouter","JobHistory","instanceEditContext","useState","jobs","setJobs","setErrors","loading","setLoading","RouteData","page","setPage","maxPage","setMaxPage","JobsClient","payload","totalPages","content","onCancel","job","status","instanceid","JobsController","useEffect","loadJobs","text","sort","a","b","filter","stoppedAt","selectPage","newPage","currentPage","minimumByondPerms","ByondRights","minimumServerPerms","DreamDaemonRights","InstanceEdit","deleteContextError","parseInt","match","params","tab","tabs","Set","instancePermissionSet","deleteError","newSet","delete","prevProps","response2","InstancePermissionSetClient","add","value","Object","assign","serverInfo","values","instancename","mountOnEnter","unmountOnExit","activeKey","defaultActiveKey","onSelect","eventKey","history","AppRoutes","fill","variant","configOptions","InstanceEditSidebar","style","top","tabKey","icon","accessCb","component","Error","wip","accessDenied","bsPrefix","fixedWidth","Comp","dreamDaemonRights","Server","byondRights","Byond","GeneralContext","Tab","_React$Component","apply","arguments","prototype","render","Container","Content","Pane","_useUncontrolled","generateCustomChildId","generateChildId","transition","children","useMemo","tabContext","getControlledId","getControllerId","_excluded","TabContent","_ref","ref","_ref$as","as","Component","decoratedBsPrefix","_excluded2","TabPane","_useTabContext","useContext","rest","shouldTransition","active","useTabContext","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","prefix","pane","role","in","displayName"],"sourceRoot":""}