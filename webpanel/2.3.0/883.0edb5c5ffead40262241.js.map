{"version":3,"file":"883.0edb5c5ffead40262241.js","mappings":"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","sources":["webpack://tgstation-server-control-panel/./src/components/utils/WIPNotice.tsx","webpack://tgstation-server-control-panel/./src/components/views/Instance/Edit/Server.tsx","webpack://tgstation-server-control-panel/./node_modules/react-bootstrap/esm/Badge.js"],"sourcesContent":["import React, { ReactNode } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { MODE, VERSION } from \"../../definitions/constants\";\n\nexport default class WIPNotice extends React.Component {\n    public render(): ReactNode {\n        return (\n            <Card className=\"bg-transparent\" border=\"info\">\n                <Card.Header className=\"bg-info text-dark font-weight-bold\">\n                    <FormattedMessage id=\"generic.wip\" />\n                </Card.Header>\n                <Card.Body>\n                    <Card.Title>\n                        <FormattedMessage id=\"generic.wip.desc\" />\n                        <a href=\"https://github.com/tgstation/Tgstation.Server.ControlPanel/releases/latest\">\n                            https://github.com/tgstation/Tgstation.Server.ControlPanel/releases/latest\n                        </a>\n                    </Card.Title>\n                    <Card.Text as={\"pre\"} className=\"bg-transparent text-info\">\n                        <code>\n                            {`Version: ${VERSION}\\nWebpanel Mode: ${MODE}\\nCurrent route: ${window.location.toString()}`}\n                        </code>\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Button from \"react-bootstrap/Button\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport DreamDaemonClient from \"../../../../ApiClient/DreamDaemonClient\";\nimport {\n    DreamDaemonRights,\n    DreamDaemonSecurity,\n    DreamDaemonVisibility,\n    WatchdogStatus\n} from \"../../../../ApiClient/generatedcode/_enums\";\nimport { DreamDaemonResponse } from \"../../../../ApiClient/generatedcode/schemas\";\nimport InternalError, { ErrorCode } from \"../../../../ApiClient/models/InternalComms/InternalError\";\nimport { StatusCode } from \"../../../../ApiClient/models/InternalComms/InternalStatus\";\nimport JobsController from \"../../../../ApiClient/util/JobsController\";\nimport { InstanceEditContext } from \"../../../../contexts/InstanceEditContext\";\nimport { hasDreamDaemonRight } from \"../../../../utils/misc\";\nimport { addError, displayErrors } from \"../../../utils/ErrorAlert\";\nimport GenericAlert from \"../../../utils/GenericAlert\";\nimport InputField, { FieldType } from \"../../../utils/InputField\";\nimport InputForm from \"../../../utils/InputForm\";\nimport Loading from \"../../../utils/Loading\";\nimport WIPNotice from \"../../../utils/WIPNotice\";\n\nenum GracefulAction {\n    None,\n    Stop,\n    Restart\n}\n\nexport default function Server(): JSX.Element {\n    const instanceEditContext = useContext(InstanceEditContext);\n    const [watchdogSettings, setWatchdogSettings] = useState<DreamDaemonResponse>();\n    const [loading, setLoading] = useState(false);\n    const errorState = useState<Array<InternalError<ErrorCode> | undefined>>([]);\n    useEffect(() => void loadWatchdogSettings(), []);\n\n    async function loadWatchdogSettings(): Promise<void> {\n        if (\n            !hasDreamDaemonRight(\n                instanceEditContext.instancePermissionSet,\n                DreamDaemonRights.ReadMetadata\n            )\n        ) {\n            return setWatchdogSettings({});\n        }\n\n        const response = await DreamDaemonClient.getWatchdogStatus(instanceEditContext.instance.id);\n        if (response.code === StatusCode.ERROR) {\n            addError(errorState, response.error);\n        } else {\n            setWatchdogSettings(response.payload);\n        }\n    }\n    async function saveWatchdogSettings(newSettings: DreamDaemonResponse): Promise<void> {\n        setLoading(true);\n        const response = await DreamDaemonClient.updateWatchdogStatus(\n            instanceEditContext.instance.id,\n            newSettings\n        );\n        if (response.code === StatusCode.ERROR) {\n            addError(errorState, response.error);\n        }\n        await loadWatchdogSettings();\n        setLoading(false);\n    }\n\n    async function startWatchdog(): Promise<void> {\n        setLoading(true);\n        const response = await DreamDaemonClient.startWatchdog(instanceEditContext.instance.id);\n        if (response.code === StatusCode.ERROR) {\n            addError(errorState, response.error);\n        } else {\n            JobsController.registerCallback(response.payload.id, () => void loadWatchdogSettings());\n            JobsController.fastmode = 5;\n            await loadWatchdogSettings();\n        }\n        setLoading(false);\n    }\n\n    async function stopWatchdog(): Promise<void> {\n        setLoading(true);\n        const response = await DreamDaemonClient.stopWatchdog(instanceEditContext.instance.id);\n        if (response.code === StatusCode.ERROR) {\n            addError(errorState, response.error);\n        } else {\n            await loadWatchdogSettings();\n        }\n        setLoading(false);\n    }\n\n    async function restartWatchdog(): Promise<void> {\n        setLoading(true);\n        const response = await DreamDaemonClient.restartWatchdog(instanceEditContext.instance.id);\n        if (response.code === StatusCode.ERROR) {\n            addError(errorState, response.error);\n        } else {\n            JobsController.registerCallback(response.payload.id, () => void loadWatchdogSettings());\n            JobsController.fastmode = 5;\n            await loadWatchdogSettings();\n        }\n        setLoading(false);\n    }\n\n    async function dumpWatchdog(): Promise<void> {\n        setLoading(true);\n        const response = await DreamDaemonClient.dumpWatchdog(instanceEditContext.instance.id);\n        if (response.code === StatusCode.ERROR) {\n            addError(errorState, response.error);\n        } else {\n            JobsController.fastmode = 5;\n        }\n        setLoading(false);\n    }\n\n    if (!watchdogSettings) {\n        return <Loading text=\"loading.instance.server\" />;\n    }\n\n    if (loading) {\n        return <Loading />;\n    }\n\n    const fields = {\n        autoStart: {\n            type: FieldType.Boolean as FieldType.Boolean,\n            name: \"fields.instance.watchdog.autostart\",\n            defaultValue: watchdogSettings.autoStart,\n            disabled: !hasDreamDaemonRight(\n                instanceEditContext.instancePermissionSet,\n                DreamDaemonRights.SetAutoStart\n            )\n        },\n        port: {\n            type: FieldType.Number as FieldType.Number,\n            name: \"fields.instance.watchdog.port\",\n            defaultValue: watchdogSettings.port,\n            min: 0,\n            max: 65535,\n            disabled: !hasDreamDaemonRight(\n                instanceEditContext.instancePermissionSet,\n                DreamDaemonRights.SetPort\n            )\n        },\n        visibility: {\n            type: FieldType.Enum as FieldType.Enum,\n            name: \"fields.instance.watchdog.visibility\",\n            defaultValue: watchdogSettings.visibility,\n            enum: DreamDaemonVisibility,\n            disabled: !hasDreamDaemonRight(\n                instanceEditContext.instancePermissionSet,\n                DreamDaemonRights.SetVisibility\n            )\n        },\n        securityLevel: {\n            type: FieldType.Enum as FieldType.Enum,\n            name: \"fields.instance.watchdog.securitylevel\",\n            defaultValue: watchdogSettings.securityLevel,\n            enum: DreamDaemonSecurity,\n            disabled: !hasDreamDaemonRight(\n                instanceEditContext.instancePermissionSet,\n                DreamDaemonRights.SetSecurity\n            )\n        },\n        startupTimeout: {\n            type: FieldType.Number as FieldType.Number,\n            name: \"fields.instance.watchdog.timeout.startup\",\n            defaultValue: watchdogSettings.startupTimeout,\n            min: 0,\n            disabled: !hasDreamDaemonRight(\n                instanceEditContext.instancePermissionSet,\n                DreamDaemonRights.SetStartupTimeout\n            )\n        },\n        topicRequestTimeout: {\n            type: FieldType.Number as FieldType.Number,\n            name: \"fields.instance.watchdog.timeout.topic\",\n            defaultValue: watchdogSettings.topicRequestTimeout,\n            min: 0,\n            disabled: !hasDreamDaemonRight(\n                instanceEditContext.instancePermissionSet,\n                DreamDaemonRights.SetTopicTimeout\n            )\n        },\n        heartbeatSeconds: {\n            type: FieldType.Number as FieldType.Number,\n            name: \"fields.instance.watchdog.heartbeat\",\n            defaultValue: watchdogSettings.heartbeatSeconds,\n            min: 0,\n            disabled: !hasDreamDaemonRight(\n                instanceEditContext.instancePermissionSet,\n                DreamDaemonRights.SetHeartbeatInterval\n            )\n        },\n        allowWebClient: {\n            type: FieldType.Boolean as FieldType.Boolean,\n            name: \"fields.instance.watchdog.allowwebclient\",\n            defaultValue: watchdogSettings.allowWebClient,\n            disabled: !hasDreamDaemonRight(\n                instanceEditContext.instancePermissionSet,\n                DreamDaemonRights.SetWebClient\n            )\n        },\n        additionalParameters: {\n            type: FieldType.String as FieldType.String,\n            name: \"fields.instance.watchdog.additionalparams\",\n            defaultValue: watchdogSettings.additionalParameters,\n            disabled: !hasDreamDaemonRight(\n                instanceEditContext.instancePermissionSet,\n                DreamDaemonRights.SetAdditionalParameters\n            )\n        }\n    };\n\n    const anyEditableField = Object.values(fields).some(field => !field.disabled);\n\n    const no_perm_tooltip = (\n        <Tooltip id=\"generic.no_perm\">\n            <FormattedMessage id=\"generic.no_perm\" />\n        </Tooltip>\n    );\n\n    const canStart = hasDreamDaemonRight(\n        instanceEditContext.instancePermissionSet,\n        DreamDaemonRights.Start\n    );\n    const canStop = hasDreamDaemonRight(\n        instanceEditContext.instancePermissionSet,\n        DreamDaemonRights.Shutdown\n    );\n    const canRestart = hasDreamDaemonRight(\n        instanceEditContext.instancePermissionSet,\n        DreamDaemonRights.Restart\n    );\n    const canDump = hasDreamDaemonRight(\n        instanceEditContext.instancePermissionSet,\n        DreamDaemonRights.CreateDump\n    );\n    const canMetadata = hasDreamDaemonRight(\n        instanceEditContext.instancePermissionSet,\n        DreamDaemonRights.ReadMetadata\n    );\n    const canGracefulAny =\n        hasDreamDaemonRight(\n            instanceEditContext.instancePermissionSet,\n            DreamDaemonRights.SoftShutdown\n        ) ||\n        hasDreamDaemonRight(\n            instanceEditContext.instancePermissionSet,\n            DreamDaemonRights.SoftRestart\n        );\n    const canActionAny = canStart || canStop || canRestart || canDump;\n\n    return (\n        <div>\n            {displayErrors(errorState)}\n            <h2 className=\"text-center\">\n                <FormattedMessage id=\"view.instance.server.status\" />\n                <Badge\n                    pill\n                    variant={\n                        watchdogSettings.status === WatchdogStatus.Online\n                            ? \"success\"\n                            : watchdogSettings.status === WatchdogStatus.Offline\n                            ? \"danger\"\n                            : \"warning\"\n                    }>\n                    <FormattedMessage\n                        id={`view.instance.server.status.${\n                            WatchdogStatus[watchdogSettings.status!]\n                        }`}\n                    />\n                </Badge>\n            </h2>\n            <hr />\n            <h3 className=\"text-center\">\n                <FormattedMessage id=\"view.instance.server.settings\" />\n            </h3>\n            {!canMetadata ? (\n                anyEditableField ? (\n                    <GenericAlert title=\"view.instance.server.no_metadata\" />\n                ) : (\n                    <GenericAlert title=\"view.instance.server.no_metadata_and_no_settings\" />\n                )\n            ) : null}\n            <InputForm fields={fields} onSave={saveWatchdogSettings} hideDisabled={!canMetadata} />\n            <hr />\n            <h3 className=\"text-center\">\n                <FormattedMessage id=\"view.instance.server.actions\" />\n            </h3>\n            {canActionAny ? (\n                <>\n                    {!canMetadata ? (\n                        <GenericAlert title=\"view.instance.server.no_metadata_actions\" />\n                    ) : null}\n                    <div className=\"text-center mb-3\">\n                        <OverlayTrigger\n                            overlay={no_perm_tooltip}\n                            show={canStart ? false : undefined}>\n                            <Button\n                                variant=\"success\"\n                                className=\"mx-2\"\n                                onClick={startWatchdog}\n                                disabled={\n                                    (canMetadata &&\n                                        watchdogSettings.status != WatchdogStatus.Offline) ||\n                                    !canStart\n                                }>\n                                <FormattedMessage id=\"view.instance.server.start\" />\n                            </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                            overlay={no_perm_tooltip}\n                            show={canStop ? false : undefined}>\n                            <Button\n                                variant=\"danger\"\n                                className=\"mx-2\"\n                                onClick={stopWatchdog}\n                                disabled={\n                                    (canMetadata &&\n                                        watchdogSettings.status != WatchdogStatus.Online) ||\n                                    !canStop\n                                }>\n                                <FormattedMessage id=\"view.instance.server.stop\" />\n                            </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                            overlay={no_perm_tooltip}\n                            show={canRestart ? false : undefined}>\n                            <Button\n                                variant=\"warning\"\n                                className=\"mx-2\"\n                                onClick={restartWatchdog}\n                                disabled={\n                                    (canMetadata &&\n                                        watchdogSettings.status != WatchdogStatus.Online) ||\n                                    !canRestart\n                                }>\n                                <FormattedMessage id=\"view.instance.server.restart\" />\n                            </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                            overlay={no_perm_tooltip}\n                            show={canDump ? false : undefined}>\n                            <Button\n                                variant=\"info\"\n                                className=\"mx-2\"\n                                onClick={dumpWatchdog}\n                                disabled={\n                                    (canMetadata &&\n                                        watchdogSettings.status != WatchdogStatus.Online) ||\n                                    !canDump\n                                }>\n                                <FormattedMessage id=\"view.instance.server.dump\" />\n                            </Button>\n                        </OverlayTrigger>\n                    </div>\n                </>\n            ) : (\n                <GenericAlert title=\"view.instance.server.no_actions\" />\n            )}\n            {!canMetadata && canGracefulAny ? (\n                <GenericAlert title=\"view.instance.server.no_metadata_graceful\" />\n            ) : null}\n\n            {canMetadata || canGracefulAny ? (\n                <div className=\"w-75 mx-auto\">\n                    <InputField\n                        name=\"view.instance.graceful\"\n                        type={FieldType.Enum}\n                        enum={GracefulAction}\n                        tooltip=\"view.instance.graceful.desc\"\n                        defaultValue={\n                            watchdogSettings.softRestart\n                                ? GracefulAction.Restart\n                                : watchdogSettings.softShutdown\n                                ? GracefulAction.Stop\n                                : GracefulAction.None\n                        }\n                        disabled={!canGracefulAny}\n                        onChange={_result => {\n                            const result = _result as GracefulAction;\n\n                            switch (result) {\n                                case GracefulAction.None:\n                                    if (\n                                        !watchdogSettings?.softRestart &&\n                                        !watchdogSettings?.softShutdown\n                                    )\n                                        return;\n                                    void saveWatchdogSettings({\n                                        softShutdown: watchdogSettings.softShutdown\n                                            ? false\n                                            : undefined,\n                                        softRestart: watchdogSettings.softRestart\n                                            ? false\n                                            : undefined\n                                    });\n                                    break;\n                                case GracefulAction.Stop:\n                                    if (watchdogSettings?.softShutdown) return;\n                                    void saveWatchdogSettings({\n                                        softShutdown: true\n                                    });\n                                    break;\n                                case GracefulAction.Restart:\n                                    if (watchdogSettings?.softRestart) return;\n                                    void saveWatchdogSettings({\n                                        softRestart: true\n                                    });\n                                    break;\n                            }\n                        }}\n                    />\n                </div>\n            ) : canActionAny ? (\n                <GenericAlert title=\"view.instance.server.no_graceful\" />\n            ) : null}\n            <hr />\n            <h3 className=\"text-center\">\n                <FormattedMessage id=\"view.instance.server.deployment_info\" />\n            </h3>\n            <WIPNotice />\n        </div>\n    );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;"],"names":["WIPNotice","className","border","id","href","as","VERSION","MODE","window","location","toString","React","GracefulAction","Server","instanceEditContext","useContext","InstanceEditContext","useState","watchdogSettings","setWatchdogSettings","loading","setLoading","errorState","loadWatchdogSettings","hasDreamDaemonRight","instancePermissionSet","DreamDaemonRights","response","DreamDaemonClient","instance","code","StatusCode","addError","error","payload","saveWatchdogSettings","newSettings","JobsController","useEffect","text","fields","autoStart","type","FieldType","name","defaultValue","disabled","port","min","max","visibility","enum","DreamDaemonVisibility","securityLevel","DreamDaemonSecurity","startupTimeout","topicRequestTimeout","heartbeatSeconds","allowWebClient","additionalParameters","anyEditableField","Object","values","some","field","no_perm_tooltip","canStart","canStop","canRestart","canDump","canMetadata","canGracefulAny","canActionAny","displayErrors","pill","variant","status","WatchdogStatus","title","onSave","hideDisabled","overlay","show","undefined","onClick","tooltip","softRestart","Restart","softShutdown","Stop","None","onChange","_result","_excluded","Badge","_ref","ref","bsPrefix","_ref$as","Component","props","prefix","displayName","defaultProps"],"sourceRoot":""}